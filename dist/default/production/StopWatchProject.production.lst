

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Jun 04 18:18:48 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,inline
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,inline
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,inline
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37   000000                     
    38                           ; Version 2.40
    39                           ; Generated 17/11/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4620 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73   000000                     
    74                           	psect	idataCOMRAM
    75   000B82                     __pidataCOMRAM:
    76                           	callstack 0
    77                           
    78                           ;initializer for _port_registers
    79   000B82  80                 	db	128
    80   000B83  0F                 	db	15
    81   000B84  81                 	db	129
    82   000B85  0F                 	db	15
    83   000B86  82                 	db	130
    84   000B87  0F                 	db	15
    85   000B88  83                 	db	131
    86   000B89  0F                 	db	15
    87   000B8A  84                 	db	132
    88   000B8B  0F                 	db	15
    89                           
    90                           ;initializer for _lat_registers
    91   000B8C  89                 	db	137
    92   000B8D  0F                 	db	15
    93   000B8E  8A                 	db	138
    94   000B8F  0F                 	db	15
    95   000B90  8B                 	db	139
    96   000B91  0F                 	db	15
    97   000B92  8C                 	db	140
    98   000B93  0F                 	db	15
    99   000B94  8D                 	db	141
   100   000B95  0F                 	db	15
   101                           
   102                           ;initializer for _tris_registers
   103   000B96  92                 	db	146
   104   000B97  0F                 	db	15
   105   000B98  93                 	db	147
   106   000B99  0F                 	db	15
   107   000B9A  94                 	db	148
   108   000B9B  0F                 	db	15
   109   000B9C  95                 	db	149
   110   000B9D  0F                 	db	15
   111   000B9E  96                 	db	150
   112   000B9F  0F                 	db	15
   113                           
   114                           ;initializer for _Timer1_Obj
   115   000BA0  0C                 	db	low _Timer1_Interrupt
   116   000BA1  0A                 	db	high _Timer1_Interrupt
   117   000BA2  0000               	dw	0
   118   000BA4  00                 	db	0
   119                           
   120                           ;initializer for _Seg_Obj
   121   000BA5  02                 	db	2
   122   000BA6  0A                 	db	10
   123   000BA7  12                 	db	18
   124   000BA8  1A                 	db	26
   125   000BA9  01                 	db	1
   126                           
   127                           ;initializer for _Btn3
   128   000BAA  50                 	db	80
   129   000BAB  00                 	db	0
   130   000BAC  01                 	db	1
   131                           
   132                           ;initializer for _Btn2
   133   000BAD  48                 	db	72
   134   000BAE  00                 	db	0
   135   000BAF  01                 	db	1
   136                           
   137                           ;initializer for _Btn1
   138   000BB0  40                 	db	64
   139   000BB1  00                 	db	0
   140   000BB2  01                 	db	1
   141                           
   142                           ;initializer for _Enable6
   143   000BB3  2B                 	db	43
   144                           
   145                           ;initializer for _Enable5
   146   000BB4  23                 	db	35
   147                           
   148                           ;initializer for _Enable4
   149   000BB5  1B                 	db	27
   150                           
   151                           ;initializer for _Enable3
   152   000BB6  13                 	db	19
   153                           
   154                           ;initializer for _Enable2
   155   000BB7  0B                 	db	11
   156                           
   157                           ;initializer for _Enable1
   158   000BB8  03                 	db	3
   159                           
   160                           ;initializer for _Button3Status
   161   000BB9  01                 	db	1
   162                           
   163                           ;initializer for _Button2Status
   164   000BBA  01                 	db	1
   165                           
   166                           ;initializer for _Button1Status
   167   000BBB  01                 	db	1
   168   000000                     _TMR1L	set	4046
   169   000000                     _TMR1H	set	4047
   170   000000                     _PORTE	set	3972
   171   000000                     _PORTD	set	3971
   172   000000                     _PORTC	set	3970
   173   000000                     _PORTB	set	3969
   174   000000                     _PORTA	set	3968
   175   000000                     _LATA	set	3977
   176   000000                     _TRISA	set	3986
   177   000000                     _PIE1bits	set	3997
   178   000000                     _INTCONbits	set	4082
   179   000000                     _TRISE	set	3990
   180   000000                     _TRISD	set	3989
   181   000000                     _TRISC	set	3988
   182   000000                     _TRISB	set	3987
   183   000000                     _LATE	set	3981
   184   000000                     _LATD	set	3980
   185   000000                     _LATC	set	3979
   186   000000                     _LATB	set	3978
   187   000000                     _CMCONbits	set	4020
   188   000000                     _ADCON1bits	set	4033
   189   000000                     _T1CONbits	set	4045
   190   000000                     _PIR1bits	set	3998
   191                           
   192                           ; #config settings
   193                           
   194                           	psect	cinit
   195   000BBC                     __pcinit:
   196                           	callstack 0
   197   000BBC                     start_initialization:
   198                           	callstack 0
   199   000BBC                     __initialization:
   200                           	callstack 0
   201                           
   202                           ; Initialize objects allocated to COMRAM (58 bytes)
   203                           ; load TBLPTR registers with __pidataCOMRAM
   204   000BBC  0E82               	movlw	low __pidataCOMRAM
   205   000BBE  6EF6               	movwf	tblptrl,c
   206   000BC0  0E0B               	movlw	high __pidataCOMRAM
   207   000BC2  6EF7               	movwf	tblptrh,c
   208   000BC4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   209   000BC6  6EF8               	movwf	tblptru,c
   210   000BC8  EE00  F001         	lfsr	0,__pdataCOMRAM
   211   000BCC  EE10 F03A          	lfsr	1,58
   212   000BD0                     copy_data0:
   213   000BD0  0009               	tblrd		*+
   214   000BD2  CFF5 FFEE          	movff	tablat,postinc0
   215   000BD6  50E5               	movf	postdec1,w,c
   216   000BD8  50E1               	movf	fsr1l,w,c
   217   000BDA  E1FA               	bnz	copy_data0
   218                           
   219                           ; Clear objects allocated to COMRAM (30 bytes)
   220   000BDC  EE00  F03B         	lfsr	0,__pbssCOMRAM
   221   000BE0  0E1E               	movlw	30
   222   000BE2                     clear_0:
   223   000BE2  6AEE               	clrf	postinc0,c
   224   000BE4  06E8               	decf	wreg,f,c
   225   000BE6  E1FD               	bnz	clear_0
   226   000BE8                     end_of_initialization:
   227                           	callstack 0
   228   000BE8                     __end_of__initialization:
   229                           	callstack 0
   230   000BE8  906D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   231   000BEA  926D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   232   000BEC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   233   000BEE  6EF8               	movwf	tblptru,c
   234   000BF0  0100               	movlb	0
   235   000BF2  EF09  F000         	goto	_main	;jump to C main() function
   236                           
   237                           	psect	bssCOMRAM
   238   00003B                     __pbssCOMRAM:
   239                           	callstack 0
   240   00003B                     _preload_timer1:
   241                           	callstack 0
   242   00003B                     	ds	2
   243   00003D                     _TIMER1_interruptHandler:
   244                           	callstack 0
   245   00003D                     	ds	2
   246   00003F                     _RB7_interruptHandler_HIGH:
   247                           	callstack 0
   248   00003F                     	ds	2
   249   000041                     _RB7_interruptHandler_LOW:
   250                           	callstack 0
   251   000041                     	ds	2
   252   000043                     _RB6_interruptHandler_HIGH:
   253                           	callstack 0
   254   000043                     	ds	2
   255   000045                     _RB6_interruptHandler_LOW:
   256                           	callstack 0
   257   000045                     	ds	2
   258   000047                     _RB5_interruptHandler_HIGH:
   259                           	callstack 0
   260   000047                     	ds	2
   261   000049                     _RB5_interruptHandler_LOW:
   262                           	callstack 0
   263   000049                     	ds	2
   264   00004B                     _RB4_interruptHandler_HIGH:
   265                           	callstack 0
   266   00004B                     	ds	2
   267   00004D                     _RB4_interruptHandler_LOW:
   268                           	callstack 0
   269   00004D                     	ds	2
   270   00004F                     _INT2_InterruptHandler:
   271                           	callstack 0
   272   00004F                     	ds	2
   273   000051                     _INT1_InterruptHandler:
   274                           	callstack 0
   275   000051                     	ds	2
   276   000053                     _INT0_InterruptHandler:
   277                           	callstack 0
   278   000053                     	ds	2
   279   000055                     _Hours:
   280                           	callstack 0
   281   000055                     	ds	1
   282   000056                     _Minutes:
   283                           	callstack 0
   284   000056                     	ds	1
   285   000057                     _Seconds:
   286                           	callstack 0
   287   000057                     	ds	1
   288   000058                     _TimerOverFlow:
   289                           	callstack 0
   290   000058                     	ds	1
   291                           
   292                           	psect	dataCOMRAM
   293   000001                     __pdataCOMRAM:
   294                           	callstack 0
   295   000001                     _port_registers:
   296                           	callstack 0
   297   000001                     	ds	10
   298   00000B                     _lat_registers:
   299                           	callstack 0
   300   00000B                     	ds	10
   301   000015                     _tris_registers:
   302                           	callstack 0
   303   000015                     	ds	10
   304   00001F                     _Timer1_Obj:
   305                           	callstack 0
   306   00001F                     	ds	5
   307   000024                     _Seg_Obj:
   308                           	callstack 0
   309   000024                     	ds	5
   310   000029                     _Btn3:
   311                           	callstack 0
   312   000029                     	ds	3
   313   00002C                     _Btn2:
   314                           	callstack 0
   315   00002C                     	ds	3
   316   00002F                     _Btn1:
   317                           	callstack 0
   318   00002F                     	ds	3
   319   000032                     _Enable6:
   320                           	callstack 0
   321   000032                     	ds	1
   322   000033                     _Enable5:
   323                           	callstack 0
   324   000033                     	ds	1
   325   000034                     _Enable4:
   326                           	callstack 0
   327   000034                     	ds	1
   328   000035                     _Enable3:
   329                           	callstack 0
   330   000035                     	ds	1
   331   000036                     _Enable2:
   332                           	callstack 0
   333   000036                     	ds	1
   334   000037                     _Enable1:
   335                           	callstack 0
   336   000037                     	ds	1
   337   000038                     _Button3Status:
   338                           	callstack 0
   339   000038                     	ds	1
   340   000039                     _Button2Status:
   341                           	callstack 0
   342   000039                     	ds	1
   343   00003A                     _Button1Status:
   344                           	callstack 0
   345   00003A                     	ds	1
   346                           
   347                           	psect	cstackCOMRAM
   348   000059                     __pcstackCOMRAM:
   349                           	callstack 0
   350   000059                     ??_interruptManager:
   351   000059                     
   352                           ; 2 bytes @ 0x0
   353   000059                     	ds	2
   354   00005B                     ?___awdiv:
   355                           	callstack 0
   356   00005B                     ?___awmod:
   357                           	callstack 0
   358   00005B                     gpio_Port_Write_Logic@logic:
   359                           	callstack 0
   360   00005B                     gpio_Pin_Derction_Intialize@pin_config:
   361                           	callstack 0
   362   00005B                     gpio_Pin_Write_Logic@pin_config:
   363                           	callstack 0
   364   00005B                     gpio_Pin_Read_Logic@pin_config:
   365                           	callstack 0
   366   00005B                     Timer1_DeInit@_timer:
   367                           	callstack 0
   368   00005B                     timer1_select_mode_timer_or_counter@_timer:
   369                           	callstack 0
   370   00005B                     timer1_oscillator_enable@_timer:
   371                           	callstack 0
   372   00005B                     timer1_select_reg_mode@_timer:
   373                           	callstack 0
   374   00005B                     ___awdiv@dividend:
   375                           	callstack 0
   376   00005B                     ___awmod@dividend:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x2
   380   00005B                     	ds	1
   381   00005C                     ??_gpio_Port_Write_Logic:
   382                           
   383                           ; 1 bytes @ 0x3
   384   00005C                     	ds	1
   385   00005D                     ??_gpio_Pin_Derction_Intialize:
   386   00005D                     gpio_Pin_Write_Logic@logic:
   387                           	callstack 0
   388   00005D                     gpio_Pin_Read_Logic@logic:
   389                           	callstack 0
   390   00005D                     Timer1_Init@_timer:
   391                           	callstack 0
   392   00005D                     ___awdiv@divisor:
   393                           	callstack 0
   394   00005D                     ___awmod@divisor:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x4
   398   00005D                     	ds	1
   399   00005E                     ??_gpio_Pin_Write_Logic:
   400   00005E                     gpio_Port_Write_Logic@port:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0x5
   404   00005E                     	ds	1
   405   00005F                     ??_gpio_Pin_Read_Logic:
   406   00005F                     ??_Timer1_Init:
   407   00005F                     ___awdiv@counter:
   408                           	callstack 0
   409   00005F                     ___awmod@counter:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0x6
   413   00005F                     	ds	1
   414   000060                     ___awdiv@sign:
   415                           	callstack 0
   416   000060                     ___awmod@sign:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0x7
   420   000060                     	ds	1
   421   000061                     ___awdiv@quotient:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x8
   425   000061                     	ds	2
   426   000063                     gpio_Pin_Derction_Intialize@ret:
   427                           	callstack 0
   428                           
   429                           ; 1 bytes @ 0xA
   430   000063                     	ds	1
   431   000064                     gpio_Pin_Write_Logic@ret:
   432                           	callstack 0
   433   000064                     button_inialize@btn:
   434                           	callstack 0
   435   000064                     button_read_status@btn:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0xB
   439   000064                     	ds	1
   440   000065                     seven_segment_write_number@seg:
   441                           	callstack 0
   442   000065                     gpio_Pin_Intialize@pin_config:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0xC
   446   000065                     	ds	1
   447   000066                     button_read_status@btn_status:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0xD
   451   000066                     	ds	1
   452   000067                     ??_gpio_Pin_Intialize:
   453   000067                     seven_segment_write_number@number:
   454                           	callstack 0
   455                           
   456                           ; 1 bytes @ 0xE
   457   000067                     	ds	1
   458   000068                     seven_segment_write_number@ret:
   459                           	callstack 0
   460   000068                     gpio_Pin_Intialize@ret:
   461                           	callstack 0
   462                           
   463                           ; 1 bytes @ 0xF
   464   000068                     	ds	1
   465   000069                     button_read_status@button_logic:
   466                           	callstack 0
   467   000069                     seven_segment_initialize@seg:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x10
   471   000069                     	ds	2
   472   00006B                     seven_segment_initialize@ret:
   473                           	callstack 0
   474                           
   475                           ; 1 bytes @ 0x12
   476   00006B                     	ds	1
   477   00006C                     ??_main:
   478                           
   479                           ; 1 bytes @ 0x13
   480   00006C                     	ds	1
   481                           
   482 ;;
   483 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   484 ;;
   485 ;; *************** function _main *****************
   486 ;; Defined at:
   487 ;;		line 67 in file "application.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;		None
   490 ;; Auto vars:     Size  Location     Type
   491 ;;		None
   492 ;; Return value:  Size  Location     Type
   493 ;;                  2  519[None  ] int 
   494 ;; Registers used:
   495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   496 ;; Tracked objects:
   497 ;;		On entry : 0/0
   498 ;;		On exit  : 0/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   503 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   504 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   505 ;;Total ram usage:        1 bytes
   506 ;; Hardware stack levels required when called: 6
   507 ;; This function calls:
   508 ;;		_Timer1_DeInit
   509 ;;		_Timer1_Init
   510 ;;		___awdiv
   511 ;;		___awmod
   512 ;;		_button_inialize
   513 ;;		_button_read_status
   514 ;;		_gpio_Pin_Intialize
   515 ;;		_gpio_Port_Write_Logic
   516 ;;		_seven_segment_initialize
   517 ;;		_seven_segment_write_number
   518 ;; This function is called by:
   519 ;;		Startup code after reset
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           	psect	text0
   524   000012                     __ptext0:
   525                           	callstack 0
   526   000012                     _main:
   527                           	callstack 25
   528   000012                     
   529                           ;application.c: 68:     seven_segment_initialize(&Seg_Obj);
   530   000012  0E24               	movlw	low _Seg_Obj
   531   000014  6E69               	movwf	seven_segment_initialize@seg^0,c
   532   000016  0E00               	movlw	high _Seg_Obj
   533   000018  6E6A               	movwf	(seven_segment_initialize@seg+1)^0,c
   534   00001A  EC37  F005         	call	_seven_segment_initialize	;wreg free
   535   00001E                     
   536                           ;application.c: 69:     Timer1_Init(&Timer1_Obj);
   537   00001E  0E1F               	movlw	low _Timer1_Obj
   538   000020  6E5D               	movwf	Timer1_Init@_timer^0,c
   539   000022  0E00               	movlw	high _Timer1_Obj
   540   000024  6E5E               	movwf	(Timer1_Init@_timer+1)^0,c
   541   000026  EC44  F003         	call	_Timer1_Init	;wreg free
   542   00002A                     
   543                           ;application.c: 70:     gpio_Pin_Intialize(&Enable1);
   544   00002A  0E37               	movlw	low _Enable1
   545   00002C  6E65               	movwf	gpio_Pin_Intialize@pin_config^0,c
   546   00002E  0E00               	movlw	high _Enable1
   547   000030  6E66               	movwf	(gpio_Pin_Intialize@pin_config+1)^0,c
   548   000032  ECD5  F004         	call	_gpio_Pin_Intialize	;wreg free
   549   000036                     
   550                           ;application.c: 71:     gpio_Pin_Intialize(&Enable2);
   551   000036  0E36               	movlw	low _Enable2
   552   000038  6E65               	movwf	gpio_Pin_Intialize@pin_config^0,c
   553   00003A  0E00               	movlw	high _Enable2
   554   00003C  6E66               	movwf	(gpio_Pin_Intialize@pin_config+1)^0,c
   555   00003E  ECD5  F004         	call	_gpio_Pin_Intialize	;wreg free
   556   000042                     
   557                           ;application.c: 72:     gpio_Pin_Intialize(&Enable3);
   558   000042  0E35               	movlw	low _Enable3
   559   000044  6E65               	movwf	gpio_Pin_Intialize@pin_config^0,c
   560   000046  0E00               	movlw	high _Enable3
   561   000048  6E66               	movwf	(gpio_Pin_Intialize@pin_config+1)^0,c
   562   00004A  ECD5  F004         	call	_gpio_Pin_Intialize	;wreg free
   563   00004E                     
   564                           ;application.c: 73:     gpio_Pin_Intialize(&Enable4);
   565   00004E  0E34               	movlw	low _Enable4
   566   000050  6E65               	movwf	gpio_Pin_Intialize@pin_config^0,c
   567   000052  0E00               	movlw	high _Enable4
   568   000054  6E66               	movwf	(gpio_Pin_Intialize@pin_config+1)^0,c
   569   000056  ECD5  F004         	call	_gpio_Pin_Intialize	;wreg free
   570   00005A                     
   571                           ;application.c: 74:     gpio_Pin_Intialize(&Enable5);
   572   00005A  0E33               	movlw	low _Enable5
   573   00005C  6E65               	movwf	gpio_Pin_Intialize@pin_config^0,c
   574   00005E  0E00               	movlw	high _Enable5
   575   000060  6E66               	movwf	(gpio_Pin_Intialize@pin_config+1)^0,c
   576   000062  ECD5  F004         	call	_gpio_Pin_Intialize	;wreg free
   577   000066                     
   578                           ;application.c: 75:     gpio_Pin_Intialize(&Enable6);
   579   000066  0E32               	movlw	low _Enable6
   580   000068  6E65               	movwf	gpio_Pin_Intialize@pin_config^0,c
   581   00006A  0E00               	movlw	high _Enable6
   582   00006C  6E66               	movwf	(gpio_Pin_Intialize@pin_config+1)^0,c
   583   00006E  ECD5  F004         	call	_gpio_Pin_Intialize	;wreg free
   584   000072                     
   585                           ;application.c: 76:     button_inialize(&Btn1);
   586   000072  0E2F               	movlw	low _Btn1
   587   000074  6E64               	movwf	button_inialize@btn^0,c
   588   000076  0E00               	movlw	high _Btn1
   589   000078  6E65               	movwf	(button_inialize@btn+1)^0,c
   590   00007A  EC32  F006         	call	_button_inialize	;wreg free
   591   00007E                     
   592                           ;application.c: 77:     button_inialize(&Btn2);
   593   00007E  0E2C               	movlw	low _Btn2
   594   000080  6E64               	movwf	button_inialize@btn^0,c
   595   000082  0E00               	movlw	high _Btn2
   596   000084  6E65               	movwf	(button_inialize@btn+1)^0,c
   597   000086  EC32  F006         	call	_button_inialize	;wreg free
   598   00008A                     
   599                           ;application.c: 78:     button_inialize(&Btn3);
   600   00008A  0E29               	movlw	low _Btn3
   601   00008C  6E64               	movwf	button_inialize@btn^0,c
   602   00008E  0E00               	movlw	high _Btn3
   603   000090  6E65               	movwf	(button_inialize@btn+1)^0,c
   604   000092  EC32  F006         	call	_button_inialize	;wreg free
   605   000096                     
   606                           ;application.c: 79:     ADCON1bits.PCFG=0x0F;
   607   000096  0E0F               	movlw	15
   608   000098  12C1               	iorwf	193,f,c	;volatile
   609   00009A                     
   610                           ;application.c: 80:     CMCONbits.CM=111;
   611   00009A  0E07               	movlw	7
   612   00009C  12B4               	iorwf	180,f,c	;volatile
   613   00009E                     l2515:
   614                           
   615                           ;application.c: 82:         button_read_status(&Btn1,&Button1Status);
   616   00009E  0E2F               	movlw	low _Btn1
   617   0000A0  6E64               	movwf	button_read_status@btn^0,c
   618   0000A2  0E00               	movlw	high _Btn1
   619   0000A4  6E65               	movwf	(button_read_status@btn+1)^0,c
   620   0000A6  0E3A               	movlw	low _Button1Status
   621   0000A8  6E66               	movwf	button_read_status@btn_status^0,c
   622   0000AA  0E00               	movlw	high _Button1Status
   623   0000AC  6E67               	movwf	(button_read_status@btn_status+1)^0,c
   624   0000AE  ECE5  F002         	call	_button_read_status	;wreg free
   625   0000B2                     
   626                           ;application.c: 83:         button_read_status(&Btn2,&Button2Status);
   627   0000B2  0E2C               	movlw	low _Btn2
   628   0000B4  6E64               	movwf	button_read_status@btn^0,c
   629   0000B6  0E00               	movlw	high _Btn2
   630   0000B8  6E65               	movwf	(button_read_status@btn+1)^0,c
   631   0000BA  0E39               	movlw	low _Button2Status
   632   0000BC  6E66               	movwf	button_read_status@btn_status^0,c
   633   0000BE  0E00               	movlw	high _Button2Status
   634   0000C0  6E67               	movwf	(button_read_status@btn_status+1)^0,c
   635   0000C2  ECE5  F002         	call	_button_read_status	;wreg free
   636   0000C6                     
   637                           ;application.c: 84:         button_read_status(&Btn3,&Button3Status);
   638   0000C6  0E29               	movlw	low _Btn3
   639   0000C8  6E64               	movwf	button_read_status@btn^0,c
   640   0000CA  0E00               	movlw	high _Btn3
   641   0000CC  6E65               	movwf	(button_read_status@btn+1)^0,c
   642   0000CE  0E38               	movlw	low _Button3Status
   643   0000D0  6E66               	movwf	button_read_status@btn_status^0,c
   644   0000D2  0E00               	movlw	high _Button3Status
   645   0000D4  6E67               	movwf	(button_read_status@btn_status+1)^0,c
   646   0000D6  ECE5  F002         	call	_button_read_status	;wreg free
   647   0000DA                     
   648                           ;application.c: 86:         if(BUTTON_PRESSED==Button1Status){
   649   0000DA  503A               	movf	_Button1Status^0,w,c	;volatile
   650   0000DC  A4D8               	btfss	status,2,c
   651   0000DE  EF73  F000         	goto	u1521
   652   0000E2  EF75  F000         	goto	u1520
   653   0000E6                     u1521:
   654   0000E6  EF7B  F000         	goto	l2525
   655   0000EA                     u1520:
   656   0000EA                     
   657                           ;application.c: 87:             Timer1_DeInit(&Timer1_Obj);
   658   0000EA  0E1F               	movlw	low _Timer1_Obj
   659   0000EC  6E5B               	movwf	Timer1_DeInit@_timer^0,c
   660   0000EE  0E00               	movlw	high _Timer1_Obj
   661   0000F0  6E5C               	movwf	(Timer1_DeInit@_timer+1)^0,c
   662   0000F2  EC44  F006         	call	_Timer1_DeInit	;wreg free
   663   0000F6                     l2525:
   664                           
   665                           ;application.c: 90:         if(BUTTON_PRESSED==Button2Status){
   666   0000F6  5039               	movf	_Button2Status^0,w,c	;volatile
   667   0000F8  A4D8               	btfss	status,2,c
   668   0000FA  EF81  F000         	goto	u1531
   669   0000FE  EF83  F000         	goto	u1530
   670   000102                     u1531:
   671   000102  EF89  F000         	goto	l2529
   672   000106                     u1530:
   673   000106                     
   674                           ;application.c: 91:             Timer1_Init(&Timer1_Obj);
   675   000106  0E1F               	movlw	low _Timer1_Obj
   676   000108  6E5D               	movwf	Timer1_Init@_timer^0,c
   677   00010A  0E00               	movlw	high _Timer1_Obj
   678   00010C  6E5E               	movwf	(Timer1_Init@_timer+1)^0,c
   679   00010E  EC44  F003         	call	_Timer1_Init	;wreg free
   680   000112                     l2529:
   681                           
   682                           ;application.c: 93:         if(BUTTON_PRESSED==Button3Status){
   683   000112  5038               	movf	_Button3Status^0,w,c	;volatile
   684   000114  A4D8               	btfss	status,2,c
   685   000116  EF8F  F000         	goto	u1541
   686   00011A  EF91  F000         	goto	u1540
   687   00011E                     u1541:
   688   00011E  EF99  F000         	goto	l2533
   689   000122                     u1540:
   690   000122                     
   691                           ;application.c: 94:             TimerOverFlow=0;
   692   000122  0E00               	movlw	0
   693   000124  6E58               	movwf	_TimerOverFlow^0,c	;volatile
   694                           
   695                           ;application.c: 95:             Seconds=0;
   696   000126  0E00               	movlw	0
   697   000128  6E57               	movwf	_Seconds^0,c	;volatile
   698                           
   699                           ;application.c: 96:             Minutes=0;
   700   00012A  0E00               	movlw	0
   701   00012C  6E56               	movwf	_Minutes^0,c	;volatile
   702                           
   703                           ;application.c: 97:             Hours=0;
   704   00012E  0E00               	movlw	0
   705   000130  6E55               	movwf	_Hours^0,c	;volatile
   706   000132                     l2533:
   707                           
   708                           ;application.c: 100:         gpio_Port_Write_Logic(PORTD_INDEX,0b00000001);
   709   000132  0E01               	movlw	1
   710   000134  6E5B               	movwf	gpio_Port_Write_Logic@logic^0,c
   711   000136  0E03               	movlw	3
   712   000138  ECA3  F005         	call	_gpio_Port_Write_Logic
   713   00013C                     
   714                           ;application.c: 101:         seven_segment_write_number(&Seg_Obj,(Hours/10));
   715   00013C  0E24               	movlw	low _Seg_Obj
   716   00013E  6E65               	movwf	seven_segment_write_number@seg^0,c
   717   000140  0E00               	movlw	high _Seg_Obj
   718   000142  6E66               	movwf	(seven_segment_write_number@seg+1)^0,c
   719   000144  C055  F05B         	movff	_Hours,___awdiv@dividend	;volatile
   720   000148  6A5C               	clrf	(___awdiv@dividend+1)^0,c
   721   00014A  0E00               	movlw	0
   722   00014C  6E5E               	movwf	(___awdiv@divisor+1)^0,c
   723   00014E  0E0A               	movlw	10
   724   000150  6E5D               	movwf	___awdiv@divisor^0,c
   725   000152  EC83  F002         	call	___awdiv	;wreg free
   726   000156  505B               	movf	?___awdiv^0,w,c
   727   000158  6E67               	movwf	seven_segment_write_number@number^0,c
   728   00015A  EC4F  F004         	call	_seven_segment_write_number	;wreg free
   729   00015E                     
   730                           ;application.c: 102:         _delay((unsigned long)((7500)*(8000000UL/4000000.0)));
   731   00015E  0E14               	movlw	20
   732   000160  6E6C               	movwf	??_main^0,c
   733   000162  0E7A               	movlw	122
   734   000164                     u1557:
   735   000164  2EE8               	decfsz	wreg,f,c
   736   000166  D7FE               	bra	u1557
   737   000168  2E6C               	decfsz	??_main^0,f,c
   738   00016A  D7FC               	bra	u1557
   739   00016C                     
   740                           ;application.c: 103:         gpio_Port_Write_Logic(PORTD_INDEX,0b00000010);
   741   00016C  0E02               	movlw	2
   742   00016E  6E5B               	movwf	gpio_Port_Write_Logic@logic^0,c
   743   000170  0E03               	movlw	3
   744   000172  ECA3  F005         	call	_gpio_Port_Write_Logic
   745   000176                     
   746                           ;application.c: 104:         seven_segment_write_number(&Seg_Obj,(Hours%10));
   747   000176  0E24               	movlw	low _Seg_Obj
   748   000178  6E65               	movwf	seven_segment_write_number@seg^0,c
   749   00017A  0E00               	movlw	high _Seg_Obj
   750   00017C  6E66               	movwf	(seven_segment_write_number@seg+1)^0,c
   751   00017E  C055  F05B         	movff	_Hours,___awmod@dividend	;volatile
   752   000182  6A5C               	clrf	(___awmod@dividend+1)^0,c
   753   000184  0E00               	movlw	0
   754   000186  6E5E               	movwf	(___awmod@divisor+1)^0,c
   755   000188  0E0A               	movlw	10
   756   00018A  6E5D               	movwf	___awmod@divisor^0,c
   757   00018C  ECA0  F003         	call	___awmod	;wreg free
   758   000190  505B               	movf	?___awmod^0,w,c
   759   000192  6E67               	movwf	seven_segment_write_number@number^0,c
   760   000194  EC4F  F004         	call	_seven_segment_write_number	;wreg free
   761   000198                     
   762                           ;application.c: 105:         _delay((unsigned long)((7500)*(8000000UL/4000000.0)));
   763   000198  0E14               	movlw	20
   764   00019A  6E6C               	movwf	??_main^0,c
   765   00019C  0E7A               	movlw	122
   766   00019E                     u1567:
   767   00019E  2EE8               	decfsz	wreg,f,c
   768   0001A0  D7FE               	bra	u1567
   769   0001A2  2E6C               	decfsz	??_main^0,f,c
   770   0001A4  D7FC               	bra	u1567
   771   0001A6                     
   772                           ;application.c: 107:         gpio_Port_Write_Logic(PORTD_INDEX,0b00000100);
   773   0001A6  0E04               	movlw	4
   774   0001A8  6E5B               	movwf	gpio_Port_Write_Logic@logic^0,c
   775   0001AA  0E03               	movlw	3
   776   0001AC  ECA3  F005         	call	_gpio_Port_Write_Logic
   777   0001B0                     
   778                           ;application.c: 108:         seven_segment_write_number(&Seg_Obj,(Minutes/10));
   779   0001B0  0E24               	movlw	low _Seg_Obj
   780   0001B2  6E65               	movwf	seven_segment_write_number@seg^0,c
   781   0001B4  0E00               	movlw	high _Seg_Obj
   782   0001B6  6E66               	movwf	(seven_segment_write_number@seg+1)^0,c
   783   0001B8  C056  F05B         	movff	_Minutes,___awdiv@dividend	;volatile
   784   0001BC  6A5C               	clrf	(___awdiv@dividend+1)^0,c
   785   0001BE  0E00               	movlw	0
   786   0001C0  6E5E               	movwf	(___awdiv@divisor+1)^0,c
   787   0001C2  0E0A               	movlw	10
   788   0001C4  6E5D               	movwf	___awdiv@divisor^0,c
   789   0001C6  EC83  F002         	call	___awdiv	;wreg free
   790   0001CA  505B               	movf	?___awdiv^0,w,c
   791   0001CC  6E67               	movwf	seven_segment_write_number@number^0,c
   792   0001CE  EC4F  F004         	call	_seven_segment_write_number	;wreg free
   793   0001D2                     
   794                           ;application.c: 109:         _delay((unsigned long)((7500)*(8000000UL/4000000.0)));
   795   0001D2  0E14               	movlw	20
   796   0001D4  6E6C               	movwf	??_main^0,c
   797   0001D6  0E7A               	movlw	122
   798   0001D8                     u1577:
   799   0001D8  2EE8               	decfsz	wreg,f,c
   800   0001DA  D7FE               	bra	u1577
   801   0001DC  2E6C               	decfsz	??_main^0,f,c
   802   0001DE  D7FC               	bra	u1577
   803   0001E0                     
   804                           ;application.c: 110:         gpio_Port_Write_Logic(PORTD_INDEX,0b00001000);
   805   0001E0  0E08               	movlw	8
   806   0001E2  6E5B               	movwf	gpio_Port_Write_Logic@logic^0,c
   807   0001E4  0E03               	movlw	3
   808   0001E6  ECA3  F005         	call	_gpio_Port_Write_Logic
   809   0001EA                     
   810                           ;application.c: 111:         seven_segment_write_number(&Seg_Obj,(Minutes%10));
   811   0001EA  0E24               	movlw	low _Seg_Obj
   812   0001EC  6E65               	movwf	seven_segment_write_number@seg^0,c
   813   0001EE  0E00               	movlw	high _Seg_Obj
   814   0001F0  6E66               	movwf	(seven_segment_write_number@seg+1)^0,c
   815   0001F2  C056  F05B         	movff	_Minutes,___awmod@dividend	;volatile
   816   0001F6  6A5C               	clrf	(___awmod@dividend+1)^0,c
   817   0001F8  0E00               	movlw	0
   818   0001FA  6E5E               	movwf	(___awmod@divisor+1)^0,c
   819   0001FC  0E0A               	movlw	10
   820   0001FE  6E5D               	movwf	___awmod@divisor^0,c
   821   000200  ECA0  F003         	call	___awmod	;wreg free
   822   000204  505B               	movf	?___awmod^0,w,c
   823   000206  6E67               	movwf	seven_segment_write_number@number^0,c
   824   000208  EC4F  F004         	call	_seven_segment_write_number	;wreg free
   825   00020C                     
   826                           ;application.c: 112:         _delay((unsigned long)((7500)*(8000000UL/4000000.0)));
   827   00020C  0E14               	movlw	20
   828   00020E  6E6C               	movwf	??_main^0,c
   829   000210  0E7A               	movlw	122
   830   000212                     u1587:
   831   000212  2EE8               	decfsz	wreg,f,c
   832   000214  D7FE               	bra	u1587
   833   000216  2E6C               	decfsz	??_main^0,f,c
   834   000218  D7FC               	bra	u1587
   835   00021A                     
   836                           ;application.c: 114:         gpio_Port_Write_Logic(PORTD_INDEX,0b00010000);
   837   00021A  0E10               	movlw	16
   838   00021C  6E5B               	movwf	gpio_Port_Write_Logic@logic^0,c
   839   00021E  0E03               	movlw	3
   840   000220  ECA3  F005         	call	_gpio_Port_Write_Logic
   841   000224                     
   842                           ;application.c: 115:         seven_segment_write_number(&Seg_Obj,(Seconds/10));
   843   000224  0E24               	movlw	low _Seg_Obj
   844   000226  6E65               	movwf	seven_segment_write_number@seg^0,c
   845   000228  0E00               	movlw	high _Seg_Obj
   846   00022A  6E66               	movwf	(seven_segment_write_number@seg+1)^0,c
   847   00022C  C057  F05B         	movff	_Seconds,___awdiv@dividend	;volatile
   848   000230  6A5C               	clrf	(___awdiv@dividend+1)^0,c
   849   000232  0E00               	movlw	0
   850   000234  6E5E               	movwf	(___awdiv@divisor+1)^0,c
   851   000236  0E0A               	movlw	10
   852   000238  6E5D               	movwf	___awdiv@divisor^0,c
   853   00023A  EC83  F002         	call	___awdiv	;wreg free
   854   00023E  505B               	movf	?___awdiv^0,w,c
   855   000240  6E67               	movwf	seven_segment_write_number@number^0,c
   856   000242  EC4F  F004         	call	_seven_segment_write_number	;wreg free
   857   000246                     
   858                           ;application.c: 116:         _delay((unsigned long)((7500)*(8000000UL/4000000.0)));
   859   000246  0E14               	movlw	20
   860   000248  6E6C               	movwf	??_main^0,c
   861   00024A  0E7A               	movlw	122
   862   00024C                     u1597:
   863   00024C  2EE8               	decfsz	wreg,f,c
   864   00024E  D7FE               	bra	u1597
   865   000250  2E6C               	decfsz	??_main^0,f,c
   866   000252  D7FC               	bra	u1597
   867   000254                     
   868                           ;application.c: 117:         gpio_Port_Write_Logic(PORTD_INDEX,0b00100000);
   869   000254  0E20               	movlw	32
   870   000256  6E5B               	movwf	gpio_Port_Write_Logic@logic^0,c
   871   000258  0E03               	movlw	3
   872   00025A  ECA3  F005         	call	_gpio_Port_Write_Logic
   873   00025E                     
   874                           ;application.c: 118:         seven_segment_write_number(&Seg_Obj,(Seconds%10));
   875   00025E  0E24               	movlw	low _Seg_Obj
   876   000260  6E65               	movwf	seven_segment_write_number@seg^0,c
   877   000262  0E00               	movlw	high _Seg_Obj
   878   000264  6E66               	movwf	(seven_segment_write_number@seg+1)^0,c
   879   000266  C057  F05B         	movff	_Seconds,___awmod@dividend	;volatile
   880   00026A  6A5C               	clrf	(___awmod@dividend+1)^0,c
   881   00026C  0E00               	movlw	0
   882   00026E  6E5E               	movwf	(___awmod@divisor+1)^0,c
   883   000270  0E0A               	movlw	10
   884   000272  6E5D               	movwf	___awmod@divisor^0,c
   885   000274  ECA0  F003         	call	___awmod	;wreg free
   886   000278  505B               	movf	?___awmod^0,w,c
   887   00027A  6E67               	movwf	seven_segment_write_number@number^0,c
   888   00027C  EC4F  F004         	call	_seven_segment_write_number	;wreg free
   889   000280                     
   890                           ;application.c: 119:         _delay((unsigned long)((7500)*(8000000UL/4000000.0)));
   891   000280  0E14               	movlw	20
   892   000282  6E6C               	movwf	??_main^0,c
   893   000284  0E7A               	movlw	122
   894   000286                     u1607:
   895   000286  2EE8               	decfsz	wreg,f,c
   896   000288  D7FE               	bra	u1607
   897   00028A  2E6C               	decfsz	??_main^0,f,c
   898   00028C  D7FC               	bra	u1607
   899   00028E  EF4F  F000         	goto	l2515
   900   000292  EF07  F000         	goto	start
   901   000296                     __end_of_main:
   902                           	callstack 0
   903                           
   904 ;; *************** function _seven_segment_write_number *****************
   905 ;; Defined at:
   906 ;;		line 40 in file "ECU_Layer/7segment/ecu_segment.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;  seg             2   12[COMRAM] PTR const struct .
   909 ;;		 -> Seg_Obj(5), 
   910 ;;  number          1   14[COMRAM] unsigned char 
   911 ;; Auto vars:     Size  Location     Type
   912 ;;  ret             1   15[COMRAM] unsigned char 
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      unsigned char 
   915 ;; Registers used:
   916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   922 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   925 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   926 ;;Total ram usage:        4 bytes
   927 ;; Hardware stack levels used: 1
   928 ;; Hardware stack levels required when called: 4
   929 ;; This function calls:
   930 ;;		_gpio_Pin_Write_Logic
   931 ;; This function is called by:
   932 ;;		_main
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           	psect	text1
   937   00089E                     __ptext1:
   938                           	callstack 0
   939   00089E                     _seven_segment_write_number:
   940                           	callstack 26
   941   00089E                     
   942                           ;ECU_Layer/7segment/ecu_segment.c: 42:       if ((((void*)0)==seg) || (number > 9)){
   943   00089E  5065               	movf	seven_segment_write_number@seg^0,w,c
   944   0008A0  1066               	iorwf	(seven_segment_write_number@seg+1)^0,w,c
   945   0008A2  B4D8               	btfsc	status,2,c
   946   0008A4  EF56  F004         	goto	u1251
   947   0008A8  EF58  F004         	goto	u1250
   948   0008AC                     u1251:
   949   0008AC  EF60  F004         	goto	l2231
   950   0008B0                     u1250:
   951   0008B0  0E09               	movlw	9
   952   0008B2  6467               	cpfsgt	seven_segment_write_number@number^0,c
   953   0008B4  EF5E  F004         	goto	u1261
   954   0008B8  EF60  F004         	goto	u1260
   955   0008BC                     u1261:
   956   0008BC  EF62  F004         	goto	l2233
   957   0008C0                     u1260:
   958   0008C0                     l2231:
   959                           
   960                           ;ECU_Layer/7segment/ecu_segment.c: 44:       }
   961   0008C0  EF95  F004         	goto	l16
   962   0008C4                     l2233:
   963                           
   964                           ;ECU_Layer/7segment/ecu_segment.c: 46:           ret=gpio_Pin_Write_Logic(&(seg->segment
      +                          _pin[0]), (number)& 0x01);
   965   0008C4  C065  F05B         	movff	seven_segment_write_number@seg,gpio_Pin_Write_Logic@pin_config
   966   0008C8  C066  F05C         	movff	seven_segment_write_number@seg+1,gpio_Pin_Write_Logic@pin_config+1
   967   0008CC  5067               	movf	seven_segment_write_number@number^0,w,c
   968   0008CE  0B01               	andlw	1
   969   0008D0  6E5D               	movwf	gpio_Pin_Write_Logic@logic^0,c
   970   0008D2  ECED  F001         	call	_gpio_Pin_Write_Logic	;wreg free
   971   0008D6  6E68               	movwf	seven_segment_write_number@ret^0,c
   972                           
   973                           ;ECU_Layer/7segment/ecu_segment.c: 47:           ret=gpio_Pin_Write_Logic(&(seg->segment
      +                          _pin[1]), (number>>1)& 0x01);
   974   0008D8  0E01               	movlw	1
   975   0008DA  2465               	addwf	seven_segment_write_number@seg^0,w,c
   976   0008DC  6E5B               	movwf	gpio_Pin_Write_Logic@pin_config^0,c
   977   0008DE  0E00               	movlw	0
   978   0008E0  2066               	addwfc	(seven_segment_write_number@seg+1)^0,w,c
   979   0008E2  6E5C               	movwf	(gpio_Pin_Write_Logic@pin_config+1)^0,c
   980   0008E4  90D8               	bcf	status,0,c
   981   0008E6  3067               	rrcf	seven_segment_write_number@number^0,w,c
   982   0008E8  0B01               	andlw	1
   983   0008EA  6E5D               	movwf	gpio_Pin_Write_Logic@logic^0,c
   984   0008EC  ECED  F001         	call	_gpio_Pin_Write_Logic	;wreg free
   985   0008F0  6E68               	movwf	seven_segment_write_number@ret^0,c
   986                           
   987                           ;ECU_Layer/7segment/ecu_segment.c: 48:           ret=gpio_Pin_Write_Logic(&(seg->segment
      +                          _pin[2]), (number>>2)& 0x01);
   988   0008F2  0E02               	movlw	2
   989   0008F4  2465               	addwf	seven_segment_write_number@seg^0,w,c
   990   0008F6  6E5B               	movwf	gpio_Pin_Write_Logic@pin_config^0,c
   991   0008F8  0E00               	movlw	0
   992   0008FA  2066               	addwfc	(seven_segment_write_number@seg+1)^0,w,c
   993   0008FC  6E5C               	movwf	(gpio_Pin_Write_Logic@pin_config+1)^0,c
   994   0008FE  4067               	rrncf	seven_segment_write_number@number^0,w,c
   995   000900  42E8               	rrncf	wreg,f,c
   996   000902  0B3F               	andlw	63
   997   000904  0B01               	andlw	1
   998   000906  6E5D               	movwf	gpio_Pin_Write_Logic@logic^0,c
   999   000908  ECED  F001         	call	_gpio_Pin_Write_Logic	;wreg free
  1000   00090C  6E68               	movwf	seven_segment_write_number@ret^0,c
  1001                           
  1002                           ;ECU_Layer/7segment/ecu_segment.c: 49:           ret=gpio_Pin_Write_Logic(&(seg->segment
      +                          _pin[3]), (number>>3)& 0x01);
  1003   00090E  0E03               	movlw	3
  1004   000910  2465               	addwf	seven_segment_write_number@seg^0,w,c
  1005   000912  6E5B               	movwf	gpio_Pin_Write_Logic@pin_config^0,c
  1006   000914  0E00               	movlw	0
  1007   000916  2066               	addwfc	(seven_segment_write_number@seg+1)^0,w,c
  1008   000918  6E5C               	movwf	(gpio_Pin_Write_Logic@pin_config+1)^0,c
  1009   00091A  3867               	swapf	seven_segment_write_number@number^0,w,c
  1010   00091C  46E8               	rlncf	wreg,f,c
  1011   00091E  0B1F               	andlw	31
  1012   000920  0B01               	andlw	1
  1013   000922  6E5D               	movwf	gpio_Pin_Write_Logic@logic^0,c
  1014   000924  ECED  F001         	call	_gpio_Pin_Write_Logic	;wreg free
  1015   000928  6E68               	movwf	seven_segment_write_number@ret^0,c
  1016   00092A                     l16:
  1017   00092A  0012               	return		;funcret
  1018   00092C                     __end_of_seven_segment_write_number:
  1019                           	callstack 0
  1020                           
  1021 ;; *************** function _seven_segment_initialize *****************
  1022 ;; Defined at:
  1023 ;;		line 18 in file "ECU_Layer/7segment/ecu_segment.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;  seg             2   16[COMRAM] PTR const struct .
  1026 ;;		 -> Seg_Obj(5), 
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  ret             1   18[COMRAM] unsigned char 
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      unsigned char 
  1031 ;; Registers used:
  1032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1038 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1039 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1041 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;Total ram usage:        3 bytes
  1043 ;; Hardware stack levels used: 1
  1044 ;; Hardware stack levels required when called: 5
  1045 ;; This function calls:
  1046 ;;		_gpio_Pin_Intialize
  1047 ;; This function is called by:
  1048 ;;		_main
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052                           	psect	text2
  1053   000A6E                     __ptext2:
  1054                           	callstack 0
  1055   000A6E                     _seven_segment_initialize:
  1056                           	callstack 25
  1057   000A6E                     
  1058                           ;ECU_Layer/7segment/ecu_segment.c: 20:       if (((void*)0)==seg){
  1059   000A6E  5069               	movf	seven_segment_initialize@seg^0,w,c
  1060   000A70  106A               	iorwf	(seven_segment_initialize@seg+1)^0,w,c
  1061   000A72  A4D8               	btfss	status,2,c
  1062   000A74  EF3E  F005         	goto	u1241
  1063   000A78  EF40  F005         	goto	u1240
  1064   000A7C                     u1241:
  1065   000A7C  EF42  F005         	goto	l2221
  1066   000A80                     u1240:
  1067   000A80                     
  1068                           ;ECU_Layer/7segment/ecu_segment.c: 22:       }
  1069   000A80  EF64  F005         	goto	l9
  1070   000A84                     l2221:
  1071                           
  1072                           ;ECU_Layer/7segment/ecu_segment.c: 24:           ret=gpio_Pin_Intialize(&(seg->segment_p
      +                          in[0]));
  1073   000A84  C069  F065         	movff	seven_segment_initialize@seg,gpio_Pin_Intialize@pin_config
  1074   000A88  C06A  F066         	movff	seven_segment_initialize@seg+1,gpio_Pin_Intialize@pin_config+1
  1075   000A8C  ECD5  F004         	call	_gpio_Pin_Intialize	;wreg free
  1076   000A90  6E6B               	movwf	seven_segment_initialize@ret^0,c
  1077                           
  1078                           ;ECU_Layer/7segment/ecu_segment.c: 25:           ret=gpio_Pin_Intialize(&(seg->segment_p
      +                          in[1]));
  1079   000A92  0E01               	movlw	1
  1080   000A94  2469               	addwf	seven_segment_initialize@seg^0,w,c
  1081   000A96  6E65               	movwf	gpio_Pin_Intialize@pin_config^0,c
  1082   000A98  0E00               	movlw	0
  1083   000A9A  206A               	addwfc	(seven_segment_initialize@seg+1)^0,w,c
  1084   000A9C  6E66               	movwf	(gpio_Pin_Intialize@pin_config+1)^0,c
  1085   000A9E  ECD5  F004         	call	_gpio_Pin_Intialize	;wreg free
  1086   000AA2  6E6B               	movwf	seven_segment_initialize@ret^0,c
  1087                           
  1088                           ;ECU_Layer/7segment/ecu_segment.c: 26:           ret=gpio_Pin_Intialize(&(seg->segment_p
      +                          in[2]));
  1089   000AA4  0E02               	movlw	2
  1090   000AA6  2469               	addwf	seven_segment_initialize@seg^0,w,c
  1091   000AA8  6E65               	movwf	gpio_Pin_Intialize@pin_config^0,c
  1092   000AAA  0E00               	movlw	0
  1093   000AAC  206A               	addwfc	(seven_segment_initialize@seg+1)^0,w,c
  1094   000AAE  6E66               	movwf	(gpio_Pin_Intialize@pin_config+1)^0,c
  1095   000AB0  ECD5  F004         	call	_gpio_Pin_Intialize	;wreg free
  1096   000AB4  6E6B               	movwf	seven_segment_initialize@ret^0,c
  1097                           
  1098                           ;ECU_Layer/7segment/ecu_segment.c: 27:           ret=gpio_Pin_Intialize(&(seg->segment_p
      +                          in[3]));
  1099   000AB6  0E03               	movlw	3
  1100   000AB8  2469               	addwf	seven_segment_initialize@seg^0,w,c
  1101   000ABA  6E65               	movwf	gpio_Pin_Intialize@pin_config^0,c
  1102   000ABC  0E00               	movlw	0
  1103   000ABE  206A               	addwfc	(seven_segment_initialize@seg+1)^0,w,c
  1104   000AC0  6E66               	movwf	(gpio_Pin_Intialize@pin_config+1)^0,c
  1105   000AC2  ECD5  F004         	call	_gpio_Pin_Intialize	;wreg free
  1106   000AC6  6E6B               	movwf	seven_segment_initialize@ret^0,c
  1107   000AC8                     l9:
  1108   000AC8  0012               	return		;funcret
  1109   000ACA                     __end_of_seven_segment_initialize:
  1110                           	callstack 0
  1111                           
  1112 ;; *************** function _gpio_Pin_Intialize *****************
  1113 ;; Defined at:
  1114 ;;		line 141 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;  pin_config      2   12[COMRAM] PTR const struct .
  1117 ;;		 -> Enable6(1), Enable5(1), Enable4(1), Enable3(1), 
  1118 ;;		 -> Enable2(1), Enable1(1), Seg_Obj.segment_pin(4), Seg_Obj(5), 
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;  ret             1   15[COMRAM] unsigned char 
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      unsigned char 
  1123 ;; Registers used:
  1124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1130 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1131 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1132 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1133 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1134 ;;Total ram usage:        4 bytes
  1135 ;; Hardware stack levels used: 1
  1136 ;; Hardware stack levels required when called: 4
  1137 ;; This function calls:
  1138 ;;		_gpio_Pin_Derction_Intialize
  1139 ;;		_gpio_Pin_Write_Logic
  1140 ;; This function is called by:
  1141 ;;		_seven_segment_initialize
  1142 ;;		_main
  1143 ;;		_interrupt_INtx_pin_init
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           	psect	text3
  1148   0009AA                     __ptext3:
  1149                           	callstack 0
  1150   0009AA                     _gpio_Pin_Intialize:
  1151                           	callstack 25
  1152   0009AA                     
  1153                           ;MCAL_Layer/GPIO/hal_gpio.c: 143:     if (((void*)0)==pin_config || pin_config->pin > 8 
      +                          -1){
  1154   0009AA  5065               	movf	gpio_Pin_Intialize@pin_config^0,w,c
  1155   0009AC  1066               	iorwf	(gpio_Pin_Intialize@pin_config+1)^0,w,c
  1156   0009AE  B4D8               	btfsc	status,2,c
  1157   0009B0  EFDC  F004         	goto	u1101
  1158   0009B4  EFDE  F004         	goto	u1100
  1159   0009B8                     u1101:
  1160   0009B8  EFEF  F004         	goto	l2161
  1161   0009BC                     u1100:
  1162   0009BC  C065  FFD9         	movff	gpio_Pin_Intialize@pin_config,fsr2l
  1163   0009C0  C066  FFDA         	movff	gpio_Pin_Intialize@pin_config+1,fsr2h
  1164   0009C4  30DF               	rrcf	223,w,c
  1165   0009C6  32E8               	rrcf	wreg,f,c
  1166   0009C8  32E8               	rrcf	wreg,f,c
  1167   0009CA  0B07               	andlw	7
  1168   0009CC  6E67               	movwf	??_gpio_Pin_Intialize^0,c
  1169   0009CE  0E07               	movlw	7
  1170   0009D0  6467               	cpfsgt	??_gpio_Pin_Intialize^0,c
  1171   0009D2  EFED  F004         	goto	u1111
  1172   0009D6  EFEF  F004         	goto	u1110
  1173   0009DA                     u1111:
  1174   0009DA  EFEF  F004         	goto	l2163
  1175   0009DE                     u1110:
  1176   0009DE                     l2161:
  1177   0009DE                     l2163:
  1178   0009DE  C065  F05B         	movff	gpio_Pin_Intialize@pin_config,gpio_Pin_Derction_Intialize@pin_config
  1179   0009E2  C066  F05C         	movff	gpio_Pin_Intialize@pin_config+1,gpio_Pin_Derction_Intialize@pin_config+1
  1180   0009E6  EC4B  F001         	call	_gpio_Pin_Derction_Intialize	;wreg free
  1181   0009EA                     
  1182                           ;MCAL_Layer/GPIO/hal_gpio.c: 147:     ret=gpio_Pin_Write_Logic(pin_config,pin_config->lo
      +                          gic);
  1183   0009EA  C065  F05B         	movff	gpio_Pin_Intialize@pin_config,gpio_Pin_Write_Logic@pin_config
  1184   0009EE  C066  F05C         	movff	gpio_Pin_Intialize@pin_config+1,gpio_Pin_Write_Logic@pin_config+1
  1185   0009F2  C065  FFD9         	movff	gpio_Pin_Intialize@pin_config,fsr2l
  1186   0009F6  C066  FFDA         	movff	gpio_Pin_Intialize@pin_config+1,fsr2h
  1187   0009FA  0E00               	movlw	0
  1188   0009FC  BEDF               	btfsc	indf2,7,c
  1189   0009FE  0E01               	movlw	1
  1190   000A00  6E5D               	movwf	gpio_Pin_Write_Logic@logic^0,c
  1191   000A02  ECED  F001         	call	_gpio_Pin_Write_Logic	;wreg free
  1192   000A06  6E68               	movwf	gpio_Pin_Intialize@ret^0,c
  1193                           
  1194                           ;MCAL_Layer/GPIO/hal_gpio.c: 149:     return ret;
  1195   000A08  5068               	movf	gpio_Pin_Intialize@ret^0,w,c
  1196   000A0A  0012               	return		;funcret
  1197   000A0C                     __end_of_gpio_Pin_Intialize:
  1198                           	callstack 0
  1199                           
  1200 ;; *************** function _gpio_Pin_Write_Logic *****************
  1201 ;; Defined at:
  1202 ;;		line 75 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;  pin_config      2    2[COMRAM] PTR const struct .
  1205 ;;		 -> Enable6(1), Enable5(1), Enable4(1), Enable3(1), 
  1206 ;;		 -> Enable2(1), Enable1(1), Seg_Obj.segment_pin(4), Seg_Obj(5), 
  1207 ;;  logic           1    4[COMRAM] enum E2965
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;  ret             1   11[COMRAM] unsigned char 
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  1    wreg      unsigned char 
  1212 ;; Registers used:
  1213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1219 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1220 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1221 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1222 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;Total ram usage:       10 bytes
  1224 ;; Hardware stack levels used: 1
  1225 ;; Hardware stack levels required when called: 3
  1226 ;; This function calls:
  1227 ;;		Nothing
  1228 ;; This function is called by:
  1229 ;;		_seven_segment_write_number
  1230 ;;		_gpio_Pin_Intialize
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           	psect	text4
  1235   0003DA                     __ptext4:
  1236                           	callstack 0
  1237   0003DA                     _gpio_Pin_Write_Logic:
  1238                           	callstack 26
  1239   0003DA                     
  1240                           ;MCAL_Layer/GPIO/hal_gpio.c: 76:     Std_ReturnType ret=(Std_ReturnType)0x01;
  1241   0003DA  0E01               	movlw	1
  1242   0003DC  6E64               	movwf	gpio_Pin_Write_Logic@ret^0,c
  1243   0003DE                     
  1244                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:     if (((void*)0)==pin_config || pin_config->pin > 8 -
      +                          1 ){
  1245   0003DE  505B               	movf	gpio_Pin_Write_Logic@pin_config^0,w,c
  1246   0003E0  105C               	iorwf	(gpio_Pin_Write_Logic@pin_config+1)^0,w,c
  1247   0003E2  B4D8               	btfsc	status,2,c
  1248   0003E4  EFF6  F001         	goto	u1001
  1249   0003E8  EFF8  F001         	goto	u1000
  1250   0003EC                     u1001:
  1251   0003EC  EF09  F002         	goto	l2113
  1252   0003F0                     u1000:
  1253   0003F0  C05B  FFD9         	movff	gpio_Pin_Write_Logic@pin_config,fsr2l
  1254   0003F4  C05C  FFDA         	movff	gpio_Pin_Write_Logic@pin_config+1,fsr2h
  1255   0003F8  30DF               	rrcf	223,w,c
  1256   0003FA  32E8               	rrcf	wreg,f,c
  1257   0003FC  32E8               	rrcf	wreg,f,c
  1258   0003FE  0B07               	andlw	7
  1259   000400  6E5E               	movwf	??_gpio_Pin_Write_Logic^0,c
  1260   000402  0E07               	movlw	7
  1261   000404  645E               	cpfsgt	??_gpio_Pin_Write_Logic^0,c
  1262   000406  EF07  F002         	goto	u1011
  1263   00040A  EF09  F002         	goto	u1010
  1264   00040E                     u1011:
  1265   00040E  EF6C  F002         	goto	l2121
  1266   000412                     u1010:
  1267   000412                     l2113:
  1268                           
  1269                           ;MCAL_Layer/GPIO/hal_gpio.c: 78:         ret=(Std_ReturnType)0x00;
  1270   000412  0E00               	movlw	0
  1271   000414  6E64               	movwf	gpio_Pin_Write_Logic@ret^0,c
  1272   000416  EF6C  F002         	goto	l2121
  1273   00041A                     l2115:
  1274                           
  1275                           ;MCAL_Layer/GPIO/hal_gpio.c: 82:             (*lat_registers[pin_config->port] &=~((uint
      +                          8)1 << pin_config->pin));
  1276   00041A  C05B  FFD9         	movff	gpio_Pin_Write_Logic@pin_config,fsr2l
  1277   00041E  C05C  FFDA         	movff	gpio_Pin_Write_Logic@pin_config+1,fsr2h
  1278   000422  30DF               	rrcf	223,w,c
  1279   000424  32E8               	rrcf	wreg,f,c
  1280   000426  32E8               	rrcf	wreg,f,c
  1281   000428  0B07               	andlw	7
  1282   00042A  6E5E               	movwf	??_gpio_Pin_Write_Logic^0,c
  1283   00042C  0E01               	movlw	1
  1284   00042E  6E5F               	movwf	(??_gpio_Pin_Write_Logic+1)^0,c
  1285   000430  2A5E               	incf	??_gpio_Pin_Write_Logic^0,f,c
  1286   000432  EF1D  F002         	goto	u1024
  1287   000436                     u1025:
  1288   000436  90D8               	bcf	status,0,c
  1289   000438  365F               	rlcf	(??_gpio_Pin_Write_Logic+1)^0,f,c
  1290   00043A                     u1024:
  1291   00043A  2E5E               	decfsz	??_gpio_Pin_Write_Logic^0,f,c
  1292   00043C  EF1B  F002         	goto	u1025
  1293   000440  505F               	movf	(??_gpio_Pin_Write_Logic+1)^0,w,c
  1294   000442  0AFF               	xorlw	255
  1295   000444  6E60               	movwf	(??_gpio_Pin_Write_Logic+2)^0,c
  1296   000446  C05B  FFD9         	movff	gpio_Pin_Write_Logic@pin_config,fsr2l
  1297   00044A  C05C  FFDA         	movff	gpio_Pin_Write_Logic@pin_config+1,fsr2h
  1298   00044E  50DF               	movf	223,w,c
  1299   000450  0B07               	andlw	7
  1300   000452  6E61               	movwf	(??_gpio_Pin_Write_Logic+3)^0,c
  1301   000454  5061               	movf	(??_gpio_Pin_Write_Logic+3)^0,w,c
  1302   000456  0D02               	mullw	2
  1303   000458  0E0B               	movlw	low _lat_registers
  1304   00045A  24F3               	addwf	243,w,c
  1305   00045C  6ED9               	movwf	fsr2l,c
  1306   00045E  0E00               	movlw	high _lat_registers
  1307   000460  20F4               	addwfc	prodh,w,c
  1308   000462  6EDA               	movwf	fsr2h,c
  1309   000464  CFDE F062          	movff	postinc2,??_gpio_Pin_Write_Logic+4
  1310   000468  CFDD F063          	movff	postdec2,??_gpio_Pin_Write_Logic+5
  1311   00046C  C062  FFD9         	movff	??_gpio_Pin_Write_Logic+4,fsr2l
  1312   000470  C063  FFDA         	movff	??_gpio_Pin_Write_Logic+5,fsr2h
  1313   000474  5060               	movf	(??_gpio_Pin_Write_Logic+2)^0,w,c
  1314   000476  16DF               	andwf	indf2,f,c
  1315                           
  1316                           ;MCAL_Layer/GPIO/hal_gpio.c: 83:             break;
  1317   000478  EF81  F002         	goto	l2123
  1318   00047C                     l2117:
  1319                           
  1320                           ;MCAL_Layer/GPIO/hal_gpio.c: 85:             (*lat_registers[pin_config->port] |=((uint8
      +                          )1 << pin_config->pin));
  1321   00047C  C05B  FFD9         	movff	gpio_Pin_Write_Logic@pin_config,fsr2l
  1322   000480  C05C  FFDA         	movff	gpio_Pin_Write_Logic@pin_config+1,fsr2h
  1323   000484  30DF               	rrcf	223,w,c
  1324   000486  32E8               	rrcf	wreg,f,c
  1325   000488  32E8               	rrcf	wreg,f,c
  1326   00048A  0B07               	andlw	7
  1327   00048C  6E5E               	movwf	??_gpio_Pin_Write_Logic^0,c
  1328   00048E  0E01               	movlw	1
  1329   000490  6E5F               	movwf	(??_gpio_Pin_Write_Logic+1)^0,c
  1330   000492  2A5E               	incf	??_gpio_Pin_Write_Logic^0,f,c
  1331   000494  EF4E  F002         	goto	u1034
  1332   000498                     u1035:
  1333   000498  90D8               	bcf	status,0,c
  1334   00049A  365F               	rlcf	(??_gpio_Pin_Write_Logic+1)^0,f,c
  1335   00049C                     u1034:
  1336   00049C  2E5E               	decfsz	??_gpio_Pin_Write_Logic^0,f,c
  1337   00049E  EF4C  F002         	goto	u1035
  1338   0004A2  C05B  FFD9         	movff	gpio_Pin_Write_Logic@pin_config,fsr2l
  1339   0004A6  C05C  FFDA         	movff	gpio_Pin_Write_Logic@pin_config+1,fsr2h
  1340   0004AA  50DF               	movf	223,w,c
  1341   0004AC  0B07               	andlw	7
  1342   0004AE  6E60               	movwf	(??_gpio_Pin_Write_Logic+2)^0,c
  1343   0004B0  5060               	movf	(??_gpio_Pin_Write_Logic+2)^0,w,c
  1344   0004B2  0D02               	mullw	2
  1345   0004B4  0E0B               	movlw	low _lat_registers
  1346   0004B6  24F3               	addwf	243,w,c
  1347   0004B8  6ED9               	movwf	fsr2l,c
  1348   0004BA  0E00               	movlw	high _lat_registers
  1349   0004BC  20F4               	addwfc	prodh,w,c
  1350   0004BE  6EDA               	movwf	fsr2h,c
  1351   0004C0  CFDE F061          	movff	postinc2,??_gpio_Pin_Write_Logic+3
  1352   0004C4  CFDD F062          	movff	postdec2,??_gpio_Pin_Write_Logic+4
  1353   0004C8  C061  FFD9         	movff	??_gpio_Pin_Write_Logic+3,fsr2l
  1354   0004CC  C062  FFDA         	movff	??_gpio_Pin_Write_Logic+4,fsr2h
  1355   0004D0  505F               	movf	(??_gpio_Pin_Write_Logic+1)^0,w,c
  1356   0004D2  12DF               	iorwf	indf2,f,c
  1357                           
  1358                           ;MCAL_Layer/GPIO/hal_gpio.c: 86:             break;
  1359   0004D4  EF81  F002         	goto	l2123
  1360   0004D8                     l2121:
  1361   0004D8  505D               	movf	gpio_Pin_Write_Logic@logic^0,w,c
  1362   0004DA  6E5E               	movwf	??_gpio_Pin_Write_Logic^0,c
  1363   0004DC  6A5F               	clrf	(??_gpio_Pin_Write_Logic+1)^0,c
  1364                           
  1365                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1366                           ; Switch size 1, requested type "simple"
  1367                           ; Number of cases is 1, Range of values is 0 to 0
  1368                           ; switch strategies available:
  1369                           ; Name         Instructions Cycles
  1370                           ; simple_byte            4     3 (average)
  1371                           ;	Chosen strategy is simple_byte
  1372   0004DE  505F               	movf	(??_gpio_Pin_Write_Logic+1)^0,w,c
  1373   0004E0  0A00               	xorlw	0	; case 0
  1374   0004E2  B4D8               	btfsc	status,2,c
  1375   0004E4  EF76  F002         	goto	l2577
  1376   0004E8  EF81  F002         	goto	l2123
  1377   0004EC                     l2577:
  1378                           
  1379                           ; Switch size 1, requested type "simple"
  1380                           ; Number of cases is 2, Range of values is 0 to 1
  1381                           ; switch strategies available:
  1382                           ; Name         Instructions Cycles
  1383                           ; simple_byte            7     4 (average)
  1384                           ;	Chosen strategy is simple_byte
  1385   0004EC  505E               	movf	??_gpio_Pin_Write_Logic^0,w,c
  1386   0004EE  0A00               	xorlw	0	; case 0
  1387   0004F0  B4D8               	btfsc	status,2,c
  1388   0004F2  EF0D  F002         	goto	l2115
  1389   0004F6  0A01               	xorlw	1	; case 1
  1390   0004F8  B4D8               	btfsc	status,2,c
  1391   0004FA  EF3E  F002         	goto	l2117
  1392   0004FE  EF81  F002         	goto	l2123
  1393   000502                     l2123:
  1394                           
  1395                           ;MCAL_Layer/GPIO/hal_gpio.c: 88:     return ret;
  1396   000502  5064               	movf	gpio_Pin_Write_Logic@ret^0,w,c
  1397   000504  0012               	return		;funcret
  1398   000506                     __end_of_gpio_Pin_Write_Logic:
  1399                           	callstack 0
  1400                           
  1401 ;; *************** function _gpio_Port_Write_Logic *****************
  1402 ;; Defined at:
  1403 ;;		line 206 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  port            1    wreg     enum E2983
  1406 ;;  logic           1    2[COMRAM] unsigned char 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  port            1    5[COMRAM] enum E2983
  1409 ;;  ret             1    0        unsigned char 
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  1    wreg      unsigned char 
  1412 ;; Registers used:
  1413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1419 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1420 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1421 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1423 ;;Total ram usage:        4 bytes
  1424 ;; Hardware stack levels used: 1
  1425 ;; Hardware stack levels required when called: 3
  1426 ;; This function calls:
  1427 ;;		Nothing
  1428 ;; This function is called by:
  1429 ;;		_main
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           	psect	text5
  1434   000B46                     __ptext5:
  1435                           	callstack 0
  1436   000B46                     _gpio_Port_Write_Logic:
  1437                           	callstack 27
  1438                           
  1439                           ;incstack = 0
  1440                           ;gpio_Port_Write_Logic@port stored from wreg
  1441   000B46  6E5E               	movwf	gpio_Port_Write_Logic@port^0,c
  1442   000B48                     
  1443                           ;MCAL_Layer/GPIO/hal_gpio.c: 208:     if (port > 5){
  1444   000B48  0E05               	movlw	5
  1445   000B4A  645E               	cpfsgt	gpio_Port_Write_Logic@port^0,c
  1446   000B4C  EFAA  F005         	goto	u1271
  1447   000B50  EFAC  F005         	goto	u1270
  1448   000B54                     u1271:
  1449   000B54  EFAE  F005         	goto	l2243
  1450   000B58                     u1270:
  1451   000B58                     
  1452                           ;MCAL_Layer/GPIO/hal_gpio.c: 210:     }
  1453   000B58  EFC0  F005         	goto	l117
  1454   000B5C                     l2243:
  1455                           
  1456                           ;MCAL_Layer/GPIO/hal_gpio.c: 212:         *lat_registers[port]=logic;
  1457   000B5C  505E               	movf	gpio_Port_Write_Logic@port^0,w,c
  1458   000B5E  0D02               	mullw	2
  1459   000B60  0E0B               	movlw	low _lat_registers
  1460   000B62  24F3               	addwf	243,w,c
  1461   000B64  6ED9               	movwf	fsr2l,c
  1462   000B66  0E00               	movlw	high _lat_registers
  1463   000B68  20F4               	addwfc	prodh,w,c
  1464   000B6A  6EDA               	movwf	fsr2h,c
  1465   000B6C  CFDE F05C          	movff	postinc2,??_gpio_Port_Write_Logic
  1466   000B70  CFDD F05D          	movff	postdec2,??_gpio_Port_Write_Logic+1
  1467   000B74  C05C  FFD9         	movff	??_gpio_Port_Write_Logic,fsr2l
  1468   000B78  C05D  FFDA         	movff	??_gpio_Port_Write_Logic+1,fsr2h
  1469   000B7C  C05B  FFDF         	movff	gpio_Port_Write_Logic@logic,indf2
  1470   000B80                     l117:
  1471   000B80  0012               	return		;funcret
  1472   000B82                     __end_of_gpio_Port_Write_Logic:
  1473                           	callstack 0
  1474                           
  1475 ;; *************** function _button_read_status *****************
  1476 ;; Defined at:
  1477 ;;		line 34 in file "ECU_Layer/button/ecu_button.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;  btn             2   11[COMRAM] PTR const struct .
  1480 ;;		 -> Btn3(3), Btn2(3), Btn1(3), 
  1481 ;;  btn_status      2   13[COMRAM] PTR enum E3027
  1482 ;;		 -> Button3Status(1), Button2Status(1), Button1Status(1), 
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;  button_logic    1   16[COMRAM] enum E2965
  1485 ;;  ret             1    0        unsigned char 
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      unsigned char 
  1488 ;; Registers used:
  1489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1495 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1497 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1498 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1499 ;;Total ram usage:        6 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; Hardware stack levels required when called: 4
  1502 ;; This function calls:
  1503 ;;		_gpio_Pin_Read_Logic
  1504 ;; This function is called by:
  1505 ;;		_main
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text6
  1510   0005CA                     __ptext6:
  1511                           	callstack 0
  1512   0005CA                     _button_read_status:
  1513                           	callstack 26
  1514   0005CA                     
  1515                           ;ECU_Layer/button/ecu_button.c: 36:  logic_t button_logic=GPIO_LOW;
  1516   0005CA  0E00               	movlw	0
  1517   0005CC  6E69               	movwf	button_read_status@button_logic^0,c
  1518   0005CE                     
  1519                           ;ECU_Layer/button/ecu_button.c: 37:       if (((void*)0)==btn || ((void*)0)==btn_status)
      +                          {
  1520   0005CE  5064               	movf	button_read_status@btn^0,w,c
  1521   0005D0  1065               	iorwf	(button_read_status@btn+1)^0,w,c
  1522   0005D2  B4D8               	btfsc	status,2,c
  1523   0005D4  EFEE  F002         	goto	u1311
  1524   0005D8  EFF0  F002         	goto	u1310
  1525   0005DC                     u1311:
  1526   0005DC  EFF9  F002         	goto	l2309
  1527   0005E0                     u1310:
  1528   0005E0  5066               	movf	button_read_status@btn_status^0,w,c
  1529   0005E2  1067               	iorwf	(button_read_status@btn_status+1)^0,w,c
  1530   0005E4  A4D8               	btfss	status,2,c
  1531   0005E6  EFF7  F002         	goto	u1321
  1532   0005EA  EFF9  F002         	goto	u1320
  1533   0005EE                     u1321:
  1534   0005EE  EFFB  F002         	goto	l2311
  1535   0005F2                     u1320:
  1536   0005F2                     l2309:
  1537                           
  1538                           ;ECU_Layer/button/ecu_button.c: 39:       }
  1539   0005F2  EF43  F003         	goto	l557
  1540   0005F6                     l2311:
  1541                           
  1542                           ;ECU_Layer/button/ecu_button.c: 41:           gpio_Pin_Read_Logic(&(btn->button_pin),&bu
      +                          tton_logic);
  1543   0005F6  C064  F05B         	movff	button_read_status@btn,gpio_Pin_Read_Logic@pin_config
  1544   0005FA  C065  F05C         	movff	button_read_status@btn+1,gpio_Pin_Read_Logic@pin_config+1
  1545   0005FE  0E69               	movlw	low button_read_status@button_logic
  1546   000600  6E5D               	movwf	gpio_Pin_Read_Logic@logic^0,c
  1547   000602  0E00               	movlw	high button_read_status@button_logic
  1548   000604  6E5E               	movwf	(gpio_Pin_Read_Logic@logic+1)^0,c
  1549   000606  ECF8  F003         	call	_gpio_Pin_Read_Logic	;wreg free
  1550   00060A                     
  1551                           ;ECU_Layer/button/ecu_button.c: 42:           if (BUTTON_ACTIVE_HIGH==btn->button_connec
      +                          tion){
  1552   00060A  EE20 F001          	lfsr	2,1
  1553   00060E  5064               	movf	button_read_status@btn^0,w,c
  1554   000610  26D9               	addwf	fsr2l,f,c
  1555   000612  5065               	movf	(button_read_status@btn+1)^0,w,c
  1556   000614  22DA               	addwfc	fsr2h,f,c
  1557   000616  50DF               	movf	indf2,w,c
  1558   000618  A4D8               	btfss	status,2,c
  1559   00061A  EF11  F003         	goto	u1331
  1560   00061E  EF13  F003         	goto	u1330
  1561   000622                     u1331:
  1562   000622  EF2B  F003         	goto	l2321
  1563   000626                     u1330:
  1564   000626                     
  1565                           ;ECU_Layer/button/ecu_button.c: 43:               if (GPIO_HIGH==button_logic){
  1566   000626  0469               	decf	button_read_status@button_logic^0,w,c
  1567   000628  A4D8               	btfss	status,2,c
  1568   00062A  EF19  F003         	goto	u1341
  1569   00062E  EF1B  F003         	goto	u1340
  1570   000632                     u1341:
  1571   000632  EF23  F003         	goto	l2319
  1572   000636                     u1340:
  1573   000636                     l2317:
  1574                           
  1575                           ;ECU_Layer/button/ecu_button.c: 44:                   *btn_status=BUTTON_PRESSED;
  1576   000636  C066  FFD9         	movff	button_read_status@btn_status,fsr2l
  1577   00063A  C067  FFDA         	movff	button_read_status@btn_status+1,fsr2h
  1578   00063E  0E00               	movlw	0
  1579   000640  6EDF               	movwf	indf2,c
  1580                           
  1581                           ;ECU_Layer/button/ecu_button.c: 45:               }
  1582   000642  EF43  F003         	goto	l557
  1583   000646                     l2319:
  1584                           
  1585                           ;ECU_Layer/button/ecu_button.c: 47:                   *btn_status=BUTTON_NOT_PRESSED;
  1586   000646  C066  FFD9         	movff	button_read_status@btn_status,fsr2l
  1587   00064A  C067  FFDA         	movff	button_read_status@btn_status+1,fsr2h
  1588   00064E  0E01               	movlw	1
  1589   000650  6EDF               	movwf	indf2,c
  1590   000652  EF43  F003         	goto	l557
  1591   000656                     l2321:
  1592   000656  EE20 F001          	lfsr	2,1
  1593   00065A  5064               	movf	button_read_status@btn^0,w,c
  1594   00065C  26D9               	addwf	fsr2l,f,c
  1595   00065E  5065               	movf	(button_read_status@btn+1)^0,w,c
  1596   000660  22DA               	addwfc	fsr2h,f,c
  1597   000662  04DE               	decf	postinc2,w,c
  1598   000664  A4D8               	btfss	status,2,c
  1599   000666  EF37  F003         	goto	u1351
  1600   00066A  EF39  F003         	goto	u1350
  1601   00066E                     u1351:
  1602   00066E  EF43  F003         	goto	l552
  1603   000672                     u1350:
  1604   000672                     
  1605                           ;ECU_Layer/button/ecu_button.c: 51:               if (GPIO_LOW==button_logic){
  1606   000672  5069               	movf	button_read_status@button_logic^0,w,c
  1607   000674  A4D8               	btfss	status,2,c
  1608   000676  EF3F  F003         	goto	u1361
  1609   00067A  EF41  F003         	goto	u1360
  1610   00067E                     u1361:
  1611   00067E  EF23  F003         	goto	l2319
  1612   000682                     u1360:
  1613   000682  EF1B  F003         	goto	l2317
  1614   000686                     l552:
  1615   000686                     l557:
  1616   000686  0012               	return		;funcret
  1617   000688                     __end_of_button_read_status:
  1618                           	callstack 0
  1619                           
  1620 ;; *************** function _gpio_Pin_Read_Logic *****************
  1621 ;; Defined at:
  1622 ;;		line 101 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;  pin_config      2    2[COMRAM] PTR const struct .
  1625 ;;		 -> Btn3(3), Btn2(3), Btn1(3), 
  1626 ;;  logic           2    4[COMRAM] PTR enum E2965
  1627 ;;		 -> button_read_status@button_logic(1), 
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;  ret             1    0        unsigned char 
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  1    wreg      unsigned char 
  1632 ;; Registers used:
  1633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1639 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1641 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1642 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1643 ;;Total ram usage:        9 bytes
  1644 ;; Hardware stack levels used: 1
  1645 ;; Hardware stack levels required when called: 3
  1646 ;; This function calls:
  1647 ;;		Nothing
  1648 ;; This function is called by:
  1649 ;;		_button_read_status
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           	psect	text7
  1654   0007F0                     __ptext7:
  1655                           	callstack 0
  1656   0007F0                     _gpio_Pin_Read_Logic:
  1657                           	callstack 26
  1658   0007F0                     
  1659                           ;MCAL_Layer/GPIO/hal_gpio.c: 103:     if (((void*)0)==pin_config || ((void*)0)==logic ||
      +                           pin_config->pin > 8 -1){
  1660   0007F0  505B               	movf	gpio_Pin_Read_Logic@pin_config^0,w,c
  1661   0007F2  105C               	iorwf	(gpio_Pin_Read_Logic@pin_config+1)^0,w,c
  1662   0007F4  B4D8               	btfsc	status,2,c
  1663   0007F6  EFFF  F003         	goto	u1121
  1664   0007FA  EF01  F004         	goto	u1120
  1665   0007FE                     u1121:
  1666   0007FE  EF1B  F004         	goto	l2177
  1667   000802                     u1120:
  1668   000802  505D               	movf	gpio_Pin_Read_Logic@logic^0,w,c
  1669   000804  105E               	iorwf	(gpio_Pin_Read_Logic@logic+1)^0,w,c
  1670   000806  B4D8               	btfsc	status,2,c
  1671   000808  EF08  F004         	goto	u1131
  1672   00080C  EF0A  F004         	goto	u1130
  1673   000810                     u1131:
  1674   000810  EF1B  F004         	goto	l2177
  1675   000814                     u1130:
  1676   000814  C05B  FFD9         	movff	gpio_Pin_Read_Logic@pin_config,fsr2l
  1677   000818  C05C  FFDA         	movff	gpio_Pin_Read_Logic@pin_config+1,fsr2h
  1678   00081C  30DF               	rrcf	223,w,c
  1679   00081E  32E8               	rrcf	wreg,f,c
  1680   000820  32E8               	rrcf	wreg,f,c
  1681   000822  0B07               	andlw	7
  1682   000824  6E5F               	movwf	??_gpio_Pin_Read_Logic^0,c
  1683   000826  0E07               	movlw	7
  1684   000828  645F               	cpfsgt	??_gpio_Pin_Read_Logic^0,c
  1685   00082A  EF19  F004         	goto	u1141
  1686   00082E  EF1B  F004         	goto	u1140
  1687   000832                     u1141:
  1688   000832  EF1D  F004         	goto	l2179
  1689   000836                     u1140:
  1690   000836                     l2177:
  1691                           
  1692                           ;MCAL_Layer/GPIO/hal_gpio.c: 105:     }
  1693   000836  EF4E  F004         	goto	l88
  1694   00083A                     l2179:
  1695                           
  1696                           ;MCAL_Layer/GPIO/hal_gpio.c: 107:         *logic=((*port_registers[pin_config->port] >> 
      +                          pin_config->pin) & (uint8)1);
  1697   00083A  C05B  FFD9         	movff	gpio_Pin_Read_Logic@pin_config,fsr2l
  1698   00083E  C05C  FFDA         	movff	gpio_Pin_Read_Logic@pin_config+1,fsr2h
  1699   000842  30DF               	rrcf	223,w,c
  1700   000844  32E8               	rrcf	wreg,f,c
  1701   000846  32E8               	rrcf	wreg,f,c
  1702   000848  0B07               	andlw	7
  1703   00084A  6E5F               	movwf	??_gpio_Pin_Read_Logic^0,c
  1704   00084C  C05B  FFD9         	movff	gpio_Pin_Read_Logic@pin_config,fsr2l
  1705   000850  C05C  FFDA         	movff	gpio_Pin_Read_Logic@pin_config+1,fsr2h
  1706   000854  50DF               	movf	223,w,c
  1707   000856  0B07               	andlw	7
  1708   000858  6E60               	movwf	(??_gpio_Pin_Read_Logic+1)^0,c
  1709   00085A  5060               	movf	(??_gpio_Pin_Read_Logic+1)^0,w,c
  1710   00085C  0D02               	mullw	2
  1711   00085E  0E01               	movlw	low _port_registers
  1712   000860  24F3               	addwf	243,w,c
  1713   000862  6ED9               	movwf	fsr2l,c
  1714   000864  0E00               	movlw	high _port_registers
  1715   000866  20F4               	addwfc	prodh,w,c
  1716   000868  6EDA               	movwf	fsr2h,c
  1717   00086A  CFDE F061          	movff	postinc2,??_gpio_Pin_Read_Logic+2
  1718   00086E  CFDD F062          	movff	postdec2,??_gpio_Pin_Read_Logic+3
  1719   000872  C061  FFD9         	movff	??_gpio_Pin_Read_Logic+2,fsr2l
  1720   000876  C062  FFDA         	movff	??_gpio_Pin_Read_Logic+3,fsr2h
  1721   00087A  50DF               	movf	indf2,w,c
  1722   00087C  6E63               	movwf	(??_gpio_Pin_Read_Logic+4)^0,c
  1723   00087E  2A5F               	incf	??_gpio_Pin_Read_Logic^0,f,c
  1724   000880  EF44  F004         	goto	u1154
  1725   000884                     u1155:
  1726   000884  90D8               	bcf	status,0,c
  1727   000886  3263               	rrcf	(??_gpio_Pin_Read_Logic+4)^0,f,c
  1728   000888                     u1154:
  1729   000888  2E5F               	decfsz	??_gpio_Pin_Read_Logic^0,f,c
  1730   00088A  EF42  F004         	goto	u1155
  1731   00088E  5063               	movf	(??_gpio_Pin_Read_Logic+4)^0,w,c
  1732   000890  0B01               	andlw	1
  1733   000892  C05D  FFD9         	movff	gpio_Pin_Read_Logic@logic,fsr2l
  1734   000896  C05E  FFDA         	movff	gpio_Pin_Read_Logic@logic+1,fsr2h
  1735   00089A  6EDF               	movwf	indf2,c
  1736   00089C                     l88:
  1737   00089C  0012               	return		;funcret
  1738   00089E                     __end_of_gpio_Pin_Read_Logic:
  1739                           	callstack 0
  1740                           
  1741 ;; *************** function _button_inialize *****************
  1742 ;; Defined at:
  1743 ;;		line 15 in file "ECU_Layer/button/ecu_button.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  btn             2   11[COMRAM] PTR const struct .
  1746 ;;		 -> Btn3(3), Btn2(3), Btn1(3), 
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  ret             1    0        unsigned char 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      unsigned char 
  1751 ;; Registers used:
  1752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1758 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1761 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1762 ;;Total ram usage:        2 bytes
  1763 ;; Hardware stack levels used: 1
  1764 ;; Hardware stack levels required when called: 4
  1765 ;; This function calls:
  1766 ;;		_gpio_Pin_Derction_Intialize
  1767 ;; This function is called by:
  1768 ;;		_main
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           	psect	text8
  1773   000C64                     __ptext8:
  1774                           	callstack 0
  1775   000C64                     _button_inialize:
  1776                           	callstack 26
  1777   000C64                     
  1778                           ;ECU_Layer/button/ecu_button.c: 17:       if (((void*)0)==btn){
  1779   000C64  5064               	movf	button_inialize@btn^0,w,c
  1780   000C66  1065               	iorwf	(button_inialize@btn+1)^0,w,c
  1781   000C68  A4D8               	btfss	status,2,c
  1782   000C6A  EF39  F006         	goto	u1301
  1783   000C6E  EF3B  F006         	goto	u1300
  1784   000C72                     u1301:
  1785   000C72  EF3D  F006         	goto	l2299
  1786   000C76                     u1300:
  1787   000C76                     
  1788                           ;ECU_Layer/button/ecu_button.c: 19:       }
  1789   000C76  EF43  F006         	goto	l542
  1790   000C7A                     l2299:
  1791   000C7A  C064  F05B         	movff	button_inialize@btn,gpio_Pin_Derction_Intialize@pin_config
  1792   000C7E  C065  F05C         	movff	button_inialize@btn+1,gpio_Pin_Derction_Intialize@pin_config+1
  1793   000C82  EC4B  F001         	call	_gpio_Pin_Derction_Intialize	;wreg free
  1794   000C86                     l542:
  1795   000C86  0012               	return		;funcret
  1796   000C88                     __end_of_button_inialize:
  1797                           	callstack 0
  1798                           
  1799 ;; *************** function _gpio_Pin_Derction_Intialize *****************
  1800 ;; Defined at:
  1801 ;;		line 24 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;  pin_config      2    2[COMRAM] PTR const struct .
  1804 ;;		 -> Enable6(1), Enable5(1), Enable4(1), Enable3(1), 
  1805 ;;		 -> Enable2(1), Enable1(1), Btn3(3), Btn2(3), 
  1806 ;;		 -> Btn1(3), Seg_Obj.segment_pin(4), Seg_Obj(5), 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;  ret             1   10[COMRAM] unsigned char 
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  1    wreg      unsigned char 
  1811 ;; Registers used:
  1812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1818 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1820 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1822 ;;Total ram usage:        9 bytes
  1823 ;; Hardware stack levels used: 1
  1824 ;; Hardware stack levels required when called: 3
  1825 ;; This function calls:
  1826 ;;		Nothing
  1827 ;; This function is called by:
  1828 ;;		_gpio_Pin_Intialize
  1829 ;;		_button_inialize
  1830 ;;		_external_interrupt_RBx_Init
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           	psect	text9
  1835   000296                     __ptext9:
  1836                           	callstack 0
  1837   000296                     _gpio_Pin_Derction_Intialize:
  1838                           	callstack 25
  1839   000296                     
  1840                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     Std_ReturnType ret=(Std_ReturnType)0x01;
  1841   000296  0E01               	movlw	1
  1842   000298  6E63               	movwf	gpio_Pin_Derction_Intialize@ret^0,c
  1843   00029A                     
  1844                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     if ((((void*)0)==pin_config) || (pin_config->pin > 
      +                          8 -1)){
  1845   00029A  505B               	movf	gpio_Pin_Derction_Intialize@pin_config^0,w,c
  1846   00029C  105C               	iorwf	(gpio_Pin_Derction_Intialize@pin_config+1)^0,w,c
  1847   00029E  B4D8               	btfsc	status,2,c
  1848   0002A0  EF54  F001         	goto	u1041
  1849   0002A4  EF56  F001         	goto	u1040
  1850   0002A8                     u1041:
  1851   0002A8  EF67  F001         	goto	l2137
  1852   0002AC                     u1040:
  1853   0002AC  C05B  FFD9         	movff	gpio_Pin_Derction_Intialize@pin_config,fsr2l
  1854   0002B0  C05C  FFDA         	movff	gpio_Pin_Derction_Intialize@pin_config+1,fsr2h
  1855   0002B4  30DF               	rrcf	223,w,c
  1856   0002B6  32E8               	rrcf	wreg,f,c
  1857   0002B8  32E8               	rrcf	wreg,f,c
  1858   0002BA  0B07               	andlw	7
  1859   0002BC  6E5D               	movwf	??_gpio_Pin_Derction_Intialize^0,c
  1860   0002BE  0E07               	movlw	7
  1861   0002C0  645D               	cpfsgt	??_gpio_Pin_Derction_Intialize^0,c
  1862   0002C2  EF65  F001         	goto	u1051
  1863   0002C6  EF67  F001         	goto	u1050
  1864   0002CA                     u1051:
  1865   0002CA  EFCA  F001         	goto	l2145
  1866   0002CE                     u1050:
  1867   0002CE                     l2137:
  1868                           
  1869                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:         ret=(Std_ReturnType)0x00;
  1870   0002CE  0E00               	movlw	0
  1871   0002D0  6E63               	movwf	gpio_Pin_Derction_Intialize@ret^0,c
  1872                           
  1873                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:     }
  1874   0002D2  EFEB  F001         	goto	l2147
  1875   0002D6                     l2139:
  1876                           
  1877                           ;MCAL_Layer/GPIO/hal_gpio.c: 32:                 (*tris_registers[pin_config->port] &=~(
      +                          (uint8)1 << pin_config->pin));
  1878   0002D6  C05B  FFD9         	movff	gpio_Pin_Derction_Intialize@pin_config,fsr2l
  1879   0002DA  C05C  FFDA         	movff	gpio_Pin_Derction_Intialize@pin_config+1,fsr2h
  1880   0002DE  30DF               	rrcf	223,w,c
  1881   0002E0  32E8               	rrcf	wreg,f,c
  1882   0002E2  32E8               	rrcf	wreg,f,c
  1883   0002E4  0B07               	andlw	7
  1884   0002E6  6E5D               	movwf	??_gpio_Pin_Derction_Intialize^0,c
  1885   0002E8  0E01               	movlw	1
  1886   0002EA  6E5E               	movwf	(??_gpio_Pin_Derction_Intialize+1)^0,c
  1887   0002EC  2A5D               	incf	??_gpio_Pin_Derction_Intialize^0,f,c
  1888   0002EE  EF7B  F001         	goto	u1064
  1889   0002F2                     u1065:
  1890   0002F2  90D8               	bcf	status,0,c
  1891   0002F4  365E               	rlcf	(??_gpio_Pin_Derction_Intialize+1)^0,f,c
  1892   0002F6                     u1064:
  1893   0002F6  2E5D               	decfsz	??_gpio_Pin_Derction_Intialize^0,f,c
  1894   0002F8  EF79  F001         	goto	u1065
  1895   0002FC  505E               	movf	(??_gpio_Pin_Derction_Intialize+1)^0,w,c
  1896   0002FE  0AFF               	xorlw	255
  1897   000300  6E5F               	movwf	(??_gpio_Pin_Derction_Intialize+2)^0,c
  1898   000302  C05B  FFD9         	movff	gpio_Pin_Derction_Intialize@pin_config,fsr2l
  1899   000306  C05C  FFDA         	movff	gpio_Pin_Derction_Intialize@pin_config+1,fsr2h
  1900   00030A  50DF               	movf	223,w,c
  1901   00030C  0B07               	andlw	7
  1902   00030E  6E60               	movwf	(??_gpio_Pin_Derction_Intialize+3)^0,c
  1903   000310  5060               	movf	(??_gpio_Pin_Derction_Intialize+3)^0,w,c
  1904   000312  0D02               	mullw	2
  1905   000314  0E15               	movlw	low _tris_registers
  1906   000316  24F3               	addwf	243,w,c
  1907   000318  6ED9               	movwf	fsr2l,c
  1908   00031A  0E00               	movlw	high _tris_registers
  1909   00031C  20F4               	addwfc	prodh,w,c
  1910   00031E  6EDA               	movwf	fsr2h,c
  1911   000320  CFDE F061          	movff	postinc2,??_gpio_Pin_Derction_Intialize+4
  1912   000324  CFDD F062          	movff	postdec2,??_gpio_Pin_Derction_Intialize+5
  1913   000328  C061  FFD9         	movff	??_gpio_Pin_Derction_Intialize+4,fsr2l
  1914   00032C  C062  FFDA         	movff	??_gpio_Pin_Derction_Intialize+5,fsr2h
  1915   000330  505F               	movf	(??_gpio_Pin_Derction_Intialize+2)^0,w,c
  1916   000332  16DF               	andwf	indf2,f,c
  1917                           
  1918                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:              break;
  1919   000334  EFEB  F001         	goto	l2147
  1920   000338                     l2141:
  1921                           
  1922                           ;MCAL_Layer/GPIO/hal_gpio.c: 35:                 (*tris_registers[pin_config->port] |=((
      +                          uint8)1 << pin_config->pin));
  1923   000338  C05B  FFD9         	movff	gpio_Pin_Derction_Intialize@pin_config,fsr2l
  1924   00033C  C05C  FFDA         	movff	gpio_Pin_Derction_Intialize@pin_config+1,fsr2h
  1925   000340  30DF               	rrcf	223,w,c
  1926   000342  32E8               	rrcf	wreg,f,c
  1927   000344  32E8               	rrcf	wreg,f,c
  1928   000346  0B07               	andlw	7
  1929   000348  6E5D               	movwf	??_gpio_Pin_Derction_Intialize^0,c
  1930   00034A  0E01               	movlw	1
  1931   00034C  6E5E               	movwf	(??_gpio_Pin_Derction_Intialize+1)^0,c
  1932   00034E  2A5D               	incf	??_gpio_Pin_Derction_Intialize^0,f,c
  1933   000350  EFAC  F001         	goto	u1074
  1934   000354                     u1075:
  1935   000354  90D8               	bcf	status,0,c
  1936   000356  365E               	rlcf	(??_gpio_Pin_Derction_Intialize+1)^0,f,c
  1937   000358                     u1074:
  1938   000358  2E5D               	decfsz	??_gpio_Pin_Derction_Intialize^0,f,c
  1939   00035A  EFAA  F001         	goto	u1075
  1940   00035E  C05B  FFD9         	movff	gpio_Pin_Derction_Intialize@pin_config,fsr2l
  1941   000362  C05C  FFDA         	movff	gpio_Pin_Derction_Intialize@pin_config+1,fsr2h
  1942   000366  50DF               	movf	223,w,c
  1943   000368  0B07               	andlw	7
  1944   00036A  6E5F               	movwf	(??_gpio_Pin_Derction_Intialize+2)^0,c
  1945   00036C  505F               	movf	(??_gpio_Pin_Derction_Intialize+2)^0,w,c
  1946   00036E  0D02               	mullw	2
  1947   000370  0E15               	movlw	low _tris_registers
  1948   000372  24F3               	addwf	243,w,c
  1949   000374  6ED9               	movwf	fsr2l,c
  1950   000376  0E00               	movlw	high _tris_registers
  1951   000378  20F4               	addwfc	prodh,w,c
  1952   00037A  6EDA               	movwf	fsr2h,c
  1953   00037C  CFDE F060          	movff	postinc2,??_gpio_Pin_Derction_Intialize+3
  1954   000380  CFDD F061          	movff	postdec2,??_gpio_Pin_Derction_Intialize+4
  1955   000384  C060  FFD9         	movff	??_gpio_Pin_Derction_Intialize+3,fsr2l
  1956   000388  C061  FFDA         	movff	??_gpio_Pin_Derction_Intialize+4,fsr2h
  1957   00038C  505E               	movf	(??_gpio_Pin_Derction_Intialize+1)^0,w,c
  1958   00038E  12DF               	iorwf	indf2,f,c
  1959                           
  1960                           ;MCAL_Layer/GPIO/hal_gpio.c: 36:                 break;
  1961   000390  EFEB  F001         	goto	l2147
  1962   000394                     l2145:
  1963   000394  C05B  FFD9         	movff	gpio_Pin_Derction_Intialize@pin_config,fsr2l
  1964   000398  C05C  FFDA         	movff	gpio_Pin_Derction_Intialize@pin_config+1,fsr2h
  1965   00039C  BCDF               	btfsc	indf2,6,c
  1966   00039E  EFD3  F001         	goto	u1081
  1967   0003A2  EFD6  F001         	goto	u1080
  1968   0003A6                     u1081:
  1969   0003A6  0E01               	movlw	1
  1970   0003A8  EFD7  F001         	goto	u1090
  1971   0003AC                     u1080:
  1972   0003AC  0E00               	movlw	0
  1973   0003AE                     u1090:
  1974   0003AE  6E5D               	movwf	??_gpio_Pin_Derction_Intialize^0,c
  1975   0003B0  6A5E               	clrf	(??_gpio_Pin_Derction_Intialize+1)^0,c
  1976                           
  1977                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1978                           ; Switch size 1, requested type "simple"
  1979                           ; Number of cases is 1, Range of values is 0 to 0
  1980                           ; switch strategies available:
  1981                           ; Name         Instructions Cycles
  1982                           ; simple_byte            4     3 (average)
  1983                           ;	Chosen strategy is simple_byte
  1984   0003B2  505E               	movf	(??_gpio_Pin_Derction_Intialize+1)^0,w,c
  1985   0003B4  0A00               	xorlw	0	; case 0
  1986   0003B6  B4D8               	btfsc	status,2,c
  1987   0003B8  EFE0  F001         	goto	l2579
  1988   0003BC  EF67  F001         	goto	l2137
  1989   0003C0                     l2579:
  1990                           
  1991                           ; Switch size 1, requested type "simple"
  1992                           ; Number of cases is 2, Range of values is 0 to 1
  1993                           ; switch strategies available:
  1994                           ; Name         Instructions Cycles
  1995                           ; simple_byte            7     4 (average)
  1996                           ;	Chosen strategy is simple_byte
  1997   0003C0  505D               	movf	??_gpio_Pin_Derction_Intialize^0,w,c
  1998   0003C2  0A00               	xorlw	0	; case 0
  1999   0003C4  B4D8               	btfsc	status,2,c
  2000   0003C6  EF6B  F001         	goto	l2139
  2001   0003CA  0A01               	xorlw	1	; case 1
  2002   0003CC  B4D8               	btfsc	status,2,c
  2003   0003CE  EF9C  F001         	goto	l2141
  2004   0003D2  EF67  F001         	goto	l2137
  2005   0003D6                     l2147:
  2006                           
  2007                           ;MCAL_Layer/GPIO/hal_gpio.c: 40:     return ret;
  2008   0003D6  5063               	movf	gpio_Pin_Derction_Intialize@ret^0,w,c
  2009   0003D8  0012               	return		;funcret
  2010   0003DA                     __end_of_gpio_Pin_Derction_Intialize:
  2011                           	callstack 0
  2012                           
  2013 ;; *************** function ___awmod *****************
  2014 ;; Defined at:
  2015 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  dividend        2    2[COMRAM] int 
  2018 ;;  divisor         2    4[COMRAM] int 
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;  sign            1    7[COMRAM] unsigned char 
  2021 ;;  counter         1    6[COMRAM] unsigned char 
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  2    2[COMRAM] int 
  2024 ;; Registers used:
  2025 ;;		wreg, status,2, status,0
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2031 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2032 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2035 ;;Total ram usage:        6 bytes
  2036 ;; Hardware stack levels used: 1
  2037 ;; Hardware stack levels required when called: 3
  2038 ;; This function calls:
  2039 ;;		Nothing
  2040 ;; This function is called by:
  2041 ;;		_main
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	text10
  2046   000740                     __ptext10:
  2047                           	callstack 0
  2048   000740                     ___awmod:
  2049                           	callstack 27
  2050   000740  0E00               	movlw	0
  2051   000742  6E60               	movwf	___awmod@sign^0,c
  2052   000744  BE5C               	btfsc	(___awmod@dividend+1)^0,7,c
  2053   000746  EFA9  F003         	goto	u1430
  2054   00074A  EFA7  F003         	goto	u1431
  2055   00074E                     u1431:
  2056   00074E  EFAF  F003         	goto	l2381
  2057   000752                     u1430:
  2058   000752  6C5B               	negf	___awmod@dividend^0,c
  2059   000754  1E5C               	comf	(___awmod@dividend+1)^0,f,c
  2060   000756  B0D8               	btfsc	status,0,c
  2061   000758  2A5C               	incf	(___awmod@dividend+1)^0,f,c
  2062   00075A  0E01               	movlw	1
  2063   00075C  6E60               	movwf	___awmod@sign^0,c
  2064   00075E                     l2381:
  2065   00075E  BE5E               	btfsc	(___awmod@divisor+1)^0,7,c
  2066   000760  EFB6  F003         	goto	u1440
  2067   000764  EFB4  F003         	goto	u1441
  2068   000768                     u1441:
  2069   000768  EFBA  F003         	goto	l2385
  2070   00076C                     u1440:
  2071   00076C  6C5D               	negf	___awmod@divisor^0,c
  2072   00076E  1E5E               	comf	(___awmod@divisor+1)^0,f,c
  2073   000770  B0D8               	btfsc	status,0,c
  2074   000772  2A5E               	incf	(___awmod@divisor+1)^0,f,c
  2075   000774                     l2385:
  2076   000774  505D               	movf	___awmod@divisor^0,w,c
  2077   000776  105E               	iorwf	(___awmod@divisor+1)^0,w,c
  2078   000778  B4D8               	btfsc	status,2,c
  2079   00077A  EFC1  F003         	goto	u1451
  2080   00077E  EFC3  F003         	goto	u1450
  2081   000782                     u1451:
  2082   000782  EFE7  F003         	goto	l2401
  2083   000786                     u1450:
  2084   000786  0E01               	movlw	1
  2085   000788  6E5F               	movwf	___awmod@counter^0,c
  2086   00078A  EFCB  F003         	goto	l2391
  2087   00078E                     l2389:
  2088   00078E  90D8               	bcf	status,0,c
  2089   000790  365D               	rlcf	___awmod@divisor^0,f,c
  2090   000792  365E               	rlcf	(___awmod@divisor+1)^0,f,c
  2091   000794  2A5F               	incf	___awmod@counter^0,f,c
  2092   000796                     l2391:
  2093   000796  AE5E               	btfss	(___awmod@divisor+1)^0,7,c
  2094   000798  EFD0  F003         	goto	u1461
  2095   00079C  EFD2  F003         	goto	u1460
  2096   0007A0                     u1461:
  2097   0007A0  EFC7  F003         	goto	l2389
  2098   0007A4                     u1460:
  2099   0007A4                     l2393:
  2100   0007A4  505D               	movf	___awmod@divisor^0,w,c
  2101   0007A6  5C5B               	subwf	___awmod@dividend^0,w,c
  2102   0007A8  505E               	movf	(___awmod@divisor+1)^0,w,c
  2103   0007AA  585C               	subwfb	(___awmod@dividend+1)^0,w,c
  2104   0007AC  A0D8               	btfss	status,0,c
  2105   0007AE  EFDB  F003         	goto	u1471
  2106   0007B2  EFDD  F003         	goto	u1470
  2107   0007B6                     u1471:
  2108   0007B6  EFE1  F003         	goto	l2397
  2109   0007BA                     u1470:
  2110   0007BA  505D               	movf	___awmod@divisor^0,w,c
  2111   0007BC  5E5B               	subwf	___awmod@dividend^0,f,c
  2112   0007BE  505E               	movf	(___awmod@divisor+1)^0,w,c
  2113   0007C0  5A5C               	subwfb	(___awmod@dividend+1)^0,f,c
  2114   0007C2                     l2397:
  2115   0007C2  90D8               	bcf	status,0,c
  2116   0007C4  325E               	rrcf	(___awmod@divisor+1)^0,f,c
  2117   0007C6  325D               	rrcf	___awmod@divisor^0,f,c
  2118   0007C8  2E5F               	decfsz	___awmod@counter^0,f,c
  2119   0007CA  EFD2  F003         	goto	l2393
  2120   0007CE                     l2401:
  2121   0007CE  5060               	movf	___awmod@sign^0,w,c
  2122   0007D0  B4D8               	btfsc	status,2,c
  2123   0007D2  EFED  F003         	goto	u1481
  2124   0007D6  EFEF  F003         	goto	u1480
  2125   0007DA                     u1481:
  2126   0007DA  EFF3  F003         	goto	l2405
  2127   0007DE                     u1480:
  2128   0007DE  6C5B               	negf	___awmod@dividend^0,c
  2129   0007E0  1E5C               	comf	(___awmod@dividend+1)^0,f,c
  2130   0007E2  B0D8               	btfsc	status,0,c
  2131   0007E4  2A5C               	incf	(___awmod@dividend+1)^0,f,c
  2132   0007E6                     l2405:
  2133   0007E6  C05B  F05B         	movff	___awmod@dividend,?___awmod
  2134   0007EA  C05C  F05C         	movff	___awmod@dividend+1,?___awmod+1
  2135   0007EE  0012               	return		;funcret
  2136   0007F0                     __end_of___awmod:
  2137                           	callstack 0
  2138                           
  2139 ;; *************** function ___awdiv *****************
  2140 ;; Defined at:
  2141 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  dividend        2    2[COMRAM] int 
  2144 ;;  divisor         2    4[COMRAM] int 
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;  quotient        2    8[COMRAM] int 
  2147 ;;  sign            1    7[COMRAM] unsigned char 
  2148 ;;  counter         1    6[COMRAM] unsigned char 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  2    2[COMRAM] int 
  2151 ;; Registers used:
  2152 ;;		wreg, status,2, status,0
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2158 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2159 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2162 ;;Total ram usage:        8 bytes
  2163 ;; Hardware stack levels used: 1
  2164 ;; Hardware stack levels required when called: 3
  2165 ;; This function calls:
  2166 ;;		Nothing
  2167 ;; This function is called by:
  2168 ;;		_main
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           	psect	text11
  2173   000506                     __ptext11:
  2174                           	callstack 0
  2175   000506                     ___awdiv:
  2176                           	callstack 27
  2177   000506  0E00               	movlw	0
  2178   000508  6E60               	movwf	___awdiv@sign^0,c
  2179   00050A  BE5E               	btfsc	(___awdiv@divisor+1)^0,7,c
  2180   00050C  EF8C  F002         	goto	u1370
  2181   000510  EF8A  F002         	goto	u1371
  2182   000514                     u1371:
  2183   000514  EF92  F002         	goto	l2337
  2184   000518                     u1370:
  2185   000518  6C5D               	negf	___awdiv@divisor^0,c
  2186   00051A  1E5E               	comf	(___awdiv@divisor+1)^0,f,c
  2187   00051C  B0D8               	btfsc	status,0,c
  2188   00051E  2A5E               	incf	(___awdiv@divisor+1)^0,f,c
  2189   000520  0E01               	movlw	1
  2190   000522  6E60               	movwf	___awdiv@sign^0,c
  2191   000524                     l2337:
  2192   000524  BE5C               	btfsc	(___awdiv@dividend+1)^0,7,c
  2193   000526  EF99  F002         	goto	u1380
  2194   00052A  EF97  F002         	goto	u1381
  2195   00052E                     u1381:
  2196   00052E  EF9F  F002         	goto	l2343
  2197   000532                     u1380:
  2198   000532  6C5B               	negf	___awdiv@dividend^0,c
  2199   000534  1E5C               	comf	(___awdiv@dividend+1)^0,f,c
  2200   000536  B0D8               	btfsc	status,0,c
  2201   000538  2A5C               	incf	(___awdiv@dividend+1)^0,f,c
  2202   00053A  0E01               	movlw	1
  2203   00053C  1A60               	xorwf	___awdiv@sign^0,f,c
  2204   00053E                     l2343:
  2205   00053E  0E00               	movlw	0
  2206   000540  6E62               	movwf	(___awdiv@quotient+1)^0,c
  2207   000542  0E00               	movlw	0
  2208   000544  6E61               	movwf	___awdiv@quotient^0,c
  2209   000546  505D               	movf	___awdiv@divisor^0,w,c
  2210   000548  105E               	iorwf	(___awdiv@divisor+1)^0,w,c
  2211   00054A  B4D8               	btfsc	status,2,c
  2212   00054C  EFAA  F002         	goto	u1391
  2213   000550  EFAC  F002         	goto	u1390
  2214   000554                     u1391:
  2215   000554  EFD4  F002         	goto	l2365
  2216   000558                     u1390:
  2217   000558  0E01               	movlw	1
  2218   00055A  6E5F               	movwf	___awdiv@counter^0,c
  2219   00055C  EFB4  F002         	goto	l2351
  2220   000560                     l2349:
  2221   000560  90D8               	bcf	status,0,c
  2222   000562  365D               	rlcf	___awdiv@divisor^0,f,c
  2223   000564  365E               	rlcf	(___awdiv@divisor+1)^0,f,c
  2224   000566  2A5F               	incf	___awdiv@counter^0,f,c
  2225   000568                     l2351:
  2226   000568  AE5E               	btfss	(___awdiv@divisor+1)^0,7,c
  2227   00056A  EFB9  F002         	goto	u1401
  2228   00056E  EFBB  F002         	goto	u1400
  2229   000572                     u1401:
  2230   000572  EFB0  F002         	goto	l2349
  2231   000576                     u1400:
  2232   000576                     l2353:
  2233   000576  90D8               	bcf	status,0,c
  2234   000578  3661               	rlcf	___awdiv@quotient^0,f,c
  2235   00057A  3662               	rlcf	(___awdiv@quotient+1)^0,f,c
  2236   00057C  505D               	movf	___awdiv@divisor^0,w,c
  2237   00057E  5C5B               	subwf	___awdiv@dividend^0,w,c
  2238   000580  505E               	movf	(___awdiv@divisor+1)^0,w,c
  2239   000582  585C               	subwfb	(___awdiv@dividend+1)^0,w,c
  2240   000584  A0D8               	btfss	status,0,c
  2241   000586  EFC7  F002         	goto	u1411
  2242   00058A  EFC9  F002         	goto	u1410
  2243   00058E                     u1411:
  2244   00058E  EFCE  F002         	goto	l2361
  2245   000592                     u1410:
  2246   000592  505D               	movf	___awdiv@divisor^0,w,c
  2247   000594  5E5B               	subwf	___awdiv@dividend^0,f,c
  2248   000596  505E               	movf	(___awdiv@divisor+1)^0,w,c
  2249   000598  5A5C               	subwfb	(___awdiv@dividend+1)^0,f,c
  2250   00059A  8061               	bsf	___awdiv@quotient^0,0,c
  2251   00059C                     l2361:
  2252   00059C  90D8               	bcf	status,0,c
  2253   00059E  325E               	rrcf	(___awdiv@divisor+1)^0,f,c
  2254   0005A0  325D               	rrcf	___awdiv@divisor^0,f,c
  2255   0005A2  2E5F               	decfsz	___awdiv@counter^0,f,c
  2256   0005A4  EFBB  F002         	goto	l2353
  2257   0005A8                     l2365:
  2258   0005A8  5060               	movf	___awdiv@sign^0,w,c
  2259   0005AA  B4D8               	btfsc	status,2,c
  2260   0005AC  EFDA  F002         	goto	u1421
  2261   0005B0  EFDC  F002         	goto	u1420
  2262   0005B4                     u1421:
  2263   0005B4  EFE0  F002         	goto	l2369
  2264   0005B8                     u1420:
  2265   0005B8  6C61               	negf	___awdiv@quotient^0,c
  2266   0005BA  1E62               	comf	(___awdiv@quotient+1)^0,f,c
  2267   0005BC  B0D8               	btfsc	status,0,c
  2268   0005BE  2A62               	incf	(___awdiv@quotient+1)^0,f,c
  2269   0005C0                     l2369:
  2270   0005C0  C061  F05B         	movff	___awdiv@quotient,?___awdiv
  2271   0005C4  C062  F05C         	movff	___awdiv@quotient+1,?___awdiv+1
  2272   0005C8  0012               	return		;funcret
  2273   0005CA                     __end_of___awdiv:
  2274                           	callstack 0
  2275                           
  2276 ;; *************** function _Timer1_Init *****************
  2277 ;; Defined at:
  2278 ;;		line 22 in file "MCAL_Layer/TIMER1/hal_timer1.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;  _timer          2    4[COMRAM] PTR const struct .
  2281 ;;		 -> Timer1_Obj(5), 
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;  ret             1    0        unsigned char 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  1    wreg      unsigned char 
  2286 ;; Registers used:
  2287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2293 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2295 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2296 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2297 ;;Total ram usage:        4 bytes
  2298 ;; Hardware stack levels used: 1
  2299 ;; Hardware stack levels required when called: 4
  2300 ;; This function calls:
  2301 ;;		_timer1_oscillator_enable
  2302 ;;		_timer1_select_mode_timer_or_counter
  2303 ;;		_timer1_select_reg_mode
  2304 ;; This function is called by:
  2305 ;;		_main
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	text12
  2310   000688                     __ptext12:
  2311                           	callstack 0
  2312   000688                     _Timer1_Init:
  2313                           	callstack 26
  2314   000688                     
  2315                           ;MCAL_Layer/TIMER1/hal_timer1.c: 24:         if (((void*)0)==_timer){
  2316   000688  505D               	movf	Timer1_Init@_timer^0,w,c
  2317   00068A  105E               	iorwf	(Timer1_Init@_timer+1)^0,w,c
  2318   00068C  A4D8               	btfss	status,2,c
  2319   00068E  EF4B  F003         	goto	u1281
  2320   000692  EF4D  F003         	goto	u1280
  2321   000696                     u1281:
  2322   000696  EF4F  F003         	goto	l407
  2323   00069A                     u1280:
  2324   00069A                     
  2325                           ;MCAL_Layer/TIMER1/hal_timer1.c: 26:         }
  2326   00069A  EF9F  F003         	goto	l409
  2327   00069E                     l407:
  2328                           
  2329                           ;MCAL_Layer/TIMER1/hal_timer1.c: 29:             (T1CONbits.TMR1ON=0);
  2330   00069E  90CD               	bcf	205,0,c	;volatile
  2331   0006A0                     
  2332                           ;MCAL_Layer/TIMER1/hal_timer1.c: 31:             (T1CONbits.T1CKPS=_timer->timer1_pre_sc
      +                          aler_val);
  2333   0006A0  EE20 F004          	lfsr	2,4
  2334   0006A4  505D               	movf	Timer1_Init@_timer^0,w,c
  2335   0006A6  26D9               	addwf	fsr2l,f,c
  2336   0006A8  505E               	movf	(Timer1_Init@_timer+1)^0,w,c
  2337   0006AA  22DA               	addwfc	fsr2h,f,c
  2338   0006AC  50DF               	movf	223,w,c
  2339   0006AE  0B03               	andlw	3
  2340   0006B0  6E5F               	movwf	??_Timer1_Init^0,c
  2341   0006B2  3A5F               	swapf	??_Timer1_Init^0,f,c
  2342   0006B4  50CD               	movf	205,w,c	;volatile
  2343   0006B6  185F               	xorwf	??_Timer1_Init^0,w,c
  2344   0006B8  0BCF               	andlw	-49
  2345   0006BA  185F               	xorwf	??_Timer1_Init^0,w,c
  2346   0006BC  6ECD               	movwf	205,c	;volatile
  2347   0006BE                     
  2348                           ;MCAL_Layer/TIMER1/hal_timer1.c: 34:             timer1_select_mode_timer_or_counter(_ti
      +                          mer);
  2349   0006BE  C05D  F05B         	movff	Timer1_Init@_timer,timer1_select_mode_timer_or_counter@_timer
  2350   0006C2  C05E  F05C         	movff	Timer1_Init@_timer+1,timer1_select_mode_timer_or_counter@_timer+1
  2351   0006C6  EC96  F004         	call	_timer1_select_mode_timer_or_counter	;wreg free
  2352   0006CA                     
  2353                           ;MCAL_Layer/TIMER1/hal_timer1.c: 36:             timer1_oscillator_enable(_timer);
  2354   0006CA  C05D  F05B         	movff	Timer1_Init@_timer,timer1_oscillator_enable@_timer
  2355   0006CE  C05E  F05C         	movff	Timer1_Init@_timer+1,timer1_oscillator_enable@_timer+1
  2356   0006D2  EC84  F005         	call	_timer1_oscillator_enable	;wreg free
  2357   0006D6                     
  2358                           ;MCAL_Layer/TIMER1/hal_timer1.c: 38:             timer1_select_reg_mode(_timer);
  2359   0006D6  C05D  F05B         	movff	Timer1_Init@_timer,timer1_select_reg_mode@_timer
  2360   0006DA  C05E  F05C         	movff	Timer1_Init@_timer+1,timer1_select_reg_mode@_timer+1
  2361   0006DE  EC65  F005         	call	_timer1_select_reg_mode	;wreg free
  2362   0006E2                     
  2363                           ;MCAL_Layer/TIMER1/hal_timer1.c: 40:             TMR1H=(_timer->preloaded_value) >>8;
  2364   0006E2  EE20 F002          	lfsr	2,2
  2365   0006E6  505D               	movf	Timer1_Init@_timer^0,w,c
  2366   0006E8  26D9               	addwf	fsr2l,f,c
  2367   0006EA  505E               	movf	(Timer1_Init@_timer+1)^0,w,c
  2368   0006EC  22DA               	addwfc	fsr2h,f,c
  2369   0006EE  CFDE F05F          	movff	postinc2,??_Timer1_Init
  2370   0006F2  CFDD F060          	movff	postdec2,??_Timer1_Init+1
  2371   0006F6  C060  F05F         	movff	??_Timer1_Init+1,??_Timer1_Init
  2372   0006FA  6A60               	clrf	(??_Timer1_Init+1)^0,c
  2373   0006FC  505F               	movf	??_Timer1_Init^0,w,c
  2374   0006FE  6ECF               	movwf	207,c	;volatile
  2375   000700                     
  2376                           ;MCAL_Layer/TIMER1/hal_timer1.c: 41:             TMR1L=(uint8)(_timer->preloaded_value);
  2377   000700  EE20 F002          	lfsr	2,2
  2378   000704  505D               	movf	Timer1_Init@_timer^0,w,c
  2379   000706  26D9               	addwf	fsr2l,f,c
  2380   000708  505E               	movf	(Timer1_Init@_timer+1)^0,w,c
  2381   00070A  22DA               	addwfc	fsr2h,f,c
  2382   00070C  50DF               	movf	indf2,w,c
  2383   00070E  6ECE               	movwf	206,c	;volatile
  2384   000710                     
  2385                           ;MCAL_Layer/TIMER1/hal_timer1.c: 42:             preload_timer1=_timer->preloaded_value;
  2386   000710  EE20 F002          	lfsr	2,2
  2387   000714  505D               	movf	Timer1_Init@_timer^0,w,c
  2388   000716  26D9               	addwf	fsr2l,f,c
  2389   000718  505E               	movf	(Timer1_Init@_timer+1)^0,w,c
  2390   00071A  22DA               	addwfc	fsr2h,f,c
  2391   00071C  CFDE F03B          	movff	postinc2,_preload_timer1
  2392   000720  CFDD F03C          	movff	postdec2,_preload_timer1+1
  2393   000724                     
  2394                           ;MCAL_Layer/TIMER1/hal_timer1.c: 45:        (PIE1bits.TMR1IE=1);
  2395   000724  809D               	bsf	157,0,c	;volatile
  2396   000726                     
  2397                           ;MCAL_Layer/TIMER1/hal_timer1.c: 46:        (PIR1bits.TMR1IF=0);
  2398   000726  909E               	bcf	158,0,c	;volatile
  2399   000728                     
  2400                           ;MCAL_Layer/TIMER1/hal_timer1.c: 59:             (INTCONbits.GIE=1);
  2401   000728  8EF2               	bsf	242,7,c	;volatile
  2402   00072A                     
  2403                           ;MCAL_Layer/TIMER1/hal_timer1.c: 60:             (INTCONbits.PEIE=1);
  2404   00072A  8CF2               	bsf	242,6,c	;volatile
  2405   00072C                     
  2406                           ;MCAL_Layer/TIMER1/hal_timer1.c: 62:            TIMER1_interruptHandler =_timer->TIMER1_
      +                          HandlerInterrupt;
  2407   00072C  C05D  FFD9         	movff	Timer1_Init@_timer,fsr2l
  2408   000730  C05E  FFDA         	movff	Timer1_Init@_timer+1,fsr2h
  2409   000734  CFDE F03D          	movff	postinc2,_TIMER1_interruptHandler
  2410   000738  CFDD F03E          	movff	postdec2,_TIMER1_interruptHandler+1
  2411   00073C                     
  2412                           ;MCAL_Layer/TIMER1/hal_timer1.c: 65:             (T1CONbits.TMR1ON=1);
  2413   00073C  80CD               	bsf	205,0,c	;volatile
  2414   00073E                     l409:
  2415   00073E  0012               	return		;funcret
  2416   000740                     __end_of_Timer1_Init:
  2417                           	callstack 0
  2418                           
  2419 ;; *************** function _timer1_select_reg_mode *****************
  2420 ;; Defined at:
  2421 ;;		line 159 in file "MCAL_Layer/TIMER1/hal_timer1.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;  _timer          2    2[COMRAM] PTR const struct .
  2424 ;;		 -> Timer1_Obj(5), 
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;		None
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  1    wreg      void 
  2429 ;; Registers used:
  2430 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2436 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2439 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2440 ;;Total ram usage:        2 bytes
  2441 ;; Hardware stack levels used: 1
  2442 ;; Hardware stack levels required when called: 3
  2443 ;; This function calls:
  2444 ;;		Nothing
  2445 ;; This function is called by:
  2446 ;;		_Timer1_Init
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           	psect	text13
  2451   000ACA                     __ptext13:
  2452                           	callstack 0
  2453   000ACA                     _timer1_select_reg_mode:
  2454                           	callstack 26
  2455   000ACA                     
  2456                           ;MCAL_Layer/TIMER1/hal_timer1.c: 160:     if (0==_timer->timer1_mode_wr_reg){
  2457   000ACA  EE20 F004          	lfsr	2,4
  2458   000ACE  505B               	movf	timer1_select_reg_mode@_timer^0,w,c
  2459   000AD0  26D9               	addwf	fsr2l,f,c
  2460   000AD2  505C               	movf	(timer1_select_reg_mode@_timer+1)^0,w,c
  2461   000AD4  22DA               	addwfc	fsr2h,f,c
  2462   000AD6  BADF               	btfsc	indf2,5,c
  2463   000AD8  EF70  F005         	goto	u1221
  2464   000ADC  EF72  F005         	goto	u1220
  2465   000AE0                     u1221:
  2466   000AE0  EF75  F005         	goto	l2211
  2467   000AE4                     u1220:
  2468   000AE4                     
  2469                           ;MCAL_Layer/TIMER1/hal_timer1.c: 161:         (T1CONbits.RD16=0);
  2470   000AE4  9ECD               	bcf	205,7,c	;volatile
  2471                           
  2472                           ;MCAL_Layer/TIMER1/hal_timer1.c: 162:     }
  2473   000AE6  EF83  F005         	goto	l451
  2474   000AEA                     l2211:
  2475   000AEA  EE20 F004          	lfsr	2,4
  2476   000AEE  505B               	movf	timer1_select_reg_mode@_timer^0,w,c
  2477   000AF0  26D9               	addwf	fsr2l,f,c
  2478   000AF2  505C               	movf	(timer1_select_reg_mode@_timer+1)^0,w,c
  2479   000AF4  22DA               	addwfc	fsr2h,f,c
  2480   000AF6  AADF               	btfss	indf2,5,c
  2481   000AF8  EF80  F005         	goto	u1231
  2482   000AFC  EF82  F005         	goto	u1230
  2483   000B00                     u1231:
  2484   000B00  EF83  F005         	goto	l451
  2485   000B04                     u1230:
  2486   000B04                     
  2487                           ;MCAL_Layer/TIMER1/hal_timer1.c: 164:         (T1CONbits.RD16=1);
  2488   000B04  8ECD               	bsf	205,7,c	;volatile
  2489   000B06                     l451:
  2490   000B06  0012               	return		;funcret
  2491   000B08                     __end_of_timer1_select_reg_mode:
  2492                           	callstack 0
  2493                           
  2494 ;; *************** function _timer1_select_mode_timer_or_counter *****************
  2495 ;; Defined at:
  2496 ;;		line 133 in file "MCAL_Layer/TIMER1/hal_timer1.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;  _timer          2    2[COMRAM] PTR const struct .
  2499 ;;		 -> Timer1_Obj(5), 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;		None
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  1    wreg      void 
  2504 ;; Registers used:
  2505 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2511 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2514 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2515 ;;Total ram usage:        2 bytes
  2516 ;; Hardware stack levels used: 1
  2517 ;; Hardware stack levels required when called: 3
  2518 ;; This function calls:
  2519 ;;		Nothing
  2520 ;; This function is called by:
  2521 ;;		_Timer1_Init
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           	psect	text14
  2526   00092C                     __ptext14:
  2527                           	callstack 0
  2528   00092C                     _timer1_select_mode_timer_or_counter:
  2529                           	callstack 26
  2530   00092C                     
  2531                           ;MCAL_Layer/TIMER1/hal_timer1.c: 134:     if (0==_timer->timer1_mode_timer_or_counter){
  2532   00092C  EE20 F004          	lfsr	2,4
  2533   000930  505B               	movf	timer1_select_mode_timer_or_counter@_timer^0,w,c
  2534   000932  26D9               	addwf	fsr2l,f,c
  2535   000934  505C               	movf	(timer1_select_mode_timer_or_counter@_timer+1)^0,w,c
  2536   000936  22DA               	addwfc	fsr2h,f,c
  2537   000938  B4DF               	btfsc	indf2,2,c
  2538   00093A  EFA1  F004         	goto	u1161
  2539   00093E  EFA3  F004         	goto	u1160
  2540   000942                     u1161:
  2541   000942  EFA6  F004         	goto	l2187
  2542   000946                     u1160:
  2543   000946                     
  2544                           ;MCAL_Layer/TIMER1/hal_timer1.c: 135:         (T1CONbits.TMR1CS=0);
  2545   000946  92CD               	bcf	205,1,c	;volatile
  2546                           
  2547                           ;MCAL_Layer/TIMER1/hal_timer1.c: 136:     }
  2548   000948  EFD4  F004         	goto	l437
  2549   00094C                     l2187:
  2550   00094C  EE20 F004          	lfsr	2,4
  2551   000950  505B               	movf	timer1_select_mode_timer_or_counter@_timer^0,w,c
  2552   000952  26D9               	addwf	fsr2l,f,c
  2553   000954  505C               	movf	(timer1_select_mode_timer_or_counter@_timer+1)^0,w,c
  2554   000956  22DA               	addwfc	fsr2h,f,c
  2555   000958  A4DF               	btfss	indf2,2,c
  2556   00095A  EFB1  F004         	goto	u1171
  2557   00095E  EFB3  F004         	goto	u1170
  2558   000962                     u1171:
  2559   000962  EFD4  F004         	goto	l437
  2560   000966                     u1170:
  2561   000966                     
  2562                           ;MCAL_Layer/TIMER1/hal_timer1.c: 138:         (T1CONbits.TMR1CS=1);
  2563   000966  82CD               	bsf	205,1,c	;volatile
  2564   000968                     
  2565                           ;MCAL_Layer/TIMER1/hal_timer1.c: 139:         if (0 ==_timer->timer1_counter_mode_sync){
  2566   000968  EE20 F004          	lfsr	2,4
  2567   00096C  505B               	movf	timer1_select_mode_timer_or_counter@_timer^0,w,c
  2568   00096E  26D9               	addwf	fsr2l,f,c
  2569   000970  505C               	movf	(timer1_select_mode_timer_or_counter@_timer+1)^0,w,c
  2570   000972  22DA               	addwfc	fsr2h,f,c
  2571   000974  B6DF               	btfsc	indf2,3,c
  2572   000976  EFBF  F004         	goto	u1181
  2573   00097A  EFC1  F004         	goto	u1180
  2574   00097E                     u1181:
  2575   00097E  EFC4  F004         	goto	l2195
  2576   000982                     u1180:
  2577   000982                     
  2578                           ;MCAL_Layer/TIMER1/hal_timer1.c: 140:             (T1CONbits.T1SYNC=0);
  2579   000982  94CD               	bcf	205,2,c	;volatile
  2580                           
  2581                           ;MCAL_Layer/TIMER1/hal_timer1.c: 141:         }
  2582   000984  EFD4  F004         	goto	l437
  2583   000988                     l2195:
  2584   000988  EE20 F004          	lfsr	2,4
  2585   00098C  505B               	movf	timer1_select_mode_timer_or_counter@_timer^0,w,c
  2586   00098E  26D9               	addwf	fsr2l,f,c
  2587   000990  505C               	movf	(timer1_select_mode_timer_or_counter@_timer+1)^0,w,c
  2588   000992  22DA               	addwfc	fsr2h,f,c
  2589   000994  A6DF               	btfss	indf2,3,c
  2590   000996  EFCF  F004         	goto	u1191
  2591   00099A  EFD1  F004         	goto	u1190
  2592   00099E                     u1191:
  2593   00099E  EFD4  F004         	goto	l436
  2594   0009A2                     u1190:
  2595   0009A2                     
  2596                           ;MCAL_Layer/TIMER1/hal_timer1.c: 143:             (T1CONbits.T1SYNC=1);
  2597   0009A2  84CD               	bsf	205,2,c	;volatile
  2598                           
  2599                           ;MCAL_Layer/TIMER1/hal_timer1.c: 144:         }
  2600   0009A4  EFD4  F004         	goto	l437
  2601   0009A8                     l436:
  2602   0009A8                     l437:
  2603   0009A8  0012               	return		;funcret
  2604   0009AA                     __end_of_timer1_select_mode_timer_or_counter:
  2605                           	callstack 0
  2606                           
  2607 ;; *************** function _timer1_oscillator_enable *****************
  2608 ;; Defined at:
  2609 ;;		line 149 in file "MCAL_Layer/TIMER1/hal_timer1.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;  _timer          2    2[COMRAM] PTR const struct .
  2612 ;;		 -> Timer1_Obj(5), 
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;		None
  2615 ;; Return value:  Size  Location     Type
  2616 ;;                  1    wreg      void 
  2617 ;; Registers used:
  2618 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2624 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2627 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2628 ;;Total ram usage:        2 bytes
  2629 ;; Hardware stack levels used: 1
  2630 ;; Hardware stack levels required when called: 3
  2631 ;; This function calls:
  2632 ;;		Nothing
  2633 ;; This function is called by:
  2634 ;;		_Timer1_Init
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           	psect	text15
  2639   000B08                     __ptext15:
  2640                           	callstack 0
  2641   000B08                     _timer1_oscillator_enable:
  2642                           	callstack 26
  2643   000B08                     
  2644                           ;MCAL_Layer/TIMER1/hal_timer1.c: 150:     if (1==_timer->timer1_oscillator_enable){
  2645   000B08  EE20 F004          	lfsr	2,4
  2646   000B0C  505B               	movf	timer1_oscillator_enable@_timer^0,w,c
  2647   000B0E  26D9               	addwf	fsr2l,f,c
  2648   000B10  505C               	movf	(timer1_oscillator_enable@_timer+1)^0,w,c
  2649   000B12  22DA               	addwfc	fsr2h,f,c
  2650   000B14  A8DF               	btfss	indf2,4,c
  2651   000B16  EF8F  F005         	goto	u1201
  2652   000B1A  EF91  F005         	goto	u1200
  2653   000B1E                     u1201:
  2654   000B1E  EF94  F005         	goto	l2203
  2655   000B22                     u1200:
  2656   000B22                     
  2657                           ;MCAL_Layer/TIMER1/hal_timer1.c: 151:         (T1CONbits.T1OSCEN=1);
  2658   000B22  86CD               	bsf	205,3,c	;volatile
  2659                           
  2660                           ;MCAL_Layer/TIMER1/hal_timer1.c: 152:     }
  2661   000B24  EFA2  F005         	goto	l444
  2662   000B28                     l2203:
  2663   000B28  EE20 F004          	lfsr	2,4
  2664   000B2C  505B               	movf	timer1_oscillator_enable@_timer^0,w,c
  2665   000B2E  26D9               	addwf	fsr2l,f,c
  2666   000B30  505C               	movf	(timer1_oscillator_enable@_timer+1)^0,w,c
  2667   000B32  22DA               	addwfc	fsr2h,f,c
  2668   000B34  B8DF               	btfsc	indf2,4,c
  2669   000B36  EF9F  F005         	goto	u1211
  2670   000B3A  EFA1  F005         	goto	u1210
  2671   000B3E                     u1211:
  2672   000B3E  EFA2  F005         	goto	l444
  2673   000B42                     u1210:
  2674   000B42                     
  2675                           ;MCAL_Layer/TIMER1/hal_timer1.c: 154:         (T1CONbits.T1OSCEN=0);
  2676   000B42  96CD               	bcf	205,3,c	;volatile
  2677   000B44                     l444:
  2678   000B44  0012               	return		;funcret
  2679   000B46                     __end_of_timer1_oscillator_enable:
  2680                           	callstack 0
  2681                           
  2682 ;; *************** function _Timer1_DeInit *****************
  2683 ;; Defined at:
  2684 ;;		line 77 in file "MCAL_Layer/TIMER1/hal_timer1.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;  _timer          2    2[COMRAM] PTR const struct .
  2687 ;;		 -> Timer1_Obj(5), 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  ret             1    0        unsigned char 
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  1    wreg      unsigned char 
  2692 ;; Registers used:
  2693 ;;		wreg, status,2, status,0
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2699 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2702 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2703 ;;Total ram usage:        2 bytes
  2704 ;; Hardware stack levels used: 1
  2705 ;; Hardware stack levels required when called: 3
  2706 ;; This function calls:
  2707 ;;		Nothing
  2708 ;; This function is called by:
  2709 ;;		_main
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           	psect	text16
  2714   000C88                     __ptext16:
  2715                           	callstack 0
  2716   000C88                     _Timer1_DeInit:
  2717                           	callstack 27
  2718   000C88                     
  2719                           ;MCAL_Layer/TIMER1/hal_timer1.c: 79:         if (((void*)0)==_timer){
  2720   000C88  505B               	movf	Timer1_DeInit@_timer^0,w,c
  2721   000C8A  105C               	iorwf	(Timer1_DeInit@_timer+1)^0,w,c
  2722   000C8C  A4D8               	btfss	status,2,c
  2723   000C8E  EF4B  F006         	goto	u1291
  2724   000C92  EF4D  F006         	goto	u1290
  2725   000C96                     u1291:
  2726   000C96  EF4F  F006         	goto	l412
  2727   000C9A                     u1290:
  2728   000C9A                     
  2729                           ;MCAL_Layer/TIMER1/hal_timer1.c: 81:         }
  2730   000C9A  EF51  F006         	goto	l414
  2731   000C9E                     l412:
  2732                           
  2733                           ;MCAL_Layer/TIMER1/hal_timer1.c: 84:             (T1CONbits.TMR1ON=0);
  2734   000C9E  90CD               	bcf	205,0,c	;volatile
  2735                           
  2736                           ;MCAL_Layer/TIMER1/hal_timer1.c: 86:    (PIE1bits.TMR1IE=0);
  2737   000CA0  909D               	bcf	157,0,c	;volatile
  2738   000CA2                     l414:
  2739   000CA2  0012               	return		;funcret
  2740   000CA4                     __end_of_Timer1_DeInit:
  2741                           	callstack 0
  2742                           
  2743 ;; *************** function _interruptManager *****************
  2744 ;; Defined at:
  2745 ;;		line 18 in file "MCAL_Layer/interrupt/mcal_interrupt_manager.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;		None
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;		None
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  1    wreg      void 
  2752 ;; Registers used:
  2753 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;Total ram usage:        2 bytes
  2764 ;; Hardware stack levels used: 1
  2765 ;; Hardware stack levels required when called: 2
  2766 ;; This function calls:
  2767 ;;		_TIMER1_ISR
  2768 ;; This function is called by:
  2769 ;;		Interrupt level 2
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           	psect	intcode
  2774   000008                     __pintcode:
  2775                           	callstack 0
  2776   000008                     _interruptManager:
  2777                           	callstack 25
  2778                           
  2779                           ;incstack = 0
  2780   000008  826D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2781   00000A  ED17  F006         	call	int_func,f	;refresh shadow registers
  2782                           
  2783                           	psect	intcode_body
  2784   000C2E                     __pintcode_body:
  2785                           	callstack 25
  2786   000C2E                     int_func:
  2787                           	callstack 25
  2788   000C2E  0006               	pop		; remove dummy address from shadow register refresh
  2789   000C30  CFFA F059          	movff	pclath,??_interruptManager
  2790   000C34  CFFB F05A          	movff	pclatu,??_interruptManager+1
  2791   000C38                     
  2792                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 20:     if ((1==PIE1bits.TMR1IE) && (1==
      +                          PIR1bits.TMR1IF)){
  2793   000C38  A09D               	btfss	157,0,c	;volatile
  2794   000C3A  EF21  F006         	goto	i2u92_41
  2795   000C3E  EF23  F006         	goto	i2u92_40
  2796   000C42                     i2u92_41:
  2797   000C42  EF2C  F006         	goto	i2l382
  2798   000C46                     i2u92_40:
  2799   000C46  A09E               	btfss	158,0,c	;volatile
  2800   000C48  EF28  F006         	goto	i2u93_41
  2801   000C4C  EF2A  F006         	goto	i2u93_40
  2802   000C50                     i2u93_41:
  2803   000C50  EF2C  F006         	goto	i2l382
  2804   000C54                     i2u93_40:
  2805   000C54                     
  2806                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 21:         TIMER1_ISR();
  2807   000C54  ECFB  F005         	call	_TIMER1_ISR	;wreg free
  2808   000C58                     i2l382:
  2809   000C58  C05A  FFFB         	movff	??_interruptManager+1,pclatu
  2810   000C5C  C059  FFFA         	movff	??_interruptManager,pclath
  2811   000C60  926D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2812   000C62  0011               	retfie		f
  2813   000C64                     __end_of_interruptManager:
  2814                           	callstack 0
  2815                           
  2816 ;; *************** function _TIMER1_ISR *****************
  2817 ;; Defined at:
  2818 ;;		line 169 in file "MCAL_Layer/TIMER1/hal_timer1.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;		None
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;		None
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  1    wreg      void 
  2825 ;; Registers used:
  2826 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;Total ram usage:        0 bytes
  2837 ;; Hardware stack levels used: 1
  2838 ;; Hardware stack levels required when called: 1
  2839 ;; This function calls:
  2840 ;;		Absolute function
  2841 ;;		_Timer1_Interrupt
  2842 ;; This function is called by:
  2843 ;;		_interruptManager
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847                           	psect	text18
  2848   000BF6                     __ptext18:
  2849                           	callstack 0
  2850   000BF6                     _TIMER1_ISR:
  2851                           	callstack 25
  2852   000BF6                     
  2853                           ;MCAL_Layer/TIMER1/hal_timer1.c: 171:     (PIR1bits.TMR1IF=0);
  2854   000BF6  909E               	bcf	158,0,c	;volatile
  2855   000BF8                     
  2856                           ;MCAL_Layer/TIMER1/hal_timer1.c: 172:     TMR1H=(preload_timer1) >>8;
  2857   000BF8  503C               	movf	(_preload_timer1+1)^0,w,c
  2858   000BFA  6ECF               	movwf	207,c	;volatile
  2859   000BFC                     
  2860                           ;MCAL_Layer/TIMER1/hal_timer1.c: 173:     TMR1L=(uint8)(preload_timer1);
  2861   000BFC  C03B  FFCE         	movff	_preload_timer1,4046	;volatile
  2862   000C00                     
  2863                           ;MCAL_Layer/TIMER1/hal_timer1.c: 174:     if (TIMER1_interruptHandler){
  2864   000C00  503D               	movf	_TIMER1_interruptHandler^0,w,c
  2865   000C02  103E               	iorwf	(_TIMER1_interruptHandler+1)^0,w,c
  2866   000C04  B4D8               	btfsc	status,2,c
  2867   000C06  EF07  F006         	goto	i2u36_41
  2868   000C0A  EF09  F006         	goto	i2u36_40
  2869   000C0E                     i2u36_41:
  2870   000C0E  EF16  F006         	goto	i2l455
  2871   000C12                     i2u36_40:
  2872   000C12                     
  2873                           ;MCAL_Layer/TIMER1/hal_timer1.c: 175:         TIMER1_interruptHandler();
  2874   000C12  D802               	call	i2u37_48
  2875   000C14  EF16  F006         	goto	i2u37_49
  2876   000C18                     i2u37_48:
  2877   000C18  0005               	push	
  2878   000C1A  6EFA               	movwf	pclath,c
  2879   000C1C  503D               	movf	_TIMER1_interruptHandler^0,w,c
  2880   000C1E  6EFD               	movwf	tosl,c
  2881   000C20  503E               	movf	(_TIMER1_interruptHandler+1)^0,w,c
  2882   000C22  6EFE               	movwf	tosh,c
  2883   000C24  50F8               	movf	tblptru,w,c
  2884   000C26  6EFF               	movwf	tosu,c
  2885   000C28  50FA               	movf	pclath,w,c
  2886   000C2A  0012               	return		;indir
  2887   000C2C                     i2u37_49:
  2888   000C2C                     i2l455:
  2889   000C2C  0012               	return		;funcret
  2890   000C2E                     __end_of_TIMER1_ISR:
  2891                           	callstack 0
  2892                           
  2893 ;; *************** function _Timer1_Interrupt *****************
  2894 ;; Defined at:
  2895 ;;		line 124 in file "application.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;		None
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;		None
  2900 ;; Return value:  Size  Location     Type
  2901 ;;                  1    wreg      void 
  2902 ;; Registers used:
  2903 ;;		wreg, status,2, status,0
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;Total ram usage:        0 bytes
  2914 ;; Hardware stack levels used: 1
  2915 ;; This function calls:
  2916 ;;		Nothing
  2917 ;; This function is called by:
  2918 ;;		_TIMER1_ISR
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           	psect	text19
  2923   000A0C                     __ptext19:
  2924                           	callstack 0
  2925   000A0C                     _Timer1_Interrupt:
  2926                           	callstack 25
  2927   000A0C                     
  2928                           ;application.c: 125:     TimerOverFlow++;
  2929   000A0C  2A58               	incf	_TimerOverFlow^0,f,c	;volatile
  2930   000A0E                     
  2931                           ;application.c: 126:         if(TimerOverFlow==31){
  2932   000A0E  0E1F               	movlw	31
  2933   000A10  1858               	xorwf	_TimerOverFlow^0,w,c	;volatile
  2934   000A12  A4D8               	btfss	status,2,c
  2935   000A14  EF0E  F005         	goto	i2u25_41
  2936   000A18  EF10  F005         	goto	i2u25_40
  2937   000A1C                     i2u25_41:
  2938   000A1C  EF13  F005         	goto	i2l1349
  2939   000A20                     i2u25_40:
  2940   000A20                     
  2941                           ;application.c: 127:             Seconds++;
  2942   000A20  2A57               	incf	_Seconds^0,f,c	;volatile
  2943   000A22                     
  2944                           ;application.c: 128:             TimerOverFlow=0;
  2945   000A22  0E00               	movlw	0
  2946   000A24  6E58               	movwf	_TimerOverFlow^0,c	;volatile
  2947   000A26                     i2l1349:
  2948                           
  2949                           ;application.c: 130:         if(Seconds==60){
  2950   000A26  0E3C               	movlw	60
  2951   000A28  1857               	xorwf	_Seconds^0,w,c	;volatile
  2952   000A2A  A4D8               	btfss	status,2,c
  2953   000A2C  EF1A  F005         	goto	i2u26_41
  2954   000A30  EF1C  F005         	goto	i2u26_40
  2955   000A34                     i2u26_41:
  2956   000A34  EF1F  F005         	goto	i2l1355
  2957   000A38                     i2u26_40:
  2958   000A38                     
  2959                           ;application.c: 131:             Minutes++;
  2960   000A38  2A56               	incf	_Minutes^0,f,c	;volatile
  2961   000A3A                     
  2962                           ;application.c: 132:             Seconds=0;
  2963   000A3A  0E00               	movlw	0
  2964   000A3C  6E57               	movwf	_Seconds^0,c	;volatile
  2965   000A3E                     i2l1355:
  2966                           
  2967                           ;application.c: 134:         if(Minutes==60){
  2968   000A3E  0E3C               	movlw	60
  2969   000A40  1856               	xorwf	_Minutes^0,w,c	;volatile
  2970   000A42  A4D8               	btfss	status,2,c
  2971   000A44  EF26  F005         	goto	i2u27_41
  2972   000A48  EF28  F005         	goto	i2u27_40
  2973   000A4C                     i2u27_41:
  2974   000A4C  EF2B  F005         	goto	i2l1361
  2975   000A50                     i2u27_40:
  2976   000A50                     
  2977                           ;application.c: 135:             Hours++;
  2978   000A50  2A55               	incf	_Hours^0,f,c	;volatile
  2979   000A52                     
  2980                           ;application.c: 136:             Minutes=0;
  2981   000A52  0E00               	movlw	0
  2982   000A54  6E56               	movwf	_Minutes^0,c	;volatile
  2983   000A56                     i2l1361:
  2984                           
  2985                           ;application.c: 138:         if(Hours==24){
  2986   000A56  0E18               	movlw	24
  2987   000A58  1855               	xorwf	_Hours^0,w,c	;volatile
  2988   000A5A  A4D8               	btfss	status,2,c
  2989   000A5C  EF32  F005         	goto	i2u28_41
  2990   000A60  EF34  F005         	goto	i2u28_40
  2991   000A64                     i2u28_41:
  2992   000A64  EF36  F005         	goto	i2l533
  2993   000A68                     i2u28_40:
  2994   000A68                     
  2995                           ;application.c: 139:             Hours=0;
  2996   000A68  0E00               	movlw	0
  2997   000A6A  6E55               	movwf	_Hours^0,c	;volatile
  2998   000A6C                     i2l533:
  2999   000A6C  0012               	return		;funcret
  3000   000A6E                     __end_of_Timer1_Interrupt:
  3001                           	callstack 0
  3002   000000                     
  3003                           	psect	text20
  3004   000000                     __ptext20:
  3005                           	callstack 0
  3006   000000                     
  3007                           	psect	rparam
  3008   000000                     
  3009                           	psect	temp
  3010   00006D                     btemp:
  3011                           	callstack 0
  3012   00006D                     	ds	1
  3013   000000                     int$flags	set	btemp
  3014   000000                     wtemp8	set	btemp+1
  3015   000000                     ttemp5	set	btemp+1
  3016   000000                     ttemp6	set	btemp+4
  3017   000000                     ttemp7	set	btemp+8
  3018                           
  3019                           	psect	idloc
  3020                           
  3021                           ;Config register IDLOC0 @ 0x200000
  3022                           ;	unspecified, using default values
  3023   200000                     	org	2097152
  3024   200000  FF                 	db	255
  3025                           
  3026                           ;Config register IDLOC1 @ 0x200001
  3027                           ;	unspecified, using default values
  3028   200001                     	org	2097153
  3029   200001  FF                 	db	255
  3030                           
  3031                           ;Config register IDLOC2 @ 0x200002
  3032                           ;	unspecified, using default values
  3033   200002                     	org	2097154
  3034   200002  FF                 	db	255
  3035                           
  3036                           ;Config register IDLOC3 @ 0x200003
  3037                           ;	unspecified, using default values
  3038   200003                     	org	2097155
  3039   200003  FF                 	db	255
  3040                           
  3041                           ;Config register IDLOC4 @ 0x200004
  3042                           ;	unspecified, using default values
  3043   200004                     	org	2097156
  3044   200004  FF                 	db	255
  3045                           
  3046                           ;Config register IDLOC5 @ 0x200005
  3047                           ;	unspecified, using default values
  3048   200005                     	org	2097157
  3049   200005  FF                 	db	255
  3050                           
  3051                           ;Config register IDLOC6 @ 0x200006
  3052                           ;	unspecified, using default values
  3053   200006                     	org	2097158
  3054   200006  FF                 	db	255
  3055                           
  3056                           ;Config register IDLOC7 @ 0x200007
  3057                           ;	unspecified, using default values
  3058   200007                     	org	2097159
  3059   200007  FF                 	db	255
  3060                           
  3061                           	psect	config
  3062                           
  3063                           ; Padding undefined space
  3064   300000                     	org	3145728
  3065   300000  FF                 	db	255
  3066                           
  3067                           ;Config register CONFIG1H @ 0x300001
  3068                           ;	Oscillator Selection bits
  3069                           ;	OSC = HS, HS oscillator
  3070                           ;	Fail-Safe Clock Monitor Enable bit
  3071                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3072                           ;	Internal/External Oscillator Switchover bit
  3073                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3074   300001                     	org	3145729
  3075   300001  02                 	db	2
  3076                           
  3077                           ;Config register CONFIG2L @ 0x300002
  3078                           ;	Power-up Timer Enable bit
  3079                           ;	PWRT = OFF, PWRT disabled
  3080                           ;	Brown-out Reset Enable bits
  3081                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3082                           ;	Brown Out Reset Voltage bits
  3083                           ;	BORV = 1, 
  3084   300002                     	org	3145730
  3085   300002  09                 	db	9
  3086                           
  3087                           ;Config register CONFIG2H @ 0x300003
  3088                           ;	Watchdog Timer Enable bit
  3089                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3090                           ;	Watchdog Timer Postscale Select bits
  3091                           ;	WDTPS = 512, 1:512
  3092   300003                     	org	3145731
  3093   300003  12                 	db	18
  3094                           
  3095                           ; Padding undefined space
  3096   300004                     	org	3145732
  3097   300004  FF                 	db	255
  3098                           
  3099                           ;Config register CONFIG3H @ 0x300005
  3100                           ;	CCP2 MUX bit
  3101                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3102                           ;	PORTB A/D Enable bit
  3103                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3104                           ;	Low-Power Timer1 Oscillator Enable bit
  3105                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3106                           ;	MCLR Pin Enable bit
  3107                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3108   300005                     	org	3145733
  3109   300005  81                 	db	129
  3110                           
  3111                           ;Config register CONFIG4L @ 0x300006
  3112                           ;	Stack Full/Underflow Reset Enable bit
  3113                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3114                           ;	Single-Supply ICSP Enable bit
  3115                           ;	LVP = OFF, Single-Supply ICSP disabled
  3116                           ;	Extended Instruction Set Enable bit
  3117                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3118                           ;	Background Debugger Enable bit
  3119                           ;	DEBUG = 0x1, unprogrammed default
  3120   300006                     	org	3145734
  3121   300006  81                 	db	129
  3122                           
  3123                           ; Padding undefined space
  3124   300007                     	org	3145735
  3125   300007  FF                 	db	255
  3126                           
  3127                           ;Config register CONFIG5L @ 0x300008
  3128                           ;	Code Protection bit
  3129                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3130                           ;	Code Protection bit
  3131                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3132                           ;	Code Protection bit
  3133                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3134                           ;	Code Protection bit
  3135                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3136   300008                     	org	3145736
  3137   300008  0F                 	db	15
  3138                           
  3139                           ;Config register CONFIG5H @ 0x300009
  3140                           ;	Boot Block Code Protection bit
  3141                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3142                           ;	Data EEPROM Code Protection bit
  3143                           ;	CPD = OFF, Data EEPROM not code-protected
  3144   300009                     	org	3145737
  3145   300009  C0                 	db	192
  3146                           
  3147                           ;Config register CONFIG6L @ 0x30000A
  3148                           ;	Write Protection bit
  3149                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3150                           ;	Write Protection bit
  3151                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3152                           ;	Write Protection bit
  3153                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3154                           ;	Write Protection bit
  3155                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3156   30000A                     	org	3145738
  3157   30000A  0F                 	db	15
  3158                           
  3159                           ;Config register CONFIG6H @ 0x30000B
  3160                           ;	Configuration Register Write Protection bit
  3161                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3162                           ;	Boot Block Write Protection bit
  3163                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3164                           ;	Data EEPROM Write Protection bit
  3165                           ;	WRTD = OFF, Data EEPROM not write-protected
  3166   30000B                     	org	3145739
  3167   30000B  E0                 	db	224
  3168                           
  3169                           ;Config register CONFIG7L @ 0x30000C
  3170                           ;	Table Read Protection bit
  3171                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3172                           ;	Table Read Protection bit
  3173                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3174                           ;	Table Read Protection bit
  3175                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3176                           ;	Table Read Protection bit
  3177                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3178   30000C                     	org	3145740
  3179   30000C  0F                 	db	15
  3180                           
  3181                           ;Config register CONFIG7H @ 0x30000D
  3182                           ;	Boot Block Table Read Protection bit
  3183                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3184   30000D                     	org	3145741
  3185   30000D  40                 	db	64
  3186                           tosu	equ	0xFFF
  3187                           tosh	equ	0xFFE
  3188                           tosl	equ	0xFFD
  3189                           stkptr	equ	0xFFC
  3190                           pclatu	equ	0xFFB
  3191                           pclath	equ	0xFFA
  3192                           pcl	equ	0xFF9
  3193                           tblptru	equ	0xFF8
  3194                           tblptrh	equ	0xFF7
  3195                           tblptrl	equ	0xFF6
  3196                           tablat	equ	0xFF5
  3197                           prodh	equ	0xFF4
  3198                           prodl	equ	0xFF3
  3199                           indf0	equ	0xFEF
  3200                           postinc0	equ	0xFEE
  3201                           postdec0	equ	0xFED
  3202                           preinc0	equ	0xFEC
  3203                           plusw0	equ	0xFEB
  3204                           fsr0h	equ	0xFEA
  3205                           fsr0l	equ	0xFE9
  3206                           wreg	equ	0xFE8
  3207                           indf1	equ	0xFE7
  3208                           postinc1	equ	0xFE6
  3209                           postdec1	equ	0xFE5
  3210                           preinc1	equ	0xFE4
  3211                           plusw1	equ	0xFE3
  3212                           fsr1h	equ	0xFE2
  3213                           fsr1l	equ	0xFE1
  3214                           bsr	equ	0xFE0
  3215                           indf2	equ	0xFDF
  3216                           postinc2	equ	0xFDE
  3217                           postdec2	equ	0xFDD
  3218                           preinc2	equ	0xFDC
  3219                           plusw2	equ	0xFDB
  3220                           fsr2h	equ	0xFDA
  3221                           fsr2l	equ	0xFD9
  3222                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        58
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     20     108
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    button_read_status@btn_status	PTR enum E3027 size(2) Largest target is 1
		 -> Button3Status(COMRAM[1]), Button2Status(COMRAM[1]), Button1Status(COMRAM[1]), 

    button_read_status@btn	PTR const struct . size(2) Largest target is 3
		 -> Btn3(COMRAM[3]), Btn2(COMRAM[3]), Btn1(COMRAM[3]), 

    button_inialize@btn	PTR const struct . size(2) Largest target is 3
		 -> Btn3(COMRAM[3]), Btn2(COMRAM[3]), Btn1(COMRAM[3]), 

    Timer1_Obj.TIMER1_HandlerInterrupt	PTR FTN()void  size(2) Largest target is 1
		 -> Timer1_Interrupt(), 

    timer1_select_reg_mode@_timer.TIMER1_HandlerInterrupt	PTR FTN()void  size(2) Largest target is 1
		 -> Timer1_Interrupt(), 

    timer1_select_reg_mode@_timer	PTR const struct . size(2) Largest target is 5
		 -> Timer1_Obj(COMRAM[5]), 

    timer1_oscillator_enable@_timer.TIMER1_HandlerInterrupt	PTR FTN()void  size(2) Largest target is 1
		 -> Timer1_Interrupt(), 

    timer1_oscillator_enable@_timer	PTR const struct . size(2) Largest target is 5
		 -> Timer1_Obj(COMRAM[5]), 

    timer1_select_mode_timer_or_counter@_timer.TIMER1_HandlerInterrupt	PTR FTN()void  size(2) Largest target is 1
		 -> Timer1_Interrupt(), 

    timer1_select_mode_timer_or_counter@_timer	PTR const struct . size(2) Largest target is 5
		 -> Timer1_Obj(COMRAM[5]), 

    Timer1_DeInit@_timer	PTR const struct . size(2) Largest target is 5
		 -> Timer1_Obj(COMRAM[5]), 

    TIMER1_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer1_Interrupt(), Absolute function(), 

    S631$TIMER1_HandlerInterrupt	PTR FTN()void  size(2) Largest target is 1
		 -> Timer1_Interrupt(), 

    Timer1_Init@_timer.TIMER1_HandlerInterrupt	PTR FTN()void  size(2) Largest target is 1
		 -> Timer1_Interrupt(), 

    Timer1_Init@_timer	PTR const struct . size(2) Largest target is 5
		 -> Timer1_Obj(COMRAM[5]), 

    INTx_SetInterruptHandler@obj_t.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INtx_clear_flag@obj_t.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INtx_pin_init@obj_t.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INtx_edge_init@obj_t.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INtx_disable@obj_t.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S199$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INtx_enable@obj_t.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S264$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    external_interrupt_RBx_Init@obj_t.EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    S264$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    external_interrupt_RBx_Init@obj_t.EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    RB7_interruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB7_interruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_interruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_interruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_interruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_interruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_interruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_interruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    gpio_Pin_Intialize@pin_config	PTR const struct . size(2) Largest target is 5
		 -> Enable6(COMRAM[1]), Enable5(COMRAM[1]), Enable4(COMRAM[1]), Enable3(COMRAM[1]), 
		 -> Enable2(COMRAM[1]), Enable1(COMRAM[1]), Seg_Obj.segment_pin(COMRAM[4]), Seg_Obj(COMRAM[5]), 

    gpio_Pin_Read_Logic@logic	PTR enum E2965 size(2) Largest target is 1
		 -> button_read_status@button_logic(COMRAM[1]), 

    gpio_Pin_Read_Logic@pin_config	PTR const struct . size(2) Largest target is 3
		 -> Btn3(COMRAM[3]), Btn2(COMRAM[3]), Btn1(COMRAM[3]), 

    gpio_Pin_Write_Logic@pin_config	PTR const struct . size(2) Largest target is 5
		 -> Enable6(COMRAM[1]), Enable5(COMRAM[1]), Enable4(COMRAM[1]), Enable3(COMRAM[1]), 
		 -> Enable2(COMRAM[1]), Enable1(COMRAM[1]), Seg_Obj.segment_pin(COMRAM[4]), Seg_Obj(COMRAM[5]), 

    gpio_Pin_Derction_Intialize@pin_config	PTR const struct . size(2) Largest target is 5
		 -> Enable6(COMRAM[1]), Enable5(COMRAM[1]), Enable4(COMRAM[1]), Enable3(COMRAM[1]), 
		 -> Enable2(COMRAM[1]), Enable1(COMRAM[1]), Btn3(COMRAM[3]), Btn2(COMRAM[3]), 
		 -> Btn1(COMRAM[3]), Seg_Obj.segment_pin(COMRAM[4]), Seg_Obj(COMRAM[5]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRhll[1]), TRISD(BITBIGSFRhll[1]), TRISC(BITBIGSFRhll[1]), TRISB(BITBIGSFRhll[1]), 
		 -> TRISA(BITBIGSFRll[1]), 

    seven_segment_write_number@seg	PTR const struct . size(2) Largest target is 5
		 -> Seg_Obj(COMRAM[5]), 

    seven_segment_initialize@seg	PTR const struct . size(2) Largest target is 5
		 -> Seg_Obj(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_seven_segment_initialize
    _seven_segment_write_number->_gpio_Pin_Write_Logic
    _seven_segment_initialize->_gpio_Pin_Intialize
    _gpio_Pin_Intialize->_gpio_Pin_Write_Logic
    _button_read_status->_gpio_Pin_Read_Logic
    _button_inialize->_gpio_Pin_Derction_Intialize
    _Timer1_Init->_timer1_oscillator_enable
    _Timer1_Init->_timer1_select_mode_timer_or_counter
    _Timer1_Init->_timer1_select_reg_mode

Critical Paths under _interruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   11533
                                             19 COMRAM     1     1      0
                      _Timer1_DeInit
                        _Timer1_Init
                            ___awdiv
                            ___awmod
                    _button_inialize
                 _button_read_status
                 _gpio_Pin_Intialize
              _gpio_Port_Write_Logic
           _seven_segment_initialize
         _seven_segment_write_number
 ---------------------------------------------------------------------------------
 (1) _seven_segment_write_number                           4     1      3    2082
                                             12 COMRAM     4     1      3
                            ___awdiv (ARG)
                            ___awmod (ARG)
               _gpio_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (1) _seven_segment_initialize                             3     1      2    2515
                                             16 COMRAM     3     1      2
                 _gpio_Pin_Intialize
 ---------------------------------------------------------------------------------
 (2) _gpio_Pin_Intialize                                   4     2      2    2317
                                             12 COMRAM     4     2      2
        _gpio_Pin_Derction_Intialize
               _gpio_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (2) _gpio_Pin_Write_Logic                                10     7      3     938
                                              2 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (1) _gpio_Port_Write_Logic                                5     4      1     530
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _button_read_status                                   7     3      4    1023
                                             11 COMRAM     6     2      4
                _gpio_Pin_Read_Logic
 ---------------------------------------------------------------------------------
 (2) _gpio_Pin_Read_Logic                                 10     6      4     292
                                              2 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (1) _button_inialize                                      3     1      2     688
                                             11 COMRAM     2     0      2
        _gpio_Pin_Derction_Intialize
 ---------------------------------------------------------------------------------
 (3) _gpio_Pin_Derction_Intialize                          9     7      2     407
                                              2 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     752
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     756
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          5     3      2     763
                                              4 COMRAM     4     2      2
           _timer1_oscillator_enable
_timer1_select_mode_timer_or_counter
             _timer1_select_reg_mode
 ---------------------------------------------------------------------------------
 (2) _timer1_select_reg_mode                               2     0      2     120
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _timer1_select_mode_timer_or_counter                  2     0      2     164
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _timer1_oscillator_enable                             2     0      2     120
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Timer1_DeInit                                        3     1      2     107
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interruptManager                                     2     2      0       0
                                              0 COMRAM     2     2      0
                         _TIMER1_ISR
 ---------------------------------------------------------------------------------
 (5) _TIMER1_ISR                                           0     0      0       0
                   Absolute function *
                   _Timer1_Interrupt *
 ---------------------------------------------------------------------------------
 (6) _Timer1_Interrupt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer1_DeInit
   _Timer1_Init
     _timer1_oscillator_enable
     _timer1_select_mode_timer_or_counter
     _timer1_select_reg_mode
   ___awdiv
   ___awmod
   _button_inialize
     _gpio_Pin_Derction_Intialize
   _button_read_status
     _gpio_Pin_Read_Logic
   _gpio_Pin_Intialize
     _gpio_Pin_Derction_Intialize
     _gpio_Pin_Write_Logic
   _gpio_Port_Write_Logic
   _seven_segment_initialize
     _gpio_Pin_Intialize
   _seven_segment_write_number
     ___awdiv (ARG)
     ___awmod (ARG)
     _gpio_Pin_Write_Logic (ARG)

 _interruptManager (ROOT)
   _TIMER1_ISR
     Absolute function(Fake) *
     _Timer1_Interrupt *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      45        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     14      6C       1       85.7%
BITBIGSFRhlhhh      22      0       0      37        0.0%
BITBIGSFRhlhlll     15      0       0      40        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRhlhllh      C      0       0      39        0.0%
BITBIGSFRhlhlh       B      0       0      38        0.0%
BITBIGSFRhll         6      0       0      41        0.0%
BITBIGSFRlh          4      0       0      42        0.0%
BITBIGSFRll          4      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6C      44        0.0%
DATA                 0      0      6C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Jun 04 18:18:48 2023

                                          l9 0AC8                                           l16 092A  
                                         l64 03D8                                           l81 0504  
                                         l88 089C                                 ___awdiv@sign 0060  
                                        l100 0A0A                                          l117 0B80  
                                        l412 0C9E                                          l414 0CA2  
                                        l407 069E                                          l409 073E  
                                        l451 0B06                                          l444 0B44  
                                        l436 09A8                                          l437 09A8  
                                        l542 0C86                                          l552 0686  
                                        l804 07EE                                          l557 0686  
                                        l791 05C8                                 ___awmod@sign 0060  
                                        prod 000FF3                                          tosl 000FFD  
                                        wreg 000FE8                  ?_seven_segment_write_number 0065  
                                       l2111 03F0                                         l2201 0B22  
                                       l2121 04D8                                         l2113 0412  
                                       l2203 0B28                                         l2211 0AEA  
                                       l2131 0296                                         l2123 0502  
                                       l2115 041A                                         l2107 03DA  
                                       l2205 0B42                                         l2213 0B04  
                                       l2141 0338                                         l2133 029A  
                                       l2117 047C                                         l2109 03DE  
                                       l2221 0A84                                         l2207 0ACA  
                                       l2135 02AC                                         l2311 05F6  
                                       l2303 05CA                                         l2215 0A6E  
                                       l2231 08C0                                         l2209 0AE4  
                                       l2401 07CE                                         l2145 0394  
                                       l2137 02CE                                         l2321 0656  
                                       l2313 060A                                         l2305 05CE  
                                       l2241 0B58                                         l2161 09DE  
                                       l2217 0A6E                                         l2233 08C4  
                                       l2225 089E                                         l2251 069A  
                                       l2331 050A                                         l2403 07DE  
                                       l2139 02D6                                         l2147 03D6  
                                       l2171 07F0                                         l2323 0672  
                                       l2315 0626                                         l2307 05E0  
                                       l2243 0B5C                                         l2163 09DE  
                                       l2155 09AA                                         l2219 0A80  
                                       l2227 089E                                         l2261 06E2  
                                       l2253 06A0                                         l2341 053A  
                                       l2333 0518                                         l2405 07E6  
                                       l2173 0802                                         l2317 0636  
                                       l2309 05F2                                         l2237 0B48  
                                       l2165 09EA                                         l2157 09AA  
                                       l2229 08B0                                         l2501 005A  
                                       l2191 0968                                         l2183 092C  
                                       l2271 0728                                         l2263 0700  
                                       l2255 06BE                                         l2247 0688  
                                       l2351 0568                                         l2343 053E  
                                       l2335 0520                                         l2175 0814  
                                       l2319 0646                                         l2239 0B48  
                                       l2159 09BC                                         l2511 0096  
                                       l2503 0066                                         l2193 0982  
                                       l2185 0946                                         l2273 072A  
                                       l2265 0710                                         l2257 06CA  
                                       l2249 0688                                         l2361 059C  
                                       l2353 0576                                         l2345 0546  
                                       l2337 0524                                         l2329 0506  
                                       l2177 0836                                         l2169 07F0  
                                       l2521 00DA                                         l2513 009A  
                                       l2505 0072                                         l2283 0C88  
                                       l2195 0988                                         l2187 094C  
                                       l2275 072C                                         l2267 0724  
                                       l2259 06D6                                         l2363 05A2  
                                       l2355 057C                                         l2347 0558  
                                       l2339 0532                                         l2179 083A  
                                       l2531 0122                                         l2523 00EA  
                                       l2515 009E                                         l2507 007E  
                                       l2285 0C88                                         l2197 09A2  
                                       l2189 0966                                         l2277 073C  
                                       l2269 0726                                         l2357 0592  
                                       l2349 0560                                         l2365 05A8  
                                       l2381 075E                                         l2373 0740  
                                       l2293 0C64                                         l2541 0176  
                                       l2533 0132                                         l2525 00F6  
                                       l2517 00B2                                         l2509 008A  
                                       l2287 0C9A                                         l2199 0B08  
                                       l2279 073E                                         l2367 05B8  
                                       l2359 059A                                         l2391 0796  
                                       l2383 076C                                         l2375 0744  
                                       l2295 0C64                                         l2551 01E0  
                                       l2543 0198                                         l2535 013C  
                                       l2527 0106                                         l2519 00C6  
                                       l2289 0CA2                                         l2369 05C0  
                                       l2393 07A4                                         l2385 0774  
                                       l2377 0752                                         l2297 0C76  
                                       l2561 0246                                         l2553 01EA  
                                       l2545 01A6                                         l2537 015E  
                                       l2529 0112                                         l2395 07BA  
                                       l2387 0786                                         l2379 075A  
                                       l2299 0C7A                                         l2563 0254  
                                       l2555 020C                                         l2547 01B0  
                                       l2539 016C                                         l2491 001E  
                                       l2397 07C2                                         l2389 078E  
                                       l2565 025E                                         l2557 021A  
                                       l2549 01D2                                         l2493 002A  
                                       l2399 07C8                                         l2567 0280  
                                       l2559 0224                                         l2495 0036  
                                       l2577 04EC                                         l2497 0042  
                                       l2489 0012                                         l2579 03C0  
                                       l2499 004E                            ??_button_inialize 0066  
                                       u1000 03F0                                         u1001 03EC  
                                       u1010 0412                                         u1011 040E  
                                       u1100 09BC                                         u1101 09B8  
                                       u1110 09DE                                         u1111 09DA  
                                       u1200 0B22                                         u1040 02AC  
                                       u1120 0802                                         u1024 043A  
                                       u1201 0B1E                                         u1041 02A8  
                                       u1121 07FE                                         u1025 0436  
                                       u1210 0B42                                         u1050 02CE  
                                       u1130 0814                                         u1034 049C  
                                       u1211 0B3E                                         u1051 02CA  
                                       u1131 0810                                         u1035 0498  
                                       u1220 0AE4                                         u1300 0C76  
                                       u1140 0836                                         u1221 0AE0  
                                       u1301 0C72                                         u1141 0832  
                                       u1230 0B04                                         u1310 05E0  
                                       u1231 0B00                                         u1311 05DC  
                                       u1160 0946                                         u1400 0576  
                                       u1080 03AC                                         u1064 02F6  
                                       u1320 05F2                                         u1240 0A80  
                                       u1161 0942                                         u1401 0572  
                                       u1081 03A6                                         u1065 02F2  
                                       u1321 05EE                                         u1241 0A7C  
                                       u1170 0966                                         u1410 0592  
                                       u1090 03AE                                         u1074 0358  
                                       u1154 0888                                         u1330 0626  
                                       u1250 08B0                    _RB6_interruptHandler_HIGH 0043  
                                       u1171 0962                                         u1411 058E  
                                       u1075 0354                                         u1155 0884  
                                       u1331 0622                                         u1251 08AC  
                                       u1180 0982                                         u1420 05B8  
                                       u1340 0636                                         u1260 08C0  
                                       u1181 097E                                         u1421 05B4  
                                       u1341 0632                                         u1261 08BC  
                                       _LATA 000F89                                         u1190 09A2  
                                       u1430 0752                                         u1350 0672  
                                       u1270 0B58                                         _LATB 000F8A  
                                       u1191 099E                                         u1431 074E  
                                       u1351 066E                                         u1271 0B54  
                                       _LATC 000F8B                                         u1280 069A  
                                       u1440 076C                                         u1360 0682  
                                       u1520 00EA                                         _LATD 000F8C  
                                       u1281 0696                                         u1441 0768  
                                       u1361 067E                                         u1521 00E6  
                                       _LATE 000F8D                                         u1290 0C9A  
                                       u1370 0518                                         u1450 0786  
                                       u1530 0106                                         u1291 0C96  
                                       u1371 0514                                         u1451 0782  
                                       u1531 0102                                         u1380 0532  
                                       u1460 07A4                                         u1540 0122  
                                       u1381 052E                                         u1461 07A0  
                                       u1541 011E                                         u1390 0558  
                                       u1470 07BA                                         u1391 0554  
                                       u1471 07B6                                         u1607 0286  
                                       u1480 07DE                                         u1481 07DA  
                                       u1557 0164                                         u1567 019E  
                                       u1577 01D8                                         u1587 0212  
                                       u1597 024C                                         _Btn1 002F  
                                       _Btn2 002C                                         _Btn3 0029  
                     ??_gpio_Pin_Write_Logic 005E                                         _main 0012  
               gpio_Pin_Intialize@pin_config 0065                   __end_of_button_read_status 0688  
                                       fsr2h 000FDA                                         indf2 000FDF  
                                       fsr1l 000FE1                                         fsr2l 000FD9  
                                       btemp 006D                     __end_of_interruptManager 0C64  
                                       prodl 000FF3                                         start 000E  
                   _RB5_interruptHandler_LOW 0049                                 ___param_bank 000000  
                                ?_TIMER1_ISR 0059                                        ?_main 0059  
                            __end_of___awdiv 05CA                              __end_of___awmod 07F0  
                            ___awdiv@divisor 005D                                        i2l533 0A6C  
                                      i2l382 0C58                                        i2l455 0C2C  
                            ___awdiv@counter 005F                                        _TMR1H 000FCF  
                                      _TMR1L 000FCE                                        _PORTA 000F80  
                                      _PORTB 000F81                                        _PORTC 000F82  
                                      _PORTD 000F83                                        _PORTE 000F84  
                                      _TRISA 000F92                                        _TRISB 000F93  
                                      _TRISC 000F94                                        _TRISD 000F95  
                                      _TRISE 000F96                                _Button1Status 003A  
                              _Button2Status 0039                                        _Hours 0055  
                              _Button3Status 0038               gpio_Pin_Write_Logic@pin_config 005B  
                      __end_of_Timer1_DeInit 0CA4                   __end_of_gpio_Pin_Intialize 0A0C  
                                      pclath 000FFA                                        pclatu 000FFB  
                                      tablat 000FF5                                        ttemp5 006E  
                                      ttemp6 0071                                        ttemp7 0075  
                                      status 000FD8                                        wtemp8 006E  
                   ??_timer1_select_reg_mode 005D                              __initialization 0BBC  
                               __end_of_main 0296        gpio_Pin_Derction_Intialize@pin_config 005B  
                              _lat_registers 000B                                       ??_main 006C  
                              __activetblptr 000002                            Timer1_Init@_timer 005D  
                           ___awdiv@dividend 005B                                       i2l1341 0A0C  
                                     i2l1351 0A38                                       i2l1343 0A0E  
                                     i2l1361 0A56                                       i2l1353 0A3A  
                                     i2l1345 0A20                                       i2l1441 0BF8  
                                     i2l1363 0A68                                       i2l1355 0A3E  
                                     i2l1347 0A22                                       i2l1443 0BFC  
                                     i2l1357 0A50                                       i2l1349 0A26  
                                     i2l1445 0C00                                       i2l1359 0A52  
                                     i2l1447 0C12                                       i2l1439 0BF6  
                                     i2l1991 0C46                                       i2l1993 0C54  
                                     i2l1989 0C38                        _gpio_Port_Write_Logic 0B46  
                              ??_Timer1_Init 005F                gpio_Pin_Read_Logic@pin_config 005B  
                                 _Timer1_Obj 001F               button_read_status@button_logic 0069  
        __end_of_gpio_Pin_Derction_Intialize 03DA                  _gpio_Pin_Derction_Intialize 0296  
                                  ??___awdiv 005F                                    ??___awmod 005F  
                __end_of_gpio_Pin_Read_Logic 089E                                       clear_0 0BE2  
                           ___awdiv@quotient 0061                              ___awmod@divisor 005D  
                                     isa$std 000001                              ___awmod@counter 005F  
                               __pdataCOMRAM 0001                                       tblptrh 000FF7  
                                     tblptrl 000FF6                                       tblptru 000FF8  
                          ?_Timer1_Interrupt 0059                           ??_Timer1_Interrupt 0059  
                   _timer1_oscillator_enable 0B08                                   __accesstop 0080  
                    __end_of__initialization 0BE8                           button_inialize@btn 0064  
                              ___rparam_used 000001                               __pcstackCOMRAM 0059  
                        __end_of_Timer1_Init 0740                              _button_inialize 0C64  
                    gpio_Pin_Write_Logic@ret 0064                       ?_gpio_Port_Write_Logic 005B  
                      _INT0_InterruptHandler 0053                            ?_interruptManager 0059  
                         ??_interruptManager 0059                                 ??_TIMER1_ISR 0059  
                         _button_read_status 05CA               gpio_Pin_Derction_Intialize@ret 0063  
                     _timer1_select_reg_mode 0ACA                          ?_button_read_status 0064  
                   _seven_segment_initialize 0A6E               timer1_oscillator_enable@_timer 005B  
                                    i2u25_40 0A20                                      i2u25_41 0A1C  
                                    i2u26_40 0A38                                      i2u26_41 0A34  
                                    i2u27_40 0A50                                      i2u27_41 0A4C  
                                    i2u28_40 0A68                                      i2u36_40 0C12  
                                    i2u28_41 0A64                                      i2u36_41 0C0E  
                                    i2u37_48 0C18                                      i2u37_49 0C2C  
                                    i2u92_40 0C46                                      i2u92_41 0C42  
                                    i2u93_40 0C54                                      i2u93_41 0C50  
                seven_segment_initialize@seg 0069                  seven_segment_initialize@ret 006B  
                  _RB4_interruptHandler_HIGH 004B                    _RB7_interruptHandler_HIGH 003F  
                             _tris_registers 0015                                      _Enable1 0037  
                                    _Enable2 0036                                      _Enable3 0035  
                                    _Enable4 0034                                      _Enable5 0033  
                                    _Enable6 0032                           __end_of_TIMER1_ISR 0C2E  
                   _RB4_interruptHandler_LOW 004D                                      _Seg_Obj 0024  
                       ??_button_read_status 0068                     _RB7_interruptHandler_LOW 0041  
                                    __Hparam 0000                   gpio_Port_Write_Logic@logic 005B  
                                    _Minutes 0056                                      _Seconds 0057  
                                _Timer1_Init 0688                                      __Lparam 0000  
                    __end_of_button_inialize 0C88                           _gpio_Pin_Intialize 09AA  
                                    ___awdiv 0506                                      ___awmod 0740  
                                  _CMCONbits 000FB4                                      __pcinit 0BBC  
                                    __ramtop 1000                                      __ptext0 0012  
                                    __ptext1 089E                                      __ptext2 0A6E  
                                    __ptext3 09AA                                      __ptext4 03DA  
                                    __ptext5 0B46                                      __ptext6 05CA  
                                    __ptext7 07F0                                      __ptext8 0C64  
                                    __ptext9 0296                          ?_gpio_Pin_Intialize 0065  
                                  _T1CONbits 000FCD                             ___awmod@dividend 005B  
                             __pintcode_body 0C2E                         end_of_initialization 0BE8  
                              __Lmediumconst 0000                                      int_func 0C2E  
                       ??_gpio_Pin_Intialize 0067                                      postdec1 000FE5  
                                    postdec2 000FDD                                      postinc0 000FEE  
                                    postinc2 000FDE                        _INT1_InterruptHandler 0051  
                 ??_timer1_oscillator_enable 005D                             ?_button_inialize 0064  
                              __pidataCOMRAM 0B82                          start_initialization 0BBC  
               ??_seven_segment_write_number 0068                          Timer1_DeInit@_timer 005B  
                    ??_gpio_Port_Write_Logic 005C                                _Timer1_DeInit 0C88  
                 ??_seven_segment_initialize 006B                      ?_timer1_select_reg_mode 005B  
               button_read_status@btn_status 0066                        gpio_Pin_Intialize@ret 0068  
                                __pbssCOMRAM 003B                               _preload_timer1 003B  
                             ?_Timer1_DeInit 005B                        _INT2_InterruptHandler 004F  
                               ?_Timer1_Init 005D                                    __pintcode 0008  
                                   ?___awdiv 005B                                     ?___awmod 005B  
             __end_of_timer1_select_reg_mode 0B08                      _TIMER1_interruptHandler 003D  
               __end_of_gpio_Pin_Write_Logic 0506                                _TimerOverFlow 0058  
           __end_of_timer1_oscillator_enable 0B46                        button_read_status@btn 0064  
                  _RB5_interruptHandler_HIGH 0047                                     _PIE1bits 000F9D  
                   _RB6_interruptHandler_LOW 0045                             _Timer1_Interrupt 0A0C  
                                   _PIR1bits 000F9E                 ?_gpio_Pin_Derction_Intialize 005B  
                                 _ADCON1bits 000FC1  __end_of_timer1_select_mode_timer_or_counter 09AA  
      ??_timer1_select_mode_timer_or_counter 005D         ?_timer1_select_mode_timer_or_counter 005B  
        _timer1_select_mode_timer_or_counter 092C           __end_of_seven_segment_write_number 092C  
                 _seven_segment_write_number 089E                              ??_Timer1_DeInit 005D  
                                  copy_data0 0BD0                    gpio_Pin_Write_Logic@logic 005D  
                        _gpio_Pin_Read_Logic 07F0                                     __Hrparam 0000  
                                   __Lrparam 0000             __end_of_seven_segment_initialize 0ACA  
              seven_segment_write_number@seg 0065                seven_segment_write_number@ret 0068  
              ??_gpio_Pin_Derction_Intialize 005D                             _interruptManager 0008  
                       ?_gpio_Pin_Read_Logic 005B                                     __ptext10 0740  
                                   __ptext11 0506                                     __ptext20 0000  
                                   __ptext12 0688                                     __ptext13 0ACA  
                                   __ptext14 092C                                     __ptext15 0B08  
                                   __ptext16 0C88                                     __ptext18 0BF6  
                                   __ptext19 0A0C                __end_of_gpio_Port_Write_Logic 0B82  
                       _gpio_Pin_Write_Logic 03DA                    ?_timer1_oscillator_enable 005B  
                                   isa$xinst 000000                                     int$flags 006D  
               timer1_select_reg_mode@_timer 005B                        ??_gpio_Pin_Read_Logic 005F  
           seven_segment_write_number@number 0067                                   _INTCONbits 000FF2  
                  gpio_Port_Write_Logic@port 005E                                     intlevel2 0000  
                      ?_gpio_Pin_Write_Logic 005B                     gpio_Pin_Read_Logic@logic 005D  
                        fp__Timer1_Interrupt 0000                                   _TIMER1_ISR 0BF6  
                             _port_registers 0001                     __end_of_Timer1_Interrupt 0A6E  
                  ?_seven_segment_initialize 0069    timer1_select_mode_timer_or_counter@_timer 005B  
