

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jun 08 07:15:00 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,inline
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,inline
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,inline
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37   000000                     
    38                           ; Version 2.40
    39                           ; Generated 17/11/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4620 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73   000000                     
    74                           	psect	idataCOMRAM
    75   000B8E                     __pidataCOMRAM:
    76                           	callstack 0
    77                           
    78                           ;initializer for _port_registers
    79   000B8E  80                 	db	128
    80   000B8F  0F                 	db	15
    81   000B90  81                 	db	129
    82   000B91  0F                 	db	15
    83   000B92  82                 	db	130
    84   000B93  0F                 	db	15
    85   000B94  83                 	db	131
    86   000B95  0F                 	db	15
    87   000B96  84                 	db	132
    88   000B97  0F                 	db	15
    89                           
    90                           ;initializer for _lat_registers
    91   000B98  89                 	db	137
    92   000B99  0F                 	db	15
    93   000B9A  8A                 	db	138
    94   000B9B  0F                 	db	15
    95   000B9C  8B                 	db	139
    96   000B9D  0F                 	db	15
    97   000B9E  8C                 	db	140
    98   000B9F  0F                 	db	15
    99   000BA0  8D                 	db	141
   100   000BA1  0F                 	db	15
   101                           
   102                           ;initializer for _tris_registers
   103   000BA2  92                 	db	146
   104   000BA3  0F                 	db	15
   105   000BA4  93                 	db	147
   106   000BA5  0F                 	db	15
   107   000BA6  94                 	db	148
   108   000BA7  0F                 	db	15
   109   000BA8  95                 	db	149
   110   000BA9  0F                 	db	15
   111   000BAA  96                 	db	150
   112   000BAB  0F                 	db	15
   113                           
   114                           ;initializer for _Timer1_Obj
   115   000BAC  AE                 	db	low _Timer1_Interrupt
   116   000BAD  09                 	db	high _Timer1_Interrupt
   117   000BAE  3CB0               	dw	15536
   118   000BB0  02                 	db	2
   119                           
   120                           ;initializer for _Seg_Obj
   121   000BB1  02                 	db	2
   122   000BB2  0A                 	db	10
   123   000BB3  12                 	db	18
   124   000BB4  1A                 	db	26
   125   000BB5  01                 	db	1
   126                           
   127                           ;initializer for _Btn3
   128   000BB6  50                 	db	80
   129   000BB7  00                 	db	0
   130   000BB8  01                 	db	1
   131                           
   132                           ;initializer for _Btn2
   133   000BB9  48                 	db	72
   134   000BBA  00                 	db	0
   135   000BBB  01                 	db	1
   136                           
   137                           ;initializer for _Btn1
   138   000BBC  40                 	db	64
   139   000BBD  00                 	db	0
   140   000BBE  01                 	db	1
   141                           
   142                           ;initializer for _Enable6
   143   000BBF  2B                 	db	43
   144                           
   145                           ;initializer for _Enable5
   146   000BC0  23                 	db	35
   147                           
   148                           ;initializer for _Enable4
   149   000BC1  1B                 	db	27
   150                           
   151                           ;initializer for _Enable3
   152   000BC2  13                 	db	19
   153                           
   154                           ;initializer for _Enable2
   155   000BC3  0B                 	db	11
   156                           
   157                           ;initializer for _Enable1
   158   000BC4  03                 	db	3
   159                           
   160                           ;initializer for _Button3Status
   161   000BC5  01                 	db	1
   162                           
   163                           ;initializer for _Button2Status
   164   000BC6  01                 	db	1
   165                           
   166                           ;initializer for _Button1Status
   167   000BC7  01                 	db	1
   168   000000                     _TMR1L	set	4046
   169   000000                     _TMR1H	set	4047
   170   000000                     _PORTE	set	3972
   171   000000                     _PORTD	set	3971
   172   000000                     _PORTC	set	3970
   173   000000                     _PORTB	set	3969
   174   000000                     _PORTA	set	3968
   175   000000                     _LATA	set	3977
   176   000000                     _TRISA	set	3986
   177   000000                     _PIE1bits	set	3997
   178   000000                     _INTCONbits	set	4082
   179   000000                     _TRISE	set	3990
   180   000000                     _TRISD	set	3989
   181   000000                     _TRISC	set	3988
   182   000000                     _TRISB	set	3987
   183   000000                     _LATE	set	3981
   184   000000                     _LATD	set	3980
   185   000000                     _LATC	set	3979
   186   000000                     _LATB	set	3978
   187   000000                     _CMCONbits	set	4020
   188   000000                     _ADCON1bits	set	4033
   189   000000                     _T1CONbits	set	4045
   190   000000                     _PIR1bits	set	3998
   191                           
   192                           ; #config settings
   193                           
   194                           	psect	cinit
   195   000BC8                     __pcinit:
   196                           	callstack 0
   197   000BC8                     start_initialization:
   198                           	callstack 0
   199   000BC8                     __initialization:
   200                           	callstack 0
   201                           
   202                           ; Initialize objects allocated to COMRAM (58 bytes)
   203                           ; load TBLPTR registers with __pidataCOMRAM
   204   000BC8  0E8E               	movlw	low __pidataCOMRAM
   205   000BCA  6EF6               	movwf	tblptrl,c
   206   000BCC  0E0B               	movlw	high __pidataCOMRAM
   207   000BCE  6EF7               	movwf	tblptrh,c
   208   000BD0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   209   000BD2  6EF8               	movwf	tblptru,c
   210   000BD4  EE00  F001         	lfsr	0,__pdataCOMRAM
   211   000BD8  EE10 F03A          	lfsr	1,58
   212   000BDC                     copy_data0:
   213   000BDC  0009               	tblrd		*+
   214   000BDE  CFF5 FFEE          	movff	tablat,postinc0
   215   000BE2  50E5               	movf	postdec1,w,c
   216   000BE4  50E1               	movf	fsr1l,w,c
   217   000BE6  E1FA               	bnz	copy_data0
   218                           
   219                           ; Clear objects allocated to COMRAM (31 bytes)
   220   000BE8  EE00  F03B         	lfsr	0,__pbssCOMRAM
   221   000BEC  0E1F               	movlw	31
   222   000BEE                     clear_0:
   223   000BEE  6AEE               	clrf	postinc0,c
   224   000BF0  06E8               	decf	wreg,f,c
   225   000BF2  E1FD               	bnz	clear_0
   226   000BF4                     end_of_initialization:
   227                           	callstack 0
   228   000BF4                     __end_of__initialization:
   229                           	callstack 0
   230   000BF4  906E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   231   000BF6  926E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   232   000BF8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   233   000BFA  6EF8               	movwf	tblptru,c
   234   000BFC  0100               	movlb	0
   235   000BFE  EF09  F000         	goto	_main	;jump to C main() function
   236                           
   237                           	psect	bssCOMRAM
   238   00003B                     __pbssCOMRAM:
   239                           	callstack 0
   240   00003B                     _TimerOverFlow:
   241                           	callstack 0
   242   00003B                     	ds	2
   243   00003D                     _preload_timer1:
   244                           	callstack 0
   245   00003D                     	ds	2
   246   00003F                     _TIMER1_interruptHandler:
   247                           	callstack 0
   248   00003F                     	ds	2
   249   000041                     _RB7_interruptHandler_HIGH:
   250                           	callstack 0
   251   000041                     	ds	2
   252   000043                     _RB7_interruptHandler_LOW:
   253                           	callstack 0
   254   000043                     	ds	2
   255   000045                     _RB6_interruptHandler_HIGH:
   256                           	callstack 0
   257   000045                     	ds	2
   258   000047                     _RB6_interruptHandler_LOW:
   259                           	callstack 0
   260   000047                     	ds	2
   261   000049                     _RB5_interruptHandler_HIGH:
   262                           	callstack 0
   263   000049                     	ds	2
   264   00004B                     _RB5_interruptHandler_LOW:
   265                           	callstack 0
   266   00004B                     	ds	2
   267   00004D                     _RB4_interruptHandler_HIGH:
   268                           	callstack 0
   269   00004D                     	ds	2
   270   00004F                     _RB4_interruptHandler_LOW:
   271                           	callstack 0
   272   00004F                     	ds	2
   273   000051                     _INT2_InterruptHandler:
   274                           	callstack 0
   275   000051                     	ds	2
   276   000053                     _INT1_InterruptHandler:
   277                           	callstack 0
   278   000053                     	ds	2
   279   000055                     _INT0_InterruptHandler:
   280                           	callstack 0
   281   000055                     	ds	2
   282   000057                     _Hours:
   283                           	callstack 0
   284   000057                     	ds	1
   285   000058                     _Minutes:
   286                           	callstack 0
   287   000058                     	ds	1
   288   000059                     _Seconds:
   289                           	callstack 0
   290   000059                     	ds	1
   291                           
   292                           	psect	dataCOMRAM
   293   000001                     __pdataCOMRAM:
   294                           	callstack 0
   295   000001                     _port_registers:
   296                           	callstack 0
   297   000001                     	ds	10
   298   00000B                     _lat_registers:
   299                           	callstack 0
   300   00000B                     	ds	10
   301   000015                     _tris_registers:
   302                           	callstack 0
   303   000015                     	ds	10
   304   00001F                     _Timer1_Obj:
   305                           	callstack 0
   306   00001F                     	ds	5
   307   000024                     _Seg_Obj:
   308                           	callstack 0
   309   000024                     	ds	5
   310   000029                     _Btn3:
   311                           	callstack 0
   312   000029                     	ds	3
   313   00002C                     _Btn2:
   314                           	callstack 0
   315   00002C                     	ds	3
   316   00002F                     _Btn1:
   317                           	callstack 0
   318   00002F                     	ds	3
   319   000032                     _Enable6:
   320                           	callstack 0
   321   000032                     	ds	1
   322   000033                     _Enable5:
   323                           	callstack 0
   324   000033                     	ds	1
   325   000034                     _Enable4:
   326                           	callstack 0
   327   000034                     	ds	1
   328   000035                     _Enable3:
   329                           	callstack 0
   330   000035                     	ds	1
   331   000036                     _Enable2:
   332                           	callstack 0
   333   000036                     	ds	1
   334   000037                     _Enable1:
   335                           	callstack 0
   336   000037                     	ds	1
   337   000038                     _Button3Status:
   338                           	callstack 0
   339   000038                     	ds	1
   340   000039                     _Button2Status:
   341                           	callstack 0
   342   000039                     	ds	1
   343   00003A                     _Button1Status:
   344                           	callstack 0
   345   00003A                     	ds	1
   346                           
   347                           	psect	cstackCOMRAM
   348   00005A                     __pcstackCOMRAM:
   349                           	callstack 0
   350   00005A                     ??_interruptManager:
   351   00005A                     
   352                           ; 2 bytes @ 0x0
   353   00005A                     	ds	2
   354   00005C                     ?___awdiv:
   355                           	callstack 0
   356   00005C                     ?___awmod:
   357                           	callstack 0
   358   00005C                     gpio_Port_Write_Logic@logic:
   359                           	callstack 0
   360   00005C                     gpio_Pin_Derction_Intialize@pin_config:
   361                           	callstack 0
   362   00005C                     gpio_Pin_Write_Logic@pin_config:
   363                           	callstack 0
   364   00005C                     gpio_Pin_Read_Logic@pin_config:
   365                           	callstack 0
   366   00005C                     Timer1_DeInit@_timer:
   367                           	callstack 0
   368   00005C                     timer1_select_mode_timer_or_counter@_timer:
   369                           	callstack 0
   370   00005C                     timer1_oscillator_enable@_timer:
   371                           	callstack 0
   372   00005C                     timer1_select_reg_mode@_timer:
   373                           	callstack 0
   374   00005C                     ___awdiv@dividend:
   375                           	callstack 0
   376   00005C                     ___awmod@dividend:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x2
   380   00005C                     	ds	1
   381   00005D                     ??_gpio_Port_Write_Logic:
   382                           
   383                           ; 1 bytes @ 0x3
   384   00005D                     	ds	1
   385   00005E                     ??_gpio_Pin_Derction_Intialize:
   386   00005E                     gpio_Pin_Write_Logic@logic:
   387                           	callstack 0
   388   00005E                     gpio_Pin_Read_Logic@logic:
   389                           	callstack 0
   390   00005E                     Timer1_Init@_timer:
   391                           	callstack 0
   392   00005E                     ___awdiv@divisor:
   393                           	callstack 0
   394   00005E                     ___awmod@divisor:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x4
   398   00005E                     	ds	1
   399   00005F                     ??_gpio_Pin_Write_Logic:
   400   00005F                     gpio_Port_Write_Logic@port:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0x5
   404   00005F                     	ds	1
   405   000060                     ??_gpio_Pin_Read_Logic:
   406   000060                     ??_Timer1_Init:
   407   000060                     ___awdiv@counter:
   408                           	callstack 0
   409   000060                     ___awmod@counter:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0x6
   413   000060                     	ds	1
   414   000061                     ___awdiv@sign:
   415                           	callstack 0
   416   000061                     ___awmod@sign:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0x7
   420   000061                     	ds	1
   421   000062                     ___awdiv@quotient:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x8
   425   000062                     	ds	2
   426   000064                     gpio_Pin_Derction_Intialize@ret:
   427                           	callstack 0
   428                           
   429                           ; 1 bytes @ 0xA
   430   000064                     	ds	1
   431   000065                     gpio_Pin_Write_Logic@ret:
   432                           	callstack 0
   433   000065                     button_inialize@btn:
   434                           	callstack 0
   435   000065                     button_read_status@btn:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0xB
   439   000065                     	ds	1
   440   000066                     seven_segment_write_number@seg:
   441                           	callstack 0
   442   000066                     gpio_Pin_Intialize@pin_config:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0xC
   446   000066                     	ds	1
   447   000067                     button_read_status@btn_status:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0xD
   451   000067                     	ds	1
   452   000068                     ??_gpio_Pin_Intialize:
   453   000068                     seven_segment_write_number@number:
   454                           	callstack 0
   455                           
   456                           ; 1 bytes @ 0xE
   457   000068                     	ds	1
   458   000069                     seven_segment_write_number@ret:
   459                           	callstack 0
   460   000069                     gpio_Pin_Intialize@ret:
   461                           	callstack 0
   462                           
   463                           ; 1 bytes @ 0xF
   464   000069                     	ds	1
   465   00006A                     button_read_status@button_logic:
   466                           	callstack 0
   467   00006A                     seven_segment_initialize@seg:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x10
   471   00006A                     	ds	2
   472   00006C                     seven_segment_initialize@ret:
   473                           	callstack 0
   474                           
   475                           ; 1 bytes @ 0x12
   476   00006C                     	ds	1
   477   00006D                     ??_main:
   478                           
   479                           ; 1 bytes @ 0x13
   480   00006D                     	ds	1
   481                           
   482 ;;
   483 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   484 ;;
   485 ;; *************** function _main *****************
   486 ;; Defined at:
   487 ;;		line 67 in file "application.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;		None
   490 ;; Auto vars:     Size  Location     Type
   491 ;;		None
   492 ;; Return value:  Size  Location     Type
   493 ;;                  2  543[None  ] int 
   494 ;; Registers used:
   495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   496 ;; Tracked objects:
   497 ;;		On entry : 0/0
   498 ;;		On exit  : 0/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   503 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   504 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   505 ;;Total ram usage:        1 bytes
   506 ;; Hardware stack levels required when called: 6
   507 ;; This function calls:
   508 ;;		_Timer1_DeInit
   509 ;;		_Timer1_Init
   510 ;;		___awdiv
   511 ;;		___awmod
   512 ;;		_button_inialize
   513 ;;		_button_read_status
   514 ;;		_gpio_Pin_Intialize
   515 ;;		_gpio_Port_Write_Logic
   516 ;;		_seven_segment_initialize
   517 ;;		_seven_segment_write_number
   518 ;; This function is called by:
   519 ;;		Startup code after reset
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           	psect	text0
   524   000012                     __ptext0:
   525                           	callstack 0
   526   000012                     _main:
   527                           	callstack 25
   528   000012                     
   529                           ;application.c: 68:     seven_segment_initialize(&Seg_Obj);
   530   000012  0E24               	movlw	low _Seg_Obj
   531   000014  6E6A               	movwf	seven_segment_initialize@seg^0,c
   532   000016  0E00               	movlw	high _Seg_Obj
   533   000018  6E6B               	movwf	(seven_segment_initialize@seg+1)^0,c
   534   00001A  EC3D  F005         	call	_seven_segment_initialize	;wreg free
   535   00001E                     
   536                           ;application.c: 69:     Timer1_Init(&Timer1_Obj);
   537   00001E  0E1F               	movlw	low _Timer1_Obj
   538   000020  6E5E               	movwf	Timer1_Init@_timer^0,c
   539   000022  0E00               	movlw	high _Timer1_Obj
   540   000024  6E5F               	movwf	(Timer1_Init@_timer+1)^0,c
   541   000026  EC46  F003         	call	_Timer1_Init	;wreg free
   542   00002A                     
   543                           ;application.c: 70:     gpio_Pin_Intialize(&Enable1);
   544   00002A  0E37               	movlw	low _Enable1
   545   00002C  6E66               	movwf	gpio_Pin_Intialize@pin_config^0,c
   546   00002E  0E00               	movlw	high _Enable1
   547   000030  6E67               	movwf	(gpio_Pin_Intialize@pin_config+1)^0,c
   548   000032  EC0C  F005         	call	_gpio_Pin_Intialize	;wreg free
   549   000036                     
   550                           ;application.c: 71:     gpio_Pin_Intialize(&Enable2);
   551   000036  0E36               	movlw	low _Enable2
   552   000038  6E66               	movwf	gpio_Pin_Intialize@pin_config^0,c
   553   00003A  0E00               	movlw	high _Enable2
   554   00003C  6E67               	movwf	(gpio_Pin_Intialize@pin_config+1)^0,c
   555   00003E  EC0C  F005         	call	_gpio_Pin_Intialize	;wreg free
   556   000042                     
   557                           ;application.c: 72:     gpio_Pin_Intialize(&Enable3);
   558   000042  0E35               	movlw	low _Enable3
   559   000044  6E66               	movwf	gpio_Pin_Intialize@pin_config^0,c
   560   000046  0E00               	movlw	high _Enable3
   561   000048  6E67               	movwf	(gpio_Pin_Intialize@pin_config+1)^0,c
   562   00004A  EC0C  F005         	call	_gpio_Pin_Intialize	;wreg free
   563   00004E                     
   564                           ;application.c: 73:     gpio_Pin_Intialize(&Enable4);
   565   00004E  0E34               	movlw	low _Enable4
   566   000050  6E66               	movwf	gpio_Pin_Intialize@pin_config^0,c
   567   000052  0E00               	movlw	high _Enable4
   568   000054  6E67               	movwf	(gpio_Pin_Intialize@pin_config+1)^0,c
   569   000056  EC0C  F005         	call	_gpio_Pin_Intialize	;wreg free
   570   00005A                     
   571                           ;application.c: 74:     gpio_Pin_Intialize(&Enable5);
   572   00005A  0E33               	movlw	low _Enable5
   573   00005C  6E66               	movwf	gpio_Pin_Intialize@pin_config^0,c
   574   00005E  0E00               	movlw	high _Enable5
   575   000060  6E67               	movwf	(gpio_Pin_Intialize@pin_config+1)^0,c
   576   000062  EC0C  F005         	call	_gpio_Pin_Intialize	;wreg free
   577   000066                     
   578                           ;application.c: 75:     gpio_Pin_Intialize(&Enable6);
   579   000066  0E32               	movlw	low _Enable6
   580   000068  6E66               	movwf	gpio_Pin_Intialize@pin_config^0,c
   581   00006A  0E00               	movlw	high _Enable6
   582   00006C  6E67               	movwf	(gpio_Pin_Intialize@pin_config+1)^0,c
   583   00006E  EC0C  F005         	call	_gpio_Pin_Intialize	;wreg free
   584   000072                     
   585                           ;application.c: 76:     button_inialize(&Btn1);
   586   000072  0E2F               	movlw	low _Btn1
   587   000074  6E65               	movwf	button_inialize@btn^0,c
   588   000076  0E00               	movlw	high _Btn1
   589   000078  6E66               	movwf	(button_inialize@btn+1)^0,c
   590   00007A  EC38  F006         	call	_button_inialize	;wreg free
   591   00007E                     
   592                           ;application.c: 77:     button_inialize(&Btn2);
   593   00007E  0E2C               	movlw	low _Btn2
   594   000080  6E65               	movwf	button_inialize@btn^0,c
   595   000082  0E00               	movlw	high _Btn2
   596   000084  6E66               	movwf	(button_inialize@btn+1)^0,c
   597   000086  EC38  F006         	call	_button_inialize	;wreg free
   598   00008A                     
   599                           ;application.c: 78:     button_inialize(&Btn3);
   600   00008A  0E29               	movlw	low _Btn3
   601   00008C  6E65               	movwf	button_inialize@btn^0,c
   602   00008E  0E00               	movlw	high _Btn3
   603   000090  6E66               	movwf	(button_inialize@btn+1)^0,c
   604   000092  EC38  F006         	call	_button_inialize	;wreg free
   605   000096                     
   606                           ;application.c: 79:     ADCON1bits.PCFG=0x0F;
   607   000096  0E0F               	movlw	15
   608   000098  12C1               	iorwf	193,f,c	;volatile
   609   00009A                     
   610                           ;application.c: 80:     CMCONbits.CM=111;
   611   00009A  0E07               	movlw	7
   612   00009C  12B4               	iorwf	180,f,c	;volatile
   613   00009E                     l2515:
   614                           
   615                           ;application.c: 82:         button_read_status(&Btn1,&Button1Status);
   616   00009E  0E2F               	movlw	low _Btn1
   617   0000A0  6E65               	movwf	button_read_status@btn^0,c
   618   0000A2  0E00               	movlw	high _Btn1
   619   0000A4  6E66               	movwf	(button_read_status@btn+1)^0,c
   620   0000A6  0E3A               	movlw	low _Button1Status
   621   0000A8  6E67               	movwf	button_read_status@btn_status^0,c
   622   0000AA  0E00               	movlw	high _Button1Status
   623   0000AC  6E68               	movwf	(button_read_status@btn_status+1)^0,c
   624   0000AE  ECE7  F002         	call	_button_read_status	;wreg free
   625   0000B2                     
   626                           ;application.c: 83:         button_read_status(&Btn2,&Button2Status);
   627   0000B2  0E2C               	movlw	low _Btn2
   628   0000B4  6E65               	movwf	button_read_status@btn^0,c
   629   0000B6  0E00               	movlw	high _Btn2
   630   0000B8  6E66               	movwf	(button_read_status@btn+1)^0,c
   631   0000BA  0E39               	movlw	low _Button2Status
   632   0000BC  6E67               	movwf	button_read_status@btn_status^0,c
   633   0000BE  0E00               	movlw	high _Button2Status
   634   0000C0  6E68               	movwf	(button_read_status@btn_status+1)^0,c
   635   0000C2  ECE7  F002         	call	_button_read_status	;wreg free
   636   0000C6                     
   637                           ;application.c: 84:         button_read_status(&Btn3,&Button3Status);
   638   0000C6  0E29               	movlw	low _Btn3
   639   0000C8  6E65               	movwf	button_read_status@btn^0,c
   640   0000CA  0E00               	movlw	high _Btn3
   641   0000CC  6E66               	movwf	(button_read_status@btn+1)^0,c
   642   0000CE  0E38               	movlw	low _Button3Status
   643   0000D0  6E67               	movwf	button_read_status@btn_status^0,c
   644   0000D2  0E00               	movlw	high _Button3Status
   645   0000D4  6E68               	movwf	(button_read_status@btn_status+1)^0,c
   646   0000D6  ECE7  F002         	call	_button_read_status	;wreg free
   647   0000DA                     
   648                           ;application.c: 86:         if(BUTTON_PRESSED==Button1Status){
   649   0000DA  503A               	movf	_Button1Status^0,w,c	;volatile
   650   0000DC  A4D8               	btfss	status,2,c
   651   0000DE  EF73  F000         	goto	u1521
   652   0000E2  EF75  F000         	goto	u1520
   653   0000E6                     u1521:
   654   0000E6  EF7B  F000         	goto	l2525
   655   0000EA                     u1520:
   656   0000EA                     
   657                           ;application.c: 87:             Timer1_DeInit(&Timer1_Obj);
   658   0000EA  0E1F               	movlw	low _Timer1_Obj
   659   0000EC  6E5C               	movwf	Timer1_DeInit@_timer^0,c
   660   0000EE  0E00               	movlw	high _Timer1_Obj
   661   0000F0  6E5D               	movwf	(Timer1_DeInit@_timer+1)^0,c
   662   0000F2  EC4A  F006         	call	_Timer1_DeInit	;wreg free
   663   0000F6                     l2525:
   664                           
   665                           ;application.c: 90:         if(BUTTON_PRESSED==Button2Status){
   666   0000F6  5039               	movf	_Button2Status^0,w,c	;volatile
   667   0000F8  A4D8               	btfss	status,2,c
   668   0000FA  EF81  F000         	goto	u1531
   669   0000FE  EF83  F000         	goto	u1530
   670   000102                     u1531:
   671   000102  EF89  F000         	goto	l2529
   672   000106                     u1530:
   673   000106                     
   674                           ;application.c: 91:             Timer1_Init(&Timer1_Obj);
   675   000106  0E1F               	movlw	low _Timer1_Obj
   676   000108  6E5E               	movwf	Timer1_Init@_timer^0,c
   677   00010A  0E00               	movlw	high _Timer1_Obj
   678   00010C  6E5F               	movwf	(Timer1_Init@_timer+1)^0,c
   679   00010E  EC46  F003         	call	_Timer1_Init	;wreg free
   680   000112                     l2529:
   681                           
   682                           ;application.c: 93:         if(BUTTON_PRESSED==Button3Status){
   683   000112  5038               	movf	_Button3Status^0,w,c	;volatile
   684   000114  A4D8               	btfss	status,2,c
   685   000116  EF8F  F000         	goto	u1541
   686   00011A  EF91  F000         	goto	u1540
   687   00011E                     u1541:
   688   00011E  EF9B  F000         	goto	l2533
   689   000122                     u1540:
   690   000122                     
   691                           ;application.c: 94:             TimerOverFlow=0;
   692   000122  0E00               	movlw	0
   693   000124  6E3C               	movwf	(_TimerOverFlow+1)^0,c	;volatile
   694   000126  0E00               	movlw	0
   695   000128  6E3B               	movwf	_TimerOverFlow^0,c	;volatile
   696                           
   697                           ;application.c: 95:             Seconds=0;
   698   00012A  0E00               	movlw	0
   699   00012C  6E59               	movwf	_Seconds^0,c	;volatile
   700                           
   701                           ;application.c: 96:             Minutes=0;
   702   00012E  0E00               	movlw	0
   703   000130  6E58               	movwf	_Minutes^0,c	;volatile
   704                           
   705                           ;application.c: 97:             Hours=0;
   706   000132  0E00               	movlw	0
   707   000134  6E57               	movwf	_Hours^0,c	;volatile
   708   000136                     l2533:
   709                           
   710                           ;application.c: 100:         gpio_Port_Write_Logic(PORTD_INDEX,0b00000001);
   711   000136  0E01               	movlw	1
   712   000138  6E5C               	movwf	gpio_Port_Write_Logic@logic^0,c
   713   00013A  0E03               	movlw	3
   714   00013C  ECA9  F005         	call	_gpio_Port_Write_Logic
   715   000140                     
   716                           ;application.c: 101:         seven_segment_write_number(&Seg_Obj,(Hours/10));
   717   000140  0E24               	movlw	low _Seg_Obj
   718   000142  6E66               	movwf	seven_segment_write_number@seg^0,c
   719   000144  0E00               	movlw	high _Seg_Obj
   720   000146  6E67               	movwf	(seven_segment_write_number@seg+1)^0,c
   721   000148  C057  F05C         	movff	_Hours,___awdiv@dividend	;volatile
   722   00014C  6A5D               	clrf	(___awdiv@dividend+1)^0,c
   723   00014E  0E00               	movlw	0
   724   000150  6E5F               	movwf	(___awdiv@divisor+1)^0,c
   725   000152  0E0A               	movlw	10
   726   000154  6E5E               	movwf	___awdiv@divisor^0,c
   727   000156  EC85  F002         	call	___awdiv	;wreg free
   728   00015A  505C               	movf	?___awdiv^0,w,c
   729   00015C  6E68               	movwf	seven_segment_write_number@number^0,c
   730   00015E  EC51  F004         	call	_seven_segment_write_number	;wreg free
   731   000162                     
   732                           ;application.c: 102:         _delay((unsigned long)((7500)*(8000000UL/4000000.0)));
   733   000162  0E14               	movlw	20
   734   000164  6E6D               	movwf	??_main^0,c
   735   000166  0E7A               	movlw	122
   736   000168                     u1557:
   737   000168  2EE8               	decfsz	wreg,f,c
   738   00016A  D7FE               	bra	u1557
   739   00016C  2E6D               	decfsz	??_main^0,f,c
   740   00016E  D7FC               	bra	u1557
   741   000170                     
   742                           ;application.c: 103:         gpio_Port_Write_Logic(PORTD_INDEX,0b00000010);
   743   000170  0E02               	movlw	2
   744   000172  6E5C               	movwf	gpio_Port_Write_Logic@logic^0,c
   745   000174  0E03               	movlw	3
   746   000176  ECA9  F005         	call	_gpio_Port_Write_Logic
   747   00017A                     
   748                           ;application.c: 104:         seven_segment_write_number(&Seg_Obj,(Hours%10));
   749   00017A  0E24               	movlw	low _Seg_Obj
   750   00017C  6E66               	movwf	seven_segment_write_number@seg^0,c
   751   00017E  0E00               	movlw	high _Seg_Obj
   752   000180  6E67               	movwf	(seven_segment_write_number@seg+1)^0,c
   753   000182  C057  F05C         	movff	_Hours,___awmod@dividend	;volatile
   754   000186  6A5D               	clrf	(___awmod@dividend+1)^0,c
   755   000188  0E00               	movlw	0
   756   00018A  6E5F               	movwf	(___awmod@divisor+1)^0,c
   757   00018C  0E0A               	movlw	10
   758   00018E  6E5E               	movwf	___awmod@divisor^0,c
   759   000190  ECA2  F003         	call	___awmod	;wreg free
   760   000194  505C               	movf	?___awmod^0,w,c
   761   000196  6E68               	movwf	seven_segment_write_number@number^0,c
   762   000198  EC51  F004         	call	_seven_segment_write_number	;wreg free
   763   00019C                     
   764                           ;application.c: 105:         _delay((unsigned long)((7500)*(8000000UL/4000000.0)));
   765   00019C  0E14               	movlw	20
   766   00019E  6E6D               	movwf	??_main^0,c
   767   0001A0  0E7A               	movlw	122
   768   0001A2                     u1567:
   769   0001A2  2EE8               	decfsz	wreg,f,c
   770   0001A4  D7FE               	bra	u1567
   771   0001A6  2E6D               	decfsz	??_main^0,f,c
   772   0001A8  D7FC               	bra	u1567
   773   0001AA                     
   774                           ;application.c: 107:         gpio_Port_Write_Logic(PORTD_INDEX,0b00000100);
   775   0001AA  0E04               	movlw	4
   776   0001AC  6E5C               	movwf	gpio_Port_Write_Logic@logic^0,c
   777   0001AE  0E03               	movlw	3
   778   0001B0  ECA9  F005         	call	_gpio_Port_Write_Logic
   779   0001B4                     
   780                           ;application.c: 108:         seven_segment_write_number(&Seg_Obj,(Minutes/10));
   781   0001B4  0E24               	movlw	low _Seg_Obj
   782   0001B6  6E66               	movwf	seven_segment_write_number@seg^0,c
   783   0001B8  0E00               	movlw	high _Seg_Obj
   784   0001BA  6E67               	movwf	(seven_segment_write_number@seg+1)^0,c
   785   0001BC  C058  F05C         	movff	_Minutes,___awdiv@dividend	;volatile
   786   0001C0  6A5D               	clrf	(___awdiv@dividend+1)^0,c
   787   0001C2  0E00               	movlw	0
   788   0001C4  6E5F               	movwf	(___awdiv@divisor+1)^0,c
   789   0001C6  0E0A               	movlw	10
   790   0001C8  6E5E               	movwf	___awdiv@divisor^0,c
   791   0001CA  EC85  F002         	call	___awdiv	;wreg free
   792   0001CE  505C               	movf	?___awdiv^0,w,c
   793   0001D0  6E68               	movwf	seven_segment_write_number@number^0,c
   794   0001D2  EC51  F004         	call	_seven_segment_write_number	;wreg free
   795   0001D6                     
   796                           ;application.c: 109:         _delay((unsigned long)((7500)*(8000000UL/4000000.0)));
   797   0001D6  0E14               	movlw	20
   798   0001D8  6E6D               	movwf	??_main^0,c
   799   0001DA  0E7A               	movlw	122
   800   0001DC                     u1577:
   801   0001DC  2EE8               	decfsz	wreg,f,c
   802   0001DE  D7FE               	bra	u1577
   803   0001E0  2E6D               	decfsz	??_main^0,f,c
   804   0001E2  D7FC               	bra	u1577
   805   0001E4                     
   806                           ;application.c: 110:         gpio_Port_Write_Logic(PORTD_INDEX,0b00001000);
   807   0001E4  0E08               	movlw	8
   808   0001E6  6E5C               	movwf	gpio_Port_Write_Logic@logic^0,c
   809   0001E8  0E03               	movlw	3
   810   0001EA  ECA9  F005         	call	_gpio_Port_Write_Logic
   811   0001EE                     
   812                           ;application.c: 111:         seven_segment_write_number(&Seg_Obj,(Minutes%10));
   813   0001EE  0E24               	movlw	low _Seg_Obj
   814   0001F0  6E66               	movwf	seven_segment_write_number@seg^0,c
   815   0001F2  0E00               	movlw	high _Seg_Obj
   816   0001F4  6E67               	movwf	(seven_segment_write_number@seg+1)^0,c
   817   0001F6  C058  F05C         	movff	_Minutes,___awmod@dividend	;volatile
   818   0001FA  6A5D               	clrf	(___awmod@dividend+1)^0,c
   819   0001FC  0E00               	movlw	0
   820   0001FE  6E5F               	movwf	(___awmod@divisor+1)^0,c
   821   000200  0E0A               	movlw	10
   822   000202  6E5E               	movwf	___awmod@divisor^0,c
   823   000204  ECA2  F003         	call	___awmod	;wreg free
   824   000208  505C               	movf	?___awmod^0,w,c
   825   00020A  6E68               	movwf	seven_segment_write_number@number^0,c
   826   00020C  EC51  F004         	call	_seven_segment_write_number	;wreg free
   827   000210                     
   828                           ;application.c: 112:         _delay((unsigned long)((7500)*(8000000UL/4000000.0)));
   829   000210  0E14               	movlw	20
   830   000212  6E6D               	movwf	??_main^0,c
   831   000214  0E7A               	movlw	122
   832   000216                     u1587:
   833   000216  2EE8               	decfsz	wreg,f,c
   834   000218  D7FE               	bra	u1587
   835   00021A  2E6D               	decfsz	??_main^0,f,c
   836   00021C  D7FC               	bra	u1587
   837   00021E                     
   838                           ;application.c: 114:         gpio_Port_Write_Logic(PORTD_INDEX,0b00010000);
   839   00021E  0E10               	movlw	16
   840   000220  6E5C               	movwf	gpio_Port_Write_Logic@logic^0,c
   841   000222  0E03               	movlw	3
   842   000224  ECA9  F005         	call	_gpio_Port_Write_Logic
   843   000228                     
   844                           ;application.c: 115:         seven_segment_write_number(&Seg_Obj,(Seconds/10));
   845   000228  0E24               	movlw	low _Seg_Obj
   846   00022A  6E66               	movwf	seven_segment_write_number@seg^0,c
   847   00022C  0E00               	movlw	high _Seg_Obj
   848   00022E  6E67               	movwf	(seven_segment_write_number@seg+1)^0,c
   849   000230  C059  F05C         	movff	_Seconds,___awdiv@dividend	;volatile
   850   000234  6A5D               	clrf	(___awdiv@dividend+1)^0,c
   851   000236  0E00               	movlw	0
   852   000238  6E5F               	movwf	(___awdiv@divisor+1)^0,c
   853   00023A  0E0A               	movlw	10
   854   00023C  6E5E               	movwf	___awdiv@divisor^0,c
   855   00023E  EC85  F002         	call	___awdiv	;wreg free
   856   000242  505C               	movf	?___awdiv^0,w,c
   857   000244  6E68               	movwf	seven_segment_write_number@number^0,c
   858   000246  EC51  F004         	call	_seven_segment_write_number	;wreg free
   859   00024A                     
   860                           ;application.c: 116:         _delay((unsigned long)((7500)*(8000000UL/4000000.0)));
   861   00024A  0E14               	movlw	20
   862   00024C  6E6D               	movwf	??_main^0,c
   863   00024E  0E7A               	movlw	122
   864   000250                     u1597:
   865   000250  2EE8               	decfsz	wreg,f,c
   866   000252  D7FE               	bra	u1597
   867   000254  2E6D               	decfsz	??_main^0,f,c
   868   000256  D7FC               	bra	u1597
   869   000258                     
   870                           ;application.c: 117:         gpio_Port_Write_Logic(PORTD_INDEX,0b00100000);
   871   000258  0E20               	movlw	32
   872   00025A  6E5C               	movwf	gpio_Port_Write_Logic@logic^0,c
   873   00025C  0E03               	movlw	3
   874   00025E  ECA9  F005         	call	_gpio_Port_Write_Logic
   875   000262                     
   876                           ;application.c: 118:         seven_segment_write_number(&Seg_Obj,(Seconds%10));
   877   000262  0E24               	movlw	low _Seg_Obj
   878   000264  6E66               	movwf	seven_segment_write_number@seg^0,c
   879   000266  0E00               	movlw	high _Seg_Obj
   880   000268  6E67               	movwf	(seven_segment_write_number@seg+1)^0,c
   881   00026A  C059  F05C         	movff	_Seconds,___awmod@dividend	;volatile
   882   00026E  6A5D               	clrf	(___awmod@dividend+1)^0,c
   883   000270  0E00               	movlw	0
   884   000272  6E5F               	movwf	(___awmod@divisor+1)^0,c
   885   000274  0E0A               	movlw	10
   886   000276  6E5E               	movwf	___awmod@divisor^0,c
   887   000278  ECA2  F003         	call	___awmod	;wreg free
   888   00027C  505C               	movf	?___awmod^0,w,c
   889   00027E  6E68               	movwf	seven_segment_write_number@number^0,c
   890   000280  EC51  F004         	call	_seven_segment_write_number	;wreg free
   891   000284                     
   892                           ;application.c: 119:         _delay((unsigned long)((7500)*(8000000UL/4000000.0)));
   893   000284  0E14               	movlw	20
   894   000286  6E6D               	movwf	??_main^0,c
   895   000288  0E7A               	movlw	122
   896   00028A                     u1607:
   897   00028A  2EE8               	decfsz	wreg,f,c
   898   00028C  D7FE               	bra	u1607
   899   00028E  2E6D               	decfsz	??_main^0,f,c
   900   000290  D7FC               	bra	u1607
   901   000292  EF4F  F000         	goto	l2515
   902   000296  EF07  F000         	goto	start
   903   00029A                     __end_of_main:
   904                           	callstack 0
   905                           
   906 ;; *************** function _seven_segment_write_number *****************
   907 ;; Defined at:
   908 ;;		line 40 in file "ECU_Layer/7segment/ecu_segment.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;  seg             2   12[COMRAM] PTR const struct .
   911 ;;		 -> Seg_Obj(5), 
   912 ;;  number          1   14[COMRAM] unsigned char 
   913 ;; Auto vars:     Size  Location     Type
   914 ;;  ret             1   15[COMRAM] unsigned char 
   915 ;; Return value:  Size  Location     Type
   916 ;;                  1    wreg      unsigned char 
   917 ;; Registers used:
   918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   924 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   925 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   927 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   928 ;;Total ram usage:        4 bytes
   929 ;; Hardware stack levels used: 1
   930 ;; Hardware stack levels required when called: 4
   931 ;; This function calls:
   932 ;;		_gpio_Pin_Write_Logic
   933 ;; This function is called by:
   934 ;;		_main
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           	psect	text1
   939   0008A2                     __ptext1:
   940                           	callstack 0
   941   0008A2                     _seven_segment_write_number:
   942                           	callstack 26
   943   0008A2                     
   944                           ;ECU_Layer/7segment/ecu_segment.c: 42:       if ((((void*)0)==seg) || (number > 9)){
   945   0008A2  5066               	movf	seven_segment_write_number@seg^0,w,c
   946   0008A4  1067               	iorwf	(seven_segment_write_number@seg+1)^0,w,c
   947   0008A6  B4D8               	btfsc	status,2,c
   948   0008A8  EF58  F004         	goto	u1251
   949   0008AC  EF5A  F004         	goto	u1250
   950   0008B0                     u1251:
   951   0008B0  EF62  F004         	goto	l2231
   952   0008B4                     u1250:
   953   0008B4  0E09               	movlw	9
   954   0008B6  6468               	cpfsgt	seven_segment_write_number@number^0,c
   955   0008B8  EF60  F004         	goto	u1261
   956   0008BC  EF62  F004         	goto	u1260
   957   0008C0                     u1261:
   958   0008C0  EF64  F004         	goto	l2233
   959   0008C4                     u1260:
   960   0008C4                     l2231:
   961                           
   962                           ;ECU_Layer/7segment/ecu_segment.c: 44:       }
   963   0008C4  EF97  F004         	goto	l16
   964   0008C8                     l2233:
   965                           
   966                           ;ECU_Layer/7segment/ecu_segment.c: 46:           ret=gpio_Pin_Write_Logic(&(seg->segment
      +                          _pin[0]), (number)& 0x01);
   967   0008C8  C066  F05C         	movff	seven_segment_write_number@seg,gpio_Pin_Write_Logic@pin_config
   968   0008CC  C067  F05D         	movff	seven_segment_write_number@seg+1,gpio_Pin_Write_Logic@pin_config+1
   969   0008D0  5068               	movf	seven_segment_write_number@number^0,w,c
   970   0008D2  0B01               	andlw	1
   971   0008D4  6E5E               	movwf	gpio_Pin_Write_Logic@logic^0,c
   972   0008D6  ECEF  F001         	call	_gpio_Pin_Write_Logic	;wreg free
   973   0008DA  6E69               	movwf	seven_segment_write_number@ret^0,c
   974                           
   975                           ;ECU_Layer/7segment/ecu_segment.c: 47:           ret=gpio_Pin_Write_Logic(&(seg->segment
      +                          _pin[1]), (number>>1)& 0x01);
   976   0008DC  0E01               	movlw	1
   977   0008DE  2466               	addwf	seven_segment_write_number@seg^0,w,c
   978   0008E0  6E5C               	movwf	gpio_Pin_Write_Logic@pin_config^0,c
   979   0008E2  0E00               	movlw	0
   980   0008E4  2067               	addwfc	(seven_segment_write_number@seg+1)^0,w,c
   981   0008E6  6E5D               	movwf	(gpio_Pin_Write_Logic@pin_config+1)^0,c
   982   0008E8  90D8               	bcf	status,0,c
   983   0008EA  3068               	rrcf	seven_segment_write_number@number^0,w,c
   984   0008EC  0B01               	andlw	1
   985   0008EE  6E5E               	movwf	gpio_Pin_Write_Logic@logic^0,c
   986   0008F0  ECEF  F001         	call	_gpio_Pin_Write_Logic	;wreg free
   987   0008F4  6E69               	movwf	seven_segment_write_number@ret^0,c
   988                           
   989                           ;ECU_Layer/7segment/ecu_segment.c: 48:           ret=gpio_Pin_Write_Logic(&(seg->segment
      +                          _pin[2]), (number>>2)& 0x01);
   990   0008F6  0E02               	movlw	2
   991   0008F8  2466               	addwf	seven_segment_write_number@seg^0,w,c
   992   0008FA  6E5C               	movwf	gpio_Pin_Write_Logic@pin_config^0,c
   993   0008FC  0E00               	movlw	0
   994   0008FE  2067               	addwfc	(seven_segment_write_number@seg+1)^0,w,c
   995   000900  6E5D               	movwf	(gpio_Pin_Write_Logic@pin_config+1)^0,c
   996   000902  4068               	rrncf	seven_segment_write_number@number^0,w,c
   997   000904  42E8               	rrncf	wreg,f,c
   998   000906  0B3F               	andlw	63
   999   000908  0B01               	andlw	1
  1000   00090A  6E5E               	movwf	gpio_Pin_Write_Logic@logic^0,c
  1001   00090C  ECEF  F001         	call	_gpio_Pin_Write_Logic	;wreg free
  1002   000910  6E69               	movwf	seven_segment_write_number@ret^0,c
  1003                           
  1004                           ;ECU_Layer/7segment/ecu_segment.c: 49:           ret=gpio_Pin_Write_Logic(&(seg->segment
      +                          _pin[3]), (number>>3)& 0x01);
  1005   000912  0E03               	movlw	3
  1006   000914  2466               	addwf	seven_segment_write_number@seg^0,w,c
  1007   000916  6E5C               	movwf	gpio_Pin_Write_Logic@pin_config^0,c
  1008   000918  0E00               	movlw	0
  1009   00091A  2067               	addwfc	(seven_segment_write_number@seg+1)^0,w,c
  1010   00091C  6E5D               	movwf	(gpio_Pin_Write_Logic@pin_config+1)^0,c
  1011   00091E  3868               	swapf	seven_segment_write_number@number^0,w,c
  1012   000920  46E8               	rlncf	wreg,f,c
  1013   000922  0B1F               	andlw	31
  1014   000924  0B01               	andlw	1
  1015   000926  6E5E               	movwf	gpio_Pin_Write_Logic@logic^0,c
  1016   000928  ECEF  F001         	call	_gpio_Pin_Write_Logic	;wreg free
  1017   00092C  6E69               	movwf	seven_segment_write_number@ret^0,c
  1018   00092E                     l16:
  1019   00092E  0012               	return		;funcret
  1020   000930                     __end_of_seven_segment_write_number:
  1021                           	callstack 0
  1022                           
  1023 ;; *************** function _seven_segment_initialize *****************
  1024 ;; Defined at:
  1025 ;;		line 18 in file "ECU_Layer/7segment/ecu_segment.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;  seg             2   16[COMRAM] PTR const struct .
  1028 ;;		 -> Seg_Obj(5), 
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;  ret             1   18[COMRAM] unsigned char 
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      unsigned char 
  1033 ;; Registers used:
  1034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1040 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1041 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1043 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1044 ;;Total ram usage:        3 bytes
  1045 ;; Hardware stack levels used: 1
  1046 ;; Hardware stack levels required when called: 5
  1047 ;; This function calls:
  1048 ;;		_gpio_Pin_Intialize
  1049 ;; This function is called by:
  1050 ;;		_main
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           	psect	text2
  1055   000A7A                     __ptext2:
  1056                           	callstack 0
  1057   000A7A                     _seven_segment_initialize:
  1058                           	callstack 25
  1059   000A7A                     
  1060                           ;ECU_Layer/7segment/ecu_segment.c: 20:       if (((void*)0)==seg){
  1061   000A7A  506A               	movf	seven_segment_initialize@seg^0,w,c
  1062   000A7C  106B               	iorwf	(seven_segment_initialize@seg+1)^0,w,c
  1063   000A7E  A4D8               	btfss	status,2,c
  1064   000A80  EF44  F005         	goto	u1241
  1065   000A84  EF46  F005         	goto	u1240
  1066   000A88                     u1241:
  1067   000A88  EF48  F005         	goto	l2221
  1068   000A8C                     u1240:
  1069   000A8C                     
  1070                           ;ECU_Layer/7segment/ecu_segment.c: 22:       }
  1071   000A8C  EF6A  F005         	goto	l9
  1072   000A90                     l2221:
  1073                           
  1074                           ;ECU_Layer/7segment/ecu_segment.c: 24:           ret=gpio_Pin_Intialize(&(seg->segment_p
      +                          in[0]));
  1075   000A90  C06A  F066         	movff	seven_segment_initialize@seg,gpio_Pin_Intialize@pin_config
  1076   000A94  C06B  F067         	movff	seven_segment_initialize@seg+1,gpio_Pin_Intialize@pin_config+1
  1077   000A98  EC0C  F005         	call	_gpio_Pin_Intialize	;wreg free
  1078   000A9C  6E6C               	movwf	seven_segment_initialize@ret^0,c
  1079                           
  1080                           ;ECU_Layer/7segment/ecu_segment.c: 25:           ret=gpio_Pin_Intialize(&(seg->segment_p
      +                          in[1]));
  1081   000A9E  0E01               	movlw	1
  1082   000AA0  246A               	addwf	seven_segment_initialize@seg^0,w,c
  1083   000AA2  6E66               	movwf	gpio_Pin_Intialize@pin_config^0,c
  1084   000AA4  0E00               	movlw	0
  1085   000AA6  206B               	addwfc	(seven_segment_initialize@seg+1)^0,w,c
  1086   000AA8  6E67               	movwf	(gpio_Pin_Intialize@pin_config+1)^0,c
  1087   000AAA  EC0C  F005         	call	_gpio_Pin_Intialize	;wreg free
  1088   000AAE  6E6C               	movwf	seven_segment_initialize@ret^0,c
  1089                           
  1090                           ;ECU_Layer/7segment/ecu_segment.c: 26:           ret=gpio_Pin_Intialize(&(seg->segment_p
      +                          in[2]));
  1091   000AB0  0E02               	movlw	2
  1092   000AB2  246A               	addwf	seven_segment_initialize@seg^0,w,c
  1093   000AB4  6E66               	movwf	gpio_Pin_Intialize@pin_config^0,c
  1094   000AB6  0E00               	movlw	0
  1095   000AB8  206B               	addwfc	(seven_segment_initialize@seg+1)^0,w,c
  1096   000ABA  6E67               	movwf	(gpio_Pin_Intialize@pin_config+1)^0,c
  1097   000ABC  EC0C  F005         	call	_gpio_Pin_Intialize	;wreg free
  1098   000AC0  6E6C               	movwf	seven_segment_initialize@ret^0,c
  1099                           
  1100                           ;ECU_Layer/7segment/ecu_segment.c: 27:           ret=gpio_Pin_Intialize(&(seg->segment_p
      +                          in[3]));
  1101   000AC2  0E03               	movlw	3
  1102   000AC4  246A               	addwf	seven_segment_initialize@seg^0,w,c
  1103   000AC6  6E66               	movwf	gpio_Pin_Intialize@pin_config^0,c
  1104   000AC8  0E00               	movlw	0
  1105   000ACA  206B               	addwfc	(seven_segment_initialize@seg+1)^0,w,c
  1106   000ACC  6E67               	movwf	(gpio_Pin_Intialize@pin_config+1)^0,c
  1107   000ACE  EC0C  F005         	call	_gpio_Pin_Intialize	;wreg free
  1108   000AD2  6E6C               	movwf	seven_segment_initialize@ret^0,c
  1109   000AD4                     l9:
  1110   000AD4  0012               	return		;funcret
  1111   000AD6                     __end_of_seven_segment_initialize:
  1112                           	callstack 0
  1113                           
  1114 ;; *************** function _gpio_Pin_Intialize *****************
  1115 ;; Defined at:
  1116 ;;		line 141 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;  pin_config      2   12[COMRAM] PTR const struct .
  1119 ;;		 -> Enable6(1), Enable5(1), Enable4(1), Enable3(1), 
  1120 ;;		 -> Enable2(1), Enable1(1), Seg_Obj.segment_pin(4), Seg_Obj(5), 
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  ret             1   15[COMRAM] unsigned char 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      unsigned char 
  1125 ;; Registers used:
  1126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1132 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1133 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1134 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1135 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1136 ;;Total ram usage:        4 bytes
  1137 ;; Hardware stack levels used: 1
  1138 ;; Hardware stack levels required when called: 4
  1139 ;; This function calls:
  1140 ;;		_gpio_Pin_Derction_Intialize
  1141 ;;		_gpio_Pin_Write_Logic
  1142 ;; This function is called by:
  1143 ;;		_seven_segment_initialize
  1144 ;;		_main
  1145 ;;		_interrupt_INtx_pin_init
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           	psect	text3
  1150   000A18                     __ptext3:
  1151                           	callstack 0
  1152   000A18                     _gpio_Pin_Intialize:
  1153                           	callstack 25
  1154   000A18                     
  1155                           ;MCAL_Layer/GPIO/hal_gpio.c: 143:     if (((void*)0)==pin_config || pin_config->pin > 8 
      +                          -1){
  1156   000A18  5066               	movf	gpio_Pin_Intialize@pin_config^0,w,c
  1157   000A1A  1067               	iorwf	(gpio_Pin_Intialize@pin_config+1)^0,w,c
  1158   000A1C  B4D8               	btfsc	status,2,c
  1159   000A1E  EF13  F005         	goto	u1101
  1160   000A22  EF15  F005         	goto	u1100
  1161   000A26                     u1101:
  1162   000A26  EF26  F005         	goto	l2161
  1163   000A2A                     u1100:
  1164   000A2A  C066  FFD9         	movff	gpio_Pin_Intialize@pin_config,fsr2l
  1165   000A2E  C067  FFDA         	movff	gpio_Pin_Intialize@pin_config+1,fsr2h
  1166   000A32  30DF               	rrcf	223,w,c
  1167   000A34  32E8               	rrcf	wreg,f,c
  1168   000A36  32E8               	rrcf	wreg,f,c
  1169   000A38  0B07               	andlw	7
  1170   000A3A  6E68               	movwf	??_gpio_Pin_Intialize^0,c
  1171   000A3C  0E07               	movlw	7
  1172   000A3E  6468               	cpfsgt	??_gpio_Pin_Intialize^0,c
  1173   000A40  EF24  F005         	goto	u1111
  1174   000A44  EF26  F005         	goto	u1110
  1175   000A48                     u1111:
  1176   000A48  EF26  F005         	goto	l2163
  1177   000A4C                     u1110:
  1178   000A4C                     l2161:
  1179   000A4C                     l2163:
  1180   000A4C  C066  F05C         	movff	gpio_Pin_Intialize@pin_config,gpio_Pin_Derction_Intialize@pin_config
  1181   000A50  C067  F05D         	movff	gpio_Pin_Intialize@pin_config+1,gpio_Pin_Derction_Intialize@pin_config+1
  1182   000A54  EC4D  F001         	call	_gpio_Pin_Derction_Intialize	;wreg free
  1183   000A58                     
  1184                           ;MCAL_Layer/GPIO/hal_gpio.c: 147:     ret=gpio_Pin_Write_Logic(pin_config,pin_config->lo
      +                          gic);
  1185   000A58  C066  F05C         	movff	gpio_Pin_Intialize@pin_config,gpio_Pin_Write_Logic@pin_config
  1186   000A5C  C067  F05D         	movff	gpio_Pin_Intialize@pin_config+1,gpio_Pin_Write_Logic@pin_config+1
  1187   000A60  C066  FFD9         	movff	gpio_Pin_Intialize@pin_config,fsr2l
  1188   000A64  C067  FFDA         	movff	gpio_Pin_Intialize@pin_config+1,fsr2h
  1189   000A68  0E00               	movlw	0
  1190   000A6A  BEDF               	btfsc	indf2,7,c
  1191   000A6C  0E01               	movlw	1
  1192   000A6E  6E5E               	movwf	gpio_Pin_Write_Logic@logic^0,c
  1193   000A70  ECEF  F001         	call	_gpio_Pin_Write_Logic	;wreg free
  1194   000A74  6E69               	movwf	gpio_Pin_Intialize@ret^0,c
  1195                           
  1196                           ;MCAL_Layer/GPIO/hal_gpio.c: 149:     return ret;
  1197   000A76  5069               	movf	gpio_Pin_Intialize@ret^0,w,c
  1198   000A78  0012               	return		;funcret
  1199   000A7A                     __end_of_gpio_Pin_Intialize:
  1200                           	callstack 0
  1201                           
  1202 ;; *************** function _gpio_Pin_Write_Logic *****************
  1203 ;; Defined at:
  1204 ;;		line 75 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;  pin_config      2    2[COMRAM] PTR const struct .
  1207 ;;		 -> Enable6(1), Enable5(1), Enable4(1), Enable3(1), 
  1208 ;;		 -> Enable2(1), Enable1(1), Seg_Obj.segment_pin(4), Seg_Obj(5), 
  1209 ;;  logic           1    4[COMRAM] enum E2965
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;  ret             1   11[COMRAM] unsigned char 
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      unsigned char 
  1214 ;; Registers used:
  1215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1221 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1222 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1225 ;;Total ram usage:       10 bytes
  1226 ;; Hardware stack levels used: 1
  1227 ;; Hardware stack levels required when called: 3
  1228 ;; This function calls:
  1229 ;;		Nothing
  1230 ;; This function is called by:
  1231 ;;		_seven_segment_write_number
  1232 ;;		_gpio_Pin_Intialize
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           	psect	text4
  1237   0003DE                     __ptext4:
  1238                           	callstack 0
  1239   0003DE                     _gpio_Pin_Write_Logic:
  1240                           	callstack 26
  1241   0003DE                     
  1242                           ;MCAL_Layer/GPIO/hal_gpio.c: 76:     Std_ReturnType ret=(Std_ReturnType)0x01;
  1243   0003DE  0E01               	movlw	1
  1244   0003E0  6E65               	movwf	gpio_Pin_Write_Logic@ret^0,c
  1245   0003E2                     
  1246                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:     if (((void*)0)==pin_config || pin_config->pin > 8 -
      +                          1 ){
  1247   0003E2  505C               	movf	gpio_Pin_Write_Logic@pin_config^0,w,c
  1248   0003E4  105D               	iorwf	(gpio_Pin_Write_Logic@pin_config+1)^0,w,c
  1249   0003E6  B4D8               	btfsc	status,2,c
  1250   0003E8  EFF8  F001         	goto	u1001
  1251   0003EC  EFFA  F001         	goto	u1000
  1252   0003F0                     u1001:
  1253   0003F0  EF0B  F002         	goto	l2113
  1254   0003F4                     u1000:
  1255   0003F4  C05C  FFD9         	movff	gpio_Pin_Write_Logic@pin_config,fsr2l
  1256   0003F8  C05D  FFDA         	movff	gpio_Pin_Write_Logic@pin_config+1,fsr2h
  1257   0003FC  30DF               	rrcf	223,w,c
  1258   0003FE  32E8               	rrcf	wreg,f,c
  1259   000400  32E8               	rrcf	wreg,f,c
  1260   000402  0B07               	andlw	7
  1261   000404  6E5F               	movwf	??_gpio_Pin_Write_Logic^0,c
  1262   000406  0E07               	movlw	7
  1263   000408  645F               	cpfsgt	??_gpio_Pin_Write_Logic^0,c
  1264   00040A  EF09  F002         	goto	u1011
  1265   00040E  EF0B  F002         	goto	u1010
  1266   000412                     u1011:
  1267   000412  EF6E  F002         	goto	l2121
  1268   000416                     u1010:
  1269   000416                     l2113:
  1270                           
  1271                           ;MCAL_Layer/GPIO/hal_gpio.c: 78:         ret=(Std_ReturnType)0x00;
  1272   000416  0E00               	movlw	0
  1273   000418  6E65               	movwf	gpio_Pin_Write_Logic@ret^0,c
  1274   00041A  EF6E  F002         	goto	l2121
  1275   00041E                     l2115:
  1276                           
  1277                           ;MCAL_Layer/GPIO/hal_gpio.c: 82:             (*lat_registers[pin_config->port] &=~((uint
      +                          8)1 << pin_config->pin));
  1278   00041E  C05C  FFD9         	movff	gpio_Pin_Write_Logic@pin_config,fsr2l
  1279   000422  C05D  FFDA         	movff	gpio_Pin_Write_Logic@pin_config+1,fsr2h
  1280   000426  30DF               	rrcf	223,w,c
  1281   000428  32E8               	rrcf	wreg,f,c
  1282   00042A  32E8               	rrcf	wreg,f,c
  1283   00042C  0B07               	andlw	7
  1284   00042E  6E5F               	movwf	??_gpio_Pin_Write_Logic^0,c
  1285   000430  0E01               	movlw	1
  1286   000432  6E60               	movwf	(??_gpio_Pin_Write_Logic+1)^0,c
  1287   000434  2A5F               	incf	??_gpio_Pin_Write_Logic^0,f,c
  1288   000436  EF1F  F002         	goto	u1024
  1289   00043A                     u1025:
  1290   00043A  90D8               	bcf	status,0,c
  1291   00043C  3660               	rlcf	(??_gpio_Pin_Write_Logic+1)^0,f,c
  1292   00043E                     u1024:
  1293   00043E  2E5F               	decfsz	??_gpio_Pin_Write_Logic^0,f,c
  1294   000440  EF1D  F002         	goto	u1025
  1295   000444  5060               	movf	(??_gpio_Pin_Write_Logic+1)^0,w,c
  1296   000446  0AFF               	xorlw	255
  1297   000448  6E61               	movwf	(??_gpio_Pin_Write_Logic+2)^0,c
  1298   00044A  C05C  FFD9         	movff	gpio_Pin_Write_Logic@pin_config,fsr2l
  1299   00044E  C05D  FFDA         	movff	gpio_Pin_Write_Logic@pin_config+1,fsr2h
  1300   000452  50DF               	movf	223,w,c
  1301   000454  0B07               	andlw	7
  1302   000456  6E62               	movwf	(??_gpio_Pin_Write_Logic+3)^0,c
  1303   000458  5062               	movf	(??_gpio_Pin_Write_Logic+3)^0,w,c
  1304   00045A  0D02               	mullw	2
  1305   00045C  0E0B               	movlw	low _lat_registers
  1306   00045E  24F3               	addwf	243,w,c
  1307   000460  6ED9               	movwf	fsr2l,c
  1308   000462  0E00               	movlw	high _lat_registers
  1309   000464  20F4               	addwfc	prodh,w,c
  1310   000466  6EDA               	movwf	fsr2h,c
  1311   000468  CFDE F063          	movff	postinc2,??_gpio_Pin_Write_Logic+4
  1312   00046C  CFDD F064          	movff	postdec2,??_gpio_Pin_Write_Logic+5
  1313   000470  C063  FFD9         	movff	??_gpio_Pin_Write_Logic+4,fsr2l
  1314   000474  C064  FFDA         	movff	??_gpio_Pin_Write_Logic+5,fsr2h
  1315   000478  5061               	movf	(??_gpio_Pin_Write_Logic+2)^0,w,c
  1316   00047A  16DF               	andwf	indf2,f,c
  1317                           
  1318                           ;MCAL_Layer/GPIO/hal_gpio.c: 83:             break;
  1319   00047C  EF83  F002         	goto	l2123
  1320   000480                     l2117:
  1321                           
  1322                           ;MCAL_Layer/GPIO/hal_gpio.c: 85:             (*lat_registers[pin_config->port] |=((uint8
      +                          )1 << pin_config->pin));
  1323   000480  C05C  FFD9         	movff	gpio_Pin_Write_Logic@pin_config,fsr2l
  1324   000484  C05D  FFDA         	movff	gpio_Pin_Write_Logic@pin_config+1,fsr2h
  1325   000488  30DF               	rrcf	223,w,c
  1326   00048A  32E8               	rrcf	wreg,f,c
  1327   00048C  32E8               	rrcf	wreg,f,c
  1328   00048E  0B07               	andlw	7
  1329   000490  6E5F               	movwf	??_gpio_Pin_Write_Logic^0,c
  1330   000492  0E01               	movlw	1
  1331   000494  6E60               	movwf	(??_gpio_Pin_Write_Logic+1)^0,c
  1332   000496  2A5F               	incf	??_gpio_Pin_Write_Logic^0,f,c
  1333   000498  EF50  F002         	goto	u1034
  1334   00049C                     u1035:
  1335   00049C  90D8               	bcf	status,0,c
  1336   00049E  3660               	rlcf	(??_gpio_Pin_Write_Logic+1)^0,f,c
  1337   0004A0                     u1034:
  1338   0004A0  2E5F               	decfsz	??_gpio_Pin_Write_Logic^0,f,c
  1339   0004A2  EF4E  F002         	goto	u1035
  1340   0004A6  C05C  FFD9         	movff	gpio_Pin_Write_Logic@pin_config,fsr2l
  1341   0004AA  C05D  FFDA         	movff	gpio_Pin_Write_Logic@pin_config+1,fsr2h
  1342   0004AE  50DF               	movf	223,w,c
  1343   0004B0  0B07               	andlw	7
  1344   0004B2  6E61               	movwf	(??_gpio_Pin_Write_Logic+2)^0,c
  1345   0004B4  5061               	movf	(??_gpio_Pin_Write_Logic+2)^0,w,c
  1346   0004B6  0D02               	mullw	2
  1347   0004B8  0E0B               	movlw	low _lat_registers
  1348   0004BA  24F3               	addwf	243,w,c
  1349   0004BC  6ED9               	movwf	fsr2l,c
  1350   0004BE  0E00               	movlw	high _lat_registers
  1351   0004C0  20F4               	addwfc	prodh,w,c
  1352   0004C2  6EDA               	movwf	fsr2h,c
  1353   0004C4  CFDE F062          	movff	postinc2,??_gpio_Pin_Write_Logic+3
  1354   0004C8  CFDD F063          	movff	postdec2,??_gpio_Pin_Write_Logic+4
  1355   0004CC  C062  FFD9         	movff	??_gpio_Pin_Write_Logic+3,fsr2l
  1356   0004D0  C063  FFDA         	movff	??_gpio_Pin_Write_Logic+4,fsr2h
  1357   0004D4  5060               	movf	(??_gpio_Pin_Write_Logic+1)^0,w,c
  1358   0004D6  12DF               	iorwf	indf2,f,c
  1359                           
  1360                           ;MCAL_Layer/GPIO/hal_gpio.c: 86:             break;
  1361   0004D8  EF83  F002         	goto	l2123
  1362   0004DC                     l2121:
  1363   0004DC  505E               	movf	gpio_Pin_Write_Logic@logic^0,w,c
  1364   0004DE  6E5F               	movwf	??_gpio_Pin_Write_Logic^0,c
  1365   0004E0  6A60               	clrf	(??_gpio_Pin_Write_Logic+1)^0,c
  1366                           
  1367                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1368                           ; Switch size 1, requested type "simple"
  1369                           ; Number of cases is 1, Range of values is 0 to 0
  1370                           ; switch strategies available:
  1371                           ; Name         Instructions Cycles
  1372                           ; simple_byte            4     3 (average)
  1373                           ;	Chosen strategy is simple_byte
  1374   0004E2  5060               	movf	(??_gpio_Pin_Write_Logic+1)^0,w,c
  1375   0004E4  0A00               	xorlw	0	; case 0
  1376   0004E6  B4D8               	btfsc	status,2,c
  1377   0004E8  EF78  F002         	goto	l2577
  1378   0004EC  EF83  F002         	goto	l2123
  1379   0004F0                     l2577:
  1380                           
  1381                           ; Switch size 1, requested type "simple"
  1382                           ; Number of cases is 2, Range of values is 0 to 1
  1383                           ; switch strategies available:
  1384                           ; Name         Instructions Cycles
  1385                           ; simple_byte            7     4 (average)
  1386                           ;	Chosen strategy is simple_byte
  1387   0004F0  505F               	movf	??_gpio_Pin_Write_Logic^0,w,c
  1388   0004F2  0A00               	xorlw	0	; case 0
  1389   0004F4  B4D8               	btfsc	status,2,c
  1390   0004F6  EF0F  F002         	goto	l2115
  1391   0004FA  0A01               	xorlw	1	; case 1
  1392   0004FC  B4D8               	btfsc	status,2,c
  1393   0004FE  EF40  F002         	goto	l2117
  1394   000502  EF83  F002         	goto	l2123
  1395   000506                     l2123:
  1396                           
  1397                           ;MCAL_Layer/GPIO/hal_gpio.c: 88:     return ret;
  1398   000506  5065               	movf	gpio_Pin_Write_Logic@ret^0,w,c
  1399   000508  0012               	return		;funcret
  1400   00050A                     __end_of_gpio_Pin_Write_Logic:
  1401                           	callstack 0
  1402                           
  1403 ;; *************** function _gpio_Port_Write_Logic *****************
  1404 ;; Defined at:
  1405 ;;		line 206 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;  port            1    wreg     enum E2983
  1408 ;;  logic           1    2[COMRAM] unsigned char 
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  port            1    5[COMRAM] enum E2983
  1411 ;;  ret             1    0        unsigned char 
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  1    wreg      unsigned char 
  1414 ;; Registers used:
  1415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1421 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1423 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1424 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1425 ;;Total ram usage:        4 bytes
  1426 ;; Hardware stack levels used: 1
  1427 ;; Hardware stack levels required when called: 3
  1428 ;; This function calls:
  1429 ;;		Nothing
  1430 ;; This function is called by:
  1431 ;;		_main
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           	psect	text5
  1436   000B52                     __ptext5:
  1437                           	callstack 0
  1438   000B52                     _gpio_Port_Write_Logic:
  1439                           	callstack 27
  1440                           
  1441                           ;incstack = 0
  1442                           ;gpio_Port_Write_Logic@port stored from wreg
  1443   000B52  6E5F               	movwf	gpio_Port_Write_Logic@port^0,c
  1444   000B54                     
  1445                           ;MCAL_Layer/GPIO/hal_gpio.c: 208:     if (port > 5){
  1446   000B54  0E05               	movlw	5
  1447   000B56  645F               	cpfsgt	gpio_Port_Write_Logic@port^0,c
  1448   000B58  EFB0  F005         	goto	u1341
  1449   000B5C  EFB2  F005         	goto	u1340
  1450   000B60                     u1341:
  1451   000B60  EFB4  F005         	goto	l2279
  1452   000B64                     u1340:
  1453   000B64                     
  1454                           ;MCAL_Layer/GPIO/hal_gpio.c: 210:     }
  1455   000B64  EFC6  F005         	goto	l141
  1456   000B68                     l2279:
  1457                           
  1458                           ;MCAL_Layer/GPIO/hal_gpio.c: 212:         *lat_registers[port]=logic;
  1459   000B68  505F               	movf	gpio_Port_Write_Logic@port^0,w,c
  1460   000B6A  0D02               	mullw	2
  1461   000B6C  0E0B               	movlw	low _lat_registers
  1462   000B6E  24F3               	addwf	243,w,c
  1463   000B70  6ED9               	movwf	fsr2l,c
  1464   000B72  0E00               	movlw	high _lat_registers
  1465   000B74  20F4               	addwfc	prodh,w,c
  1466   000B76  6EDA               	movwf	fsr2h,c
  1467   000B78  CFDE F05D          	movff	postinc2,??_gpio_Port_Write_Logic
  1468   000B7C  CFDD F05E          	movff	postdec2,??_gpio_Port_Write_Logic+1
  1469   000B80  C05D  FFD9         	movff	??_gpio_Port_Write_Logic,fsr2l
  1470   000B84  C05E  FFDA         	movff	??_gpio_Port_Write_Logic+1,fsr2h
  1471   000B88  C05C  FFDF         	movff	gpio_Port_Write_Logic@logic,indf2
  1472   000B8C                     l141:
  1473   000B8C  0012               	return		;funcret
  1474   000B8E                     __end_of_gpio_Port_Write_Logic:
  1475                           	callstack 0
  1476                           
  1477 ;; *************** function _button_read_status *****************
  1478 ;; Defined at:
  1479 ;;		line 34 in file "ECU_Layer/button/ecu_button.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;  btn             2   11[COMRAM] PTR const struct .
  1482 ;;		 -> Btn3(3), Btn2(3), Btn1(3), 
  1483 ;;  btn_status      2   13[COMRAM] PTR enum E3027
  1484 ;;		 -> Button3Status(1), Button2Status(1), Button1Status(1), 
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;  button_logic    1   16[COMRAM] enum E2965
  1487 ;;  ret             1    0        unsigned char 
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  1    wreg      unsigned char 
  1490 ;; Registers used:
  1491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1497 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1498 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1499 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1500 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;Total ram usage:        6 bytes
  1502 ;; Hardware stack levels used: 1
  1503 ;; Hardware stack levels required when called: 4
  1504 ;; This function calls:
  1505 ;;		_gpio_Pin_Read_Logic
  1506 ;; This function is called by:
  1507 ;;		_main
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           	psect	text6
  1512   0005CE                     __ptext6:
  1513                           	callstack 0
  1514   0005CE                     _button_read_status:
  1515                           	callstack 26
  1516   0005CE                     
  1517                           ;ECU_Layer/button/ecu_button.c: 36:  logic_t button_logic=GPIO_LOW;
  1518   0005CE  0E00               	movlw	0
  1519   0005D0  6E6A               	movwf	button_read_status@button_logic^0,c
  1520   0005D2                     
  1521                           ;ECU_Layer/button/ecu_button.c: 37:       if (((void*)0)==btn || ((void*)0)==btn_status)
      +                          {
  1522   0005D2  5065               	movf	button_read_status@btn^0,w,c
  1523   0005D4  1066               	iorwf	(button_read_status@btn+1)^0,w,c
  1524   0005D6  B4D8               	btfsc	status,2,c
  1525   0005D8  EFF0  F002         	goto	u1281
  1526   0005DC  EFF2  F002         	goto	u1280
  1527   0005E0                     u1281:
  1528   0005E0  EFFB  F002         	goto	l2253
  1529   0005E4                     u1280:
  1530   0005E4  5067               	movf	button_read_status@btn_status^0,w,c
  1531   0005E6  1068               	iorwf	(button_read_status@btn_status+1)^0,w,c
  1532   0005E8  A4D8               	btfss	status,2,c
  1533   0005EA  EFF9  F002         	goto	u1291
  1534   0005EE  EFFB  F002         	goto	u1290
  1535   0005F2                     u1291:
  1536   0005F2  EFFD  F002         	goto	l2255
  1537   0005F6                     u1290:
  1538   0005F6                     l2253:
  1539                           
  1540                           ;ECU_Layer/button/ecu_button.c: 39:       }
  1541   0005F6  EF45  F003         	goto	l40
  1542   0005FA                     l2255:
  1543                           
  1544                           ;ECU_Layer/button/ecu_button.c: 41:           gpio_Pin_Read_Logic(&(btn->button_pin),&bu
      +                          tton_logic);
  1545   0005FA  C065  F05C         	movff	button_read_status@btn,gpio_Pin_Read_Logic@pin_config
  1546   0005FE  C066  F05D         	movff	button_read_status@btn+1,gpio_Pin_Read_Logic@pin_config+1
  1547   000602  0E6A               	movlw	low button_read_status@button_logic
  1548   000604  6E5E               	movwf	gpio_Pin_Read_Logic@logic^0,c
  1549   000606  0E00               	movlw	high button_read_status@button_logic
  1550   000608  6E5F               	movwf	(gpio_Pin_Read_Logic@logic+1)^0,c
  1551   00060A  ECFA  F003         	call	_gpio_Pin_Read_Logic	;wreg free
  1552   00060E                     
  1553                           ;ECU_Layer/button/ecu_button.c: 42:           if (BUTTON_ACTIVE_HIGH==btn->button_connec
      +                          tion){
  1554   00060E  EE20 F001          	lfsr	2,1
  1555   000612  5065               	movf	button_read_status@btn^0,w,c
  1556   000614  26D9               	addwf	fsr2l,f,c
  1557   000616  5066               	movf	(button_read_status@btn+1)^0,w,c
  1558   000618  22DA               	addwfc	fsr2h,f,c
  1559   00061A  50DF               	movf	indf2,w,c
  1560   00061C  A4D8               	btfss	status,2,c
  1561   00061E  EF13  F003         	goto	u1301
  1562   000622  EF15  F003         	goto	u1300
  1563   000626                     u1301:
  1564   000626  EF2D  F003         	goto	l2265
  1565   00062A                     u1300:
  1566   00062A                     
  1567                           ;ECU_Layer/button/ecu_button.c: 43:               if (GPIO_HIGH==button_logic){
  1568   00062A  046A               	decf	button_read_status@button_logic^0,w,c
  1569   00062C  A4D8               	btfss	status,2,c
  1570   00062E  EF1B  F003         	goto	u1311
  1571   000632  EF1D  F003         	goto	u1310
  1572   000636                     u1311:
  1573   000636  EF25  F003         	goto	l2263
  1574   00063A                     u1310:
  1575   00063A                     l2261:
  1576                           
  1577                           ;ECU_Layer/button/ecu_button.c: 44:                   *btn_status=BUTTON_PRESSED;
  1578   00063A  C067  FFD9         	movff	button_read_status@btn_status,fsr2l
  1579   00063E  C068  FFDA         	movff	button_read_status@btn_status+1,fsr2h
  1580   000642  0E00               	movlw	0
  1581   000644  6EDF               	movwf	indf2,c
  1582                           
  1583                           ;ECU_Layer/button/ecu_button.c: 45:               }
  1584   000646  EF45  F003         	goto	l40
  1585   00064A                     l2263:
  1586                           
  1587                           ;ECU_Layer/button/ecu_button.c: 47:                   *btn_status=BUTTON_NOT_PRESSED;
  1588   00064A  C067  FFD9         	movff	button_read_status@btn_status,fsr2l
  1589   00064E  C068  FFDA         	movff	button_read_status@btn_status+1,fsr2h
  1590   000652  0E01               	movlw	1
  1591   000654  6EDF               	movwf	indf2,c
  1592   000656  EF45  F003         	goto	l40
  1593   00065A                     l2265:
  1594   00065A  EE20 F001          	lfsr	2,1
  1595   00065E  5065               	movf	button_read_status@btn^0,w,c
  1596   000660  26D9               	addwf	fsr2l,f,c
  1597   000662  5066               	movf	(button_read_status@btn+1)^0,w,c
  1598   000664  22DA               	addwfc	fsr2h,f,c
  1599   000666  04DE               	decf	postinc2,w,c
  1600   000668  A4D8               	btfss	status,2,c
  1601   00066A  EF39  F003         	goto	u1321
  1602   00066E  EF3B  F003         	goto	u1320
  1603   000672                     u1321:
  1604   000672  EF45  F003         	goto	l35
  1605   000676                     u1320:
  1606   000676                     
  1607                           ;ECU_Layer/button/ecu_button.c: 51:               if (GPIO_LOW==button_logic){
  1608   000676  506A               	movf	button_read_status@button_logic^0,w,c
  1609   000678  A4D8               	btfss	status,2,c
  1610   00067A  EF41  F003         	goto	u1331
  1611   00067E  EF43  F003         	goto	u1330
  1612   000682                     u1331:
  1613   000682  EF25  F003         	goto	l2263
  1614   000686                     u1330:
  1615   000686  EF1D  F003         	goto	l2261
  1616   00068A                     l35:
  1617   00068A                     l40:
  1618   00068A  0012               	return		;funcret
  1619   00068C                     __end_of_button_read_status:
  1620                           	callstack 0
  1621                           
  1622 ;; *************** function _gpio_Pin_Read_Logic *****************
  1623 ;; Defined at:
  1624 ;;		line 101 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;  pin_config      2    2[COMRAM] PTR const struct .
  1627 ;;		 -> Btn3(3), Btn2(3), Btn1(3), 
  1628 ;;  logic           2    4[COMRAM] PTR enum E2965
  1629 ;;		 -> button_read_status@button_logic(1), 
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;  ret             1    0        unsigned char 
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      unsigned char 
  1634 ;; Registers used:
  1635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1641 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1643 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1644 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1645 ;;Total ram usage:        9 bytes
  1646 ;; Hardware stack levels used: 1
  1647 ;; Hardware stack levels required when called: 3
  1648 ;; This function calls:
  1649 ;;		Nothing
  1650 ;; This function is called by:
  1651 ;;		_button_read_status
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           	psect	text7
  1656   0007F4                     __ptext7:
  1657                           	callstack 0
  1658   0007F4                     _gpio_Pin_Read_Logic:
  1659                           	callstack 26
  1660   0007F4                     
  1661                           ;MCAL_Layer/GPIO/hal_gpio.c: 103:     if (((void*)0)==pin_config || ((void*)0)==logic ||
      +                           pin_config->pin > 8 -1){
  1662   0007F4  505C               	movf	gpio_Pin_Read_Logic@pin_config^0,w,c
  1663   0007F6  105D               	iorwf	(gpio_Pin_Read_Logic@pin_config+1)^0,w,c
  1664   0007F8  B4D8               	btfsc	status,2,c
  1665   0007FA  EF01  F004         	goto	u1121
  1666   0007FE  EF03  F004         	goto	u1120
  1667   000802                     u1121:
  1668   000802  EF1D  F004         	goto	l2177
  1669   000806                     u1120:
  1670   000806  505E               	movf	gpio_Pin_Read_Logic@logic^0,w,c
  1671   000808  105F               	iorwf	(gpio_Pin_Read_Logic@logic+1)^0,w,c
  1672   00080A  B4D8               	btfsc	status,2,c
  1673   00080C  EF0A  F004         	goto	u1131
  1674   000810  EF0C  F004         	goto	u1130
  1675   000814                     u1131:
  1676   000814  EF1D  F004         	goto	l2177
  1677   000818                     u1130:
  1678   000818  C05C  FFD9         	movff	gpio_Pin_Read_Logic@pin_config,fsr2l
  1679   00081C  C05D  FFDA         	movff	gpio_Pin_Read_Logic@pin_config+1,fsr2h
  1680   000820  30DF               	rrcf	223,w,c
  1681   000822  32E8               	rrcf	wreg,f,c
  1682   000824  32E8               	rrcf	wreg,f,c
  1683   000826  0B07               	andlw	7
  1684   000828  6E60               	movwf	??_gpio_Pin_Read_Logic^0,c
  1685   00082A  0E07               	movlw	7
  1686   00082C  6460               	cpfsgt	??_gpio_Pin_Read_Logic^0,c
  1687   00082E  EF1B  F004         	goto	u1141
  1688   000832  EF1D  F004         	goto	u1140
  1689   000836                     u1141:
  1690   000836  EF1F  F004         	goto	l2179
  1691   00083A                     u1140:
  1692   00083A                     l2177:
  1693                           
  1694                           ;MCAL_Layer/GPIO/hal_gpio.c: 105:     }
  1695   00083A  EF50  F004         	goto	l112
  1696   00083E                     l2179:
  1697                           
  1698                           ;MCAL_Layer/GPIO/hal_gpio.c: 107:         *logic=((*port_registers[pin_config->port] >> 
      +                          pin_config->pin) & (uint8)1);
  1699   00083E  C05C  FFD9         	movff	gpio_Pin_Read_Logic@pin_config,fsr2l
  1700   000842  C05D  FFDA         	movff	gpio_Pin_Read_Logic@pin_config+1,fsr2h
  1701   000846  30DF               	rrcf	223,w,c
  1702   000848  32E8               	rrcf	wreg,f,c
  1703   00084A  32E8               	rrcf	wreg,f,c
  1704   00084C  0B07               	andlw	7
  1705   00084E  6E60               	movwf	??_gpio_Pin_Read_Logic^0,c
  1706   000850  C05C  FFD9         	movff	gpio_Pin_Read_Logic@pin_config,fsr2l
  1707   000854  C05D  FFDA         	movff	gpio_Pin_Read_Logic@pin_config+1,fsr2h
  1708   000858  50DF               	movf	223,w,c
  1709   00085A  0B07               	andlw	7
  1710   00085C  6E61               	movwf	(??_gpio_Pin_Read_Logic+1)^0,c
  1711   00085E  5061               	movf	(??_gpio_Pin_Read_Logic+1)^0,w,c
  1712   000860  0D02               	mullw	2
  1713   000862  0E01               	movlw	low _port_registers
  1714   000864  24F3               	addwf	243,w,c
  1715   000866  6ED9               	movwf	fsr2l,c
  1716   000868  0E00               	movlw	high _port_registers
  1717   00086A  20F4               	addwfc	prodh,w,c
  1718   00086C  6EDA               	movwf	fsr2h,c
  1719   00086E  CFDE F062          	movff	postinc2,??_gpio_Pin_Read_Logic+2
  1720   000872  CFDD F063          	movff	postdec2,??_gpio_Pin_Read_Logic+3
  1721   000876  C062  FFD9         	movff	??_gpio_Pin_Read_Logic+2,fsr2l
  1722   00087A  C063  FFDA         	movff	??_gpio_Pin_Read_Logic+3,fsr2h
  1723   00087E  50DF               	movf	indf2,w,c
  1724   000880  6E64               	movwf	(??_gpio_Pin_Read_Logic+4)^0,c
  1725   000882  2A60               	incf	??_gpio_Pin_Read_Logic^0,f,c
  1726   000884  EF46  F004         	goto	u1154
  1727   000888                     u1155:
  1728   000888  90D8               	bcf	status,0,c
  1729   00088A  3264               	rrcf	(??_gpio_Pin_Read_Logic+4)^0,f,c
  1730   00088C                     u1154:
  1731   00088C  2E60               	decfsz	??_gpio_Pin_Read_Logic^0,f,c
  1732   00088E  EF44  F004         	goto	u1155
  1733   000892  5064               	movf	(??_gpio_Pin_Read_Logic+4)^0,w,c
  1734   000894  0B01               	andlw	1
  1735   000896  C05E  FFD9         	movff	gpio_Pin_Read_Logic@logic,fsr2l
  1736   00089A  C05F  FFDA         	movff	gpio_Pin_Read_Logic@logic+1,fsr2h
  1737   00089E  6EDF               	movwf	indf2,c
  1738   0008A0                     l112:
  1739   0008A0  0012               	return		;funcret
  1740   0008A2                     __end_of_gpio_Pin_Read_Logic:
  1741                           	callstack 0
  1742                           
  1743 ;; *************** function _button_inialize *****************
  1744 ;; Defined at:
  1745 ;;		line 15 in file "ECU_Layer/button/ecu_button.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;  btn             2   11[COMRAM] PTR const struct .
  1748 ;;		 -> Btn3(3), Btn2(3), Btn1(3), 
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;  ret             1    0        unsigned char 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      unsigned char 
  1753 ;; Registers used:
  1754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1760 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1763 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1764 ;;Total ram usage:        2 bytes
  1765 ;; Hardware stack levels used: 1
  1766 ;; Hardware stack levels required when called: 4
  1767 ;; This function calls:
  1768 ;;		_gpio_Pin_Derction_Intialize
  1769 ;; This function is called by:
  1770 ;;		_main
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           	psect	text8
  1775   000C70                     __ptext8:
  1776                           	callstack 0
  1777   000C70                     _button_inialize:
  1778                           	callstack 26
  1779   000C70                     
  1780                           ;ECU_Layer/button/ecu_button.c: 17:       if (((void*)0)==btn){
  1781   000C70  5065               	movf	button_inialize@btn^0,w,c
  1782   000C72  1066               	iorwf	(button_inialize@btn+1)^0,w,c
  1783   000C74  A4D8               	btfss	status,2,c
  1784   000C76  EF3F  F006         	goto	u1271
  1785   000C7A  EF41  F006         	goto	u1270
  1786   000C7E                     u1271:
  1787   000C7E  EF43  F006         	goto	l2243
  1788   000C82                     u1270:
  1789   000C82                     
  1790                           ;ECU_Layer/button/ecu_button.c: 19:       }
  1791   000C82  EF49  F006         	goto	l25
  1792   000C86                     l2243:
  1793   000C86  C065  F05C         	movff	button_inialize@btn,gpio_Pin_Derction_Intialize@pin_config
  1794   000C8A  C066  F05D         	movff	button_inialize@btn+1,gpio_Pin_Derction_Intialize@pin_config+1
  1795   000C8E  EC4D  F001         	call	_gpio_Pin_Derction_Intialize	;wreg free
  1796   000C92                     l25:
  1797   000C92  0012               	return		;funcret
  1798   000C94                     __end_of_button_inialize:
  1799                           	callstack 0
  1800                           
  1801 ;; *************** function _gpio_Pin_Derction_Intialize *****************
  1802 ;; Defined at:
  1803 ;;		line 24 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  pin_config      2    2[COMRAM] PTR const struct .
  1806 ;;		 -> Enable6(1), Enable5(1), Enable4(1), Enable3(1), 
  1807 ;;		 -> Enable2(1), Enable1(1), Btn3(3), Btn2(3), 
  1808 ;;		 -> Btn1(3), Seg_Obj.segment_pin(4), Seg_Obj(5), 
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;  ret             1   10[COMRAM] unsigned char 
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  1    wreg      unsigned char 
  1813 ;; Registers used:
  1814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1820 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1822 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1823 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1824 ;;Total ram usage:        9 bytes
  1825 ;; Hardware stack levels used: 1
  1826 ;; Hardware stack levels required when called: 3
  1827 ;; This function calls:
  1828 ;;		Nothing
  1829 ;; This function is called by:
  1830 ;;		_button_inialize
  1831 ;;		_gpio_Pin_Intialize
  1832 ;;		_external_interrupt_RBx_Init
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           	psect	text9
  1837   00029A                     __ptext9:
  1838                           	callstack 0
  1839   00029A                     _gpio_Pin_Derction_Intialize:
  1840                           	callstack 25
  1841   00029A                     
  1842                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     Std_ReturnType ret=(Std_ReturnType)0x01;
  1843   00029A  0E01               	movlw	1
  1844   00029C  6E64               	movwf	gpio_Pin_Derction_Intialize@ret^0,c
  1845   00029E                     
  1846                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     if ((((void*)0)==pin_config) || (pin_config->pin > 
      +                          8 -1)){
  1847   00029E  505C               	movf	gpio_Pin_Derction_Intialize@pin_config^0,w,c
  1848   0002A0  105D               	iorwf	(gpio_Pin_Derction_Intialize@pin_config+1)^0,w,c
  1849   0002A2  B4D8               	btfsc	status,2,c
  1850   0002A4  EF56  F001         	goto	u1041
  1851   0002A8  EF58  F001         	goto	u1040
  1852   0002AC                     u1041:
  1853   0002AC  EF69  F001         	goto	l2137
  1854   0002B0                     u1040:
  1855   0002B0  C05C  FFD9         	movff	gpio_Pin_Derction_Intialize@pin_config,fsr2l
  1856   0002B4  C05D  FFDA         	movff	gpio_Pin_Derction_Intialize@pin_config+1,fsr2h
  1857   0002B8  30DF               	rrcf	223,w,c
  1858   0002BA  32E8               	rrcf	wreg,f,c
  1859   0002BC  32E8               	rrcf	wreg,f,c
  1860   0002BE  0B07               	andlw	7
  1861   0002C0  6E5E               	movwf	??_gpio_Pin_Derction_Intialize^0,c
  1862   0002C2  0E07               	movlw	7
  1863   0002C4  645E               	cpfsgt	??_gpio_Pin_Derction_Intialize^0,c
  1864   0002C6  EF67  F001         	goto	u1051
  1865   0002CA  EF69  F001         	goto	u1050
  1866   0002CE                     u1051:
  1867   0002CE  EFCC  F001         	goto	l2145
  1868   0002D2                     u1050:
  1869   0002D2                     l2137:
  1870                           
  1871                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:         ret=(Std_ReturnType)0x00;
  1872   0002D2  0E00               	movlw	0
  1873   0002D4  6E64               	movwf	gpio_Pin_Derction_Intialize@ret^0,c
  1874                           
  1875                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:     }
  1876   0002D6  EFED  F001         	goto	l2147
  1877   0002DA                     l2139:
  1878                           
  1879                           ;MCAL_Layer/GPIO/hal_gpio.c: 32:                 (*tris_registers[pin_config->port] &=~(
      +                          (uint8)1 << pin_config->pin));
  1880   0002DA  C05C  FFD9         	movff	gpio_Pin_Derction_Intialize@pin_config,fsr2l
  1881   0002DE  C05D  FFDA         	movff	gpio_Pin_Derction_Intialize@pin_config+1,fsr2h
  1882   0002E2  30DF               	rrcf	223,w,c
  1883   0002E4  32E8               	rrcf	wreg,f,c
  1884   0002E6  32E8               	rrcf	wreg,f,c
  1885   0002E8  0B07               	andlw	7
  1886   0002EA  6E5E               	movwf	??_gpio_Pin_Derction_Intialize^0,c
  1887   0002EC  0E01               	movlw	1
  1888   0002EE  6E5F               	movwf	(??_gpio_Pin_Derction_Intialize+1)^0,c
  1889   0002F0  2A5E               	incf	??_gpio_Pin_Derction_Intialize^0,f,c
  1890   0002F2  EF7D  F001         	goto	u1064
  1891   0002F6                     u1065:
  1892   0002F6  90D8               	bcf	status,0,c
  1893   0002F8  365F               	rlcf	(??_gpio_Pin_Derction_Intialize+1)^0,f,c
  1894   0002FA                     u1064:
  1895   0002FA  2E5E               	decfsz	??_gpio_Pin_Derction_Intialize^0,f,c
  1896   0002FC  EF7B  F001         	goto	u1065
  1897   000300  505F               	movf	(??_gpio_Pin_Derction_Intialize+1)^0,w,c
  1898   000302  0AFF               	xorlw	255
  1899   000304  6E60               	movwf	(??_gpio_Pin_Derction_Intialize+2)^0,c
  1900   000306  C05C  FFD9         	movff	gpio_Pin_Derction_Intialize@pin_config,fsr2l
  1901   00030A  C05D  FFDA         	movff	gpio_Pin_Derction_Intialize@pin_config+1,fsr2h
  1902   00030E  50DF               	movf	223,w,c
  1903   000310  0B07               	andlw	7
  1904   000312  6E61               	movwf	(??_gpio_Pin_Derction_Intialize+3)^0,c
  1905   000314  5061               	movf	(??_gpio_Pin_Derction_Intialize+3)^0,w,c
  1906   000316  0D02               	mullw	2
  1907   000318  0E15               	movlw	low _tris_registers
  1908   00031A  24F3               	addwf	243,w,c
  1909   00031C  6ED9               	movwf	fsr2l,c
  1910   00031E  0E00               	movlw	high _tris_registers
  1911   000320  20F4               	addwfc	prodh,w,c
  1912   000322  6EDA               	movwf	fsr2h,c
  1913   000324  CFDE F062          	movff	postinc2,??_gpio_Pin_Derction_Intialize+4
  1914   000328  CFDD F063          	movff	postdec2,??_gpio_Pin_Derction_Intialize+5
  1915   00032C  C062  FFD9         	movff	??_gpio_Pin_Derction_Intialize+4,fsr2l
  1916   000330  C063  FFDA         	movff	??_gpio_Pin_Derction_Intialize+5,fsr2h
  1917   000334  5060               	movf	(??_gpio_Pin_Derction_Intialize+2)^0,w,c
  1918   000336  16DF               	andwf	indf2,f,c
  1919                           
  1920                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:              break;
  1921   000338  EFED  F001         	goto	l2147
  1922   00033C                     l2141:
  1923                           
  1924                           ;MCAL_Layer/GPIO/hal_gpio.c: 35:                 (*tris_registers[pin_config->port] |=((
      +                          uint8)1 << pin_config->pin));
  1925   00033C  C05C  FFD9         	movff	gpio_Pin_Derction_Intialize@pin_config,fsr2l
  1926   000340  C05D  FFDA         	movff	gpio_Pin_Derction_Intialize@pin_config+1,fsr2h
  1927   000344  30DF               	rrcf	223,w,c
  1928   000346  32E8               	rrcf	wreg,f,c
  1929   000348  32E8               	rrcf	wreg,f,c
  1930   00034A  0B07               	andlw	7
  1931   00034C  6E5E               	movwf	??_gpio_Pin_Derction_Intialize^0,c
  1932   00034E  0E01               	movlw	1
  1933   000350  6E5F               	movwf	(??_gpio_Pin_Derction_Intialize+1)^0,c
  1934   000352  2A5E               	incf	??_gpio_Pin_Derction_Intialize^0,f,c
  1935   000354  EFAE  F001         	goto	u1074
  1936   000358                     u1075:
  1937   000358  90D8               	bcf	status,0,c
  1938   00035A  365F               	rlcf	(??_gpio_Pin_Derction_Intialize+1)^0,f,c
  1939   00035C                     u1074:
  1940   00035C  2E5E               	decfsz	??_gpio_Pin_Derction_Intialize^0,f,c
  1941   00035E  EFAC  F001         	goto	u1075
  1942   000362  C05C  FFD9         	movff	gpio_Pin_Derction_Intialize@pin_config,fsr2l
  1943   000366  C05D  FFDA         	movff	gpio_Pin_Derction_Intialize@pin_config+1,fsr2h
  1944   00036A  50DF               	movf	223,w,c
  1945   00036C  0B07               	andlw	7
  1946   00036E  6E60               	movwf	(??_gpio_Pin_Derction_Intialize+2)^0,c
  1947   000370  5060               	movf	(??_gpio_Pin_Derction_Intialize+2)^0,w,c
  1948   000372  0D02               	mullw	2
  1949   000374  0E15               	movlw	low _tris_registers
  1950   000376  24F3               	addwf	243,w,c
  1951   000378  6ED9               	movwf	fsr2l,c
  1952   00037A  0E00               	movlw	high _tris_registers
  1953   00037C  20F4               	addwfc	prodh,w,c
  1954   00037E  6EDA               	movwf	fsr2h,c
  1955   000380  CFDE F061          	movff	postinc2,??_gpio_Pin_Derction_Intialize+3
  1956   000384  CFDD F062          	movff	postdec2,??_gpio_Pin_Derction_Intialize+4
  1957   000388  C061  FFD9         	movff	??_gpio_Pin_Derction_Intialize+3,fsr2l
  1958   00038C  C062  FFDA         	movff	??_gpio_Pin_Derction_Intialize+4,fsr2h
  1959   000390  505F               	movf	(??_gpio_Pin_Derction_Intialize+1)^0,w,c
  1960   000392  12DF               	iorwf	indf2,f,c
  1961                           
  1962                           ;MCAL_Layer/GPIO/hal_gpio.c: 36:                 break;
  1963   000394  EFED  F001         	goto	l2147
  1964   000398                     l2145:
  1965   000398  C05C  FFD9         	movff	gpio_Pin_Derction_Intialize@pin_config,fsr2l
  1966   00039C  C05D  FFDA         	movff	gpio_Pin_Derction_Intialize@pin_config+1,fsr2h
  1967   0003A0  BCDF               	btfsc	indf2,6,c
  1968   0003A2  EFD5  F001         	goto	u1081
  1969   0003A6  EFD8  F001         	goto	u1080
  1970   0003AA                     u1081:
  1971   0003AA  0E01               	movlw	1
  1972   0003AC  EFD9  F001         	goto	u1090
  1973   0003B0                     u1080:
  1974   0003B0  0E00               	movlw	0
  1975   0003B2                     u1090:
  1976   0003B2  6E5E               	movwf	??_gpio_Pin_Derction_Intialize^0,c
  1977   0003B4  6A5F               	clrf	(??_gpio_Pin_Derction_Intialize+1)^0,c
  1978                           
  1979                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1980                           ; Switch size 1, requested type "simple"
  1981                           ; Number of cases is 1, Range of values is 0 to 0
  1982                           ; switch strategies available:
  1983                           ; Name         Instructions Cycles
  1984                           ; simple_byte            4     3 (average)
  1985                           ;	Chosen strategy is simple_byte
  1986   0003B6  505F               	movf	(??_gpio_Pin_Derction_Intialize+1)^0,w,c
  1987   0003B8  0A00               	xorlw	0	; case 0
  1988   0003BA  B4D8               	btfsc	status,2,c
  1989   0003BC  EFE2  F001         	goto	l2579
  1990   0003C0  EF69  F001         	goto	l2137
  1991   0003C4                     l2579:
  1992                           
  1993                           ; Switch size 1, requested type "simple"
  1994                           ; Number of cases is 2, Range of values is 0 to 1
  1995                           ; switch strategies available:
  1996                           ; Name         Instructions Cycles
  1997                           ; simple_byte            7     4 (average)
  1998                           ;	Chosen strategy is simple_byte
  1999   0003C4  505E               	movf	??_gpio_Pin_Derction_Intialize^0,w,c
  2000   0003C6  0A00               	xorlw	0	; case 0
  2001   0003C8  B4D8               	btfsc	status,2,c
  2002   0003CA  EF6D  F001         	goto	l2139
  2003   0003CE  0A01               	xorlw	1	; case 1
  2004   0003D0  B4D8               	btfsc	status,2,c
  2005   0003D2  EF9E  F001         	goto	l2141
  2006   0003D6  EF69  F001         	goto	l2137
  2007   0003DA                     l2147:
  2008                           
  2009                           ;MCAL_Layer/GPIO/hal_gpio.c: 40:     return ret;
  2010   0003DA  5064               	movf	gpio_Pin_Derction_Intialize@ret^0,w,c
  2011   0003DC  0012               	return		;funcret
  2012   0003DE                     __end_of_gpio_Pin_Derction_Intialize:
  2013                           	callstack 0
  2014                           
  2015 ;; *************** function ___awmod *****************
  2016 ;; Defined at:
  2017 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;  dividend        2    2[COMRAM] int 
  2020 ;;  divisor         2    4[COMRAM] int 
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;  sign            1    7[COMRAM] unsigned char 
  2023 ;;  counter         1    6[COMRAM] unsigned char 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  2    2[COMRAM] int 
  2026 ;; Registers used:
  2027 ;;		wreg, status,2, status,0
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2033 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2036 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2037 ;;Total ram usage:        6 bytes
  2038 ;; Hardware stack levels used: 1
  2039 ;; Hardware stack levels required when called: 3
  2040 ;; This function calls:
  2041 ;;		Nothing
  2042 ;; This function is called by:
  2043 ;;		_main
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text10
  2048   000744                     __ptext10:
  2049                           	callstack 0
  2050   000744                     ___awmod:
  2051                           	callstack 27
  2052   000744  0E00               	movlw	0
  2053   000746  6E61               	movwf	___awmod@sign^0,c
  2054   000748  BE5D               	btfsc	(___awmod@dividend+1)^0,7,c
  2055   00074A  EFAB  F003         	goto	u1430
  2056   00074E  EFA9  F003         	goto	u1431
  2057   000752                     u1431:
  2058   000752  EFB1  F003         	goto	l2381
  2059   000756                     u1430:
  2060   000756  6C5C               	negf	___awmod@dividend^0,c
  2061   000758  1E5D               	comf	(___awmod@dividend+1)^0,f,c
  2062   00075A  B0D8               	btfsc	status,0,c
  2063   00075C  2A5D               	incf	(___awmod@dividend+1)^0,f,c
  2064   00075E  0E01               	movlw	1
  2065   000760  6E61               	movwf	___awmod@sign^0,c
  2066   000762                     l2381:
  2067   000762  BE5F               	btfsc	(___awmod@divisor+1)^0,7,c
  2068   000764  EFB8  F003         	goto	u1440
  2069   000768  EFB6  F003         	goto	u1441
  2070   00076C                     u1441:
  2071   00076C  EFBC  F003         	goto	l2385
  2072   000770                     u1440:
  2073   000770  6C5E               	negf	___awmod@divisor^0,c
  2074   000772  1E5F               	comf	(___awmod@divisor+1)^0,f,c
  2075   000774  B0D8               	btfsc	status,0,c
  2076   000776  2A5F               	incf	(___awmod@divisor+1)^0,f,c
  2077   000778                     l2385:
  2078   000778  505E               	movf	___awmod@divisor^0,w,c
  2079   00077A  105F               	iorwf	(___awmod@divisor+1)^0,w,c
  2080   00077C  B4D8               	btfsc	status,2,c
  2081   00077E  EFC3  F003         	goto	u1451
  2082   000782  EFC5  F003         	goto	u1450
  2083   000786                     u1451:
  2084   000786  EFE9  F003         	goto	l2401
  2085   00078A                     u1450:
  2086   00078A  0E01               	movlw	1
  2087   00078C  6E60               	movwf	___awmod@counter^0,c
  2088   00078E  EFCD  F003         	goto	l2391
  2089   000792                     l2389:
  2090   000792  90D8               	bcf	status,0,c
  2091   000794  365E               	rlcf	___awmod@divisor^0,f,c
  2092   000796  365F               	rlcf	(___awmod@divisor+1)^0,f,c
  2093   000798  2A60               	incf	___awmod@counter^0,f,c
  2094   00079A                     l2391:
  2095   00079A  AE5F               	btfss	(___awmod@divisor+1)^0,7,c
  2096   00079C  EFD2  F003         	goto	u1461
  2097   0007A0  EFD4  F003         	goto	u1460
  2098   0007A4                     u1461:
  2099   0007A4  EFC9  F003         	goto	l2389
  2100   0007A8                     u1460:
  2101   0007A8                     l2393:
  2102   0007A8  505E               	movf	___awmod@divisor^0,w,c
  2103   0007AA  5C5C               	subwf	___awmod@dividend^0,w,c
  2104   0007AC  505F               	movf	(___awmod@divisor+1)^0,w,c
  2105   0007AE  585D               	subwfb	(___awmod@dividend+1)^0,w,c
  2106   0007B0  A0D8               	btfss	status,0,c
  2107   0007B2  EFDD  F003         	goto	u1471
  2108   0007B6  EFDF  F003         	goto	u1470
  2109   0007BA                     u1471:
  2110   0007BA  EFE3  F003         	goto	l2397
  2111   0007BE                     u1470:
  2112   0007BE  505E               	movf	___awmod@divisor^0,w,c
  2113   0007C0  5E5C               	subwf	___awmod@dividend^0,f,c
  2114   0007C2  505F               	movf	(___awmod@divisor+1)^0,w,c
  2115   0007C4  5A5D               	subwfb	(___awmod@dividend+1)^0,f,c
  2116   0007C6                     l2397:
  2117   0007C6  90D8               	bcf	status,0,c
  2118   0007C8  325F               	rrcf	(___awmod@divisor+1)^0,f,c
  2119   0007CA  325E               	rrcf	___awmod@divisor^0,f,c
  2120   0007CC  2E60               	decfsz	___awmod@counter^0,f,c
  2121   0007CE  EFD4  F003         	goto	l2393
  2122   0007D2                     l2401:
  2123   0007D2  5061               	movf	___awmod@sign^0,w,c
  2124   0007D4  B4D8               	btfsc	status,2,c
  2125   0007D6  EFEF  F003         	goto	u1481
  2126   0007DA  EFF1  F003         	goto	u1480
  2127   0007DE                     u1481:
  2128   0007DE  EFF5  F003         	goto	l2405
  2129   0007E2                     u1480:
  2130   0007E2  6C5C               	negf	___awmod@dividend^0,c
  2131   0007E4  1E5D               	comf	(___awmod@dividend+1)^0,f,c
  2132   0007E6  B0D8               	btfsc	status,0,c
  2133   0007E8  2A5D               	incf	(___awmod@dividend+1)^0,f,c
  2134   0007EA                     l2405:
  2135   0007EA  C05C  F05C         	movff	___awmod@dividend,?___awmod
  2136   0007EE  C05D  F05D         	movff	___awmod@dividend+1,?___awmod+1
  2137   0007F2  0012               	return		;funcret
  2138   0007F4                     __end_of___awmod:
  2139                           	callstack 0
  2140                           
  2141 ;; *************** function ___awdiv *****************
  2142 ;; Defined at:
  2143 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  dividend        2    2[COMRAM] int 
  2146 ;;  divisor         2    4[COMRAM] int 
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;  quotient        2    8[COMRAM] int 
  2149 ;;  sign            1    7[COMRAM] unsigned char 
  2150 ;;  counter         1    6[COMRAM] unsigned char 
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  2    2[COMRAM] int 
  2153 ;; Registers used:
  2154 ;;		wreg, status,2, status,0
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2160 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2163 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;Total ram usage:        8 bytes
  2165 ;; Hardware stack levels used: 1
  2166 ;; Hardware stack levels required when called: 3
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_main
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text11
  2175   00050A                     __ptext11:
  2176                           	callstack 0
  2177   00050A                     ___awdiv:
  2178                           	callstack 27
  2179   00050A  0E00               	movlw	0
  2180   00050C  6E61               	movwf	___awdiv@sign^0,c
  2181   00050E  BE5F               	btfsc	(___awdiv@divisor+1)^0,7,c
  2182   000510  EF8E  F002         	goto	u1370
  2183   000514  EF8C  F002         	goto	u1371
  2184   000518                     u1371:
  2185   000518  EF94  F002         	goto	l2337
  2186   00051C                     u1370:
  2187   00051C  6C5E               	negf	___awdiv@divisor^0,c
  2188   00051E  1E5F               	comf	(___awdiv@divisor+1)^0,f,c
  2189   000520  B0D8               	btfsc	status,0,c
  2190   000522  2A5F               	incf	(___awdiv@divisor+1)^0,f,c
  2191   000524  0E01               	movlw	1
  2192   000526  6E61               	movwf	___awdiv@sign^0,c
  2193   000528                     l2337:
  2194   000528  BE5D               	btfsc	(___awdiv@dividend+1)^0,7,c
  2195   00052A  EF9B  F002         	goto	u1380
  2196   00052E  EF99  F002         	goto	u1381
  2197   000532                     u1381:
  2198   000532  EFA1  F002         	goto	l2343
  2199   000536                     u1380:
  2200   000536  6C5C               	negf	___awdiv@dividend^0,c
  2201   000538  1E5D               	comf	(___awdiv@dividend+1)^0,f,c
  2202   00053A  B0D8               	btfsc	status,0,c
  2203   00053C  2A5D               	incf	(___awdiv@dividend+1)^0,f,c
  2204   00053E  0E01               	movlw	1
  2205   000540  1A61               	xorwf	___awdiv@sign^0,f,c
  2206   000542                     l2343:
  2207   000542  0E00               	movlw	0
  2208   000544  6E63               	movwf	(___awdiv@quotient+1)^0,c
  2209   000546  0E00               	movlw	0
  2210   000548  6E62               	movwf	___awdiv@quotient^0,c
  2211   00054A  505E               	movf	___awdiv@divisor^0,w,c
  2212   00054C  105F               	iorwf	(___awdiv@divisor+1)^0,w,c
  2213   00054E  B4D8               	btfsc	status,2,c
  2214   000550  EFAC  F002         	goto	u1391
  2215   000554  EFAE  F002         	goto	u1390
  2216   000558                     u1391:
  2217   000558  EFD6  F002         	goto	l2365
  2218   00055C                     u1390:
  2219   00055C  0E01               	movlw	1
  2220   00055E  6E60               	movwf	___awdiv@counter^0,c
  2221   000560  EFB6  F002         	goto	l2351
  2222   000564                     l2349:
  2223   000564  90D8               	bcf	status,0,c
  2224   000566  365E               	rlcf	___awdiv@divisor^0,f,c
  2225   000568  365F               	rlcf	(___awdiv@divisor+1)^0,f,c
  2226   00056A  2A60               	incf	___awdiv@counter^0,f,c
  2227   00056C                     l2351:
  2228   00056C  AE5F               	btfss	(___awdiv@divisor+1)^0,7,c
  2229   00056E  EFBB  F002         	goto	u1401
  2230   000572  EFBD  F002         	goto	u1400
  2231   000576                     u1401:
  2232   000576  EFB2  F002         	goto	l2349
  2233   00057A                     u1400:
  2234   00057A                     l2353:
  2235   00057A  90D8               	bcf	status,0,c
  2236   00057C  3662               	rlcf	___awdiv@quotient^0,f,c
  2237   00057E  3663               	rlcf	(___awdiv@quotient+1)^0,f,c
  2238   000580  505E               	movf	___awdiv@divisor^0,w,c
  2239   000582  5C5C               	subwf	___awdiv@dividend^0,w,c
  2240   000584  505F               	movf	(___awdiv@divisor+1)^0,w,c
  2241   000586  585D               	subwfb	(___awdiv@dividend+1)^0,w,c
  2242   000588  A0D8               	btfss	status,0,c
  2243   00058A  EFC9  F002         	goto	u1411
  2244   00058E  EFCB  F002         	goto	u1410
  2245   000592                     u1411:
  2246   000592  EFD0  F002         	goto	l2361
  2247   000596                     u1410:
  2248   000596  505E               	movf	___awdiv@divisor^0,w,c
  2249   000598  5E5C               	subwf	___awdiv@dividend^0,f,c
  2250   00059A  505F               	movf	(___awdiv@divisor+1)^0,w,c
  2251   00059C  5A5D               	subwfb	(___awdiv@dividend+1)^0,f,c
  2252   00059E  8062               	bsf	___awdiv@quotient^0,0,c
  2253   0005A0                     l2361:
  2254   0005A0  90D8               	bcf	status,0,c
  2255   0005A2  325F               	rrcf	(___awdiv@divisor+1)^0,f,c
  2256   0005A4  325E               	rrcf	___awdiv@divisor^0,f,c
  2257   0005A6  2E60               	decfsz	___awdiv@counter^0,f,c
  2258   0005A8  EFBD  F002         	goto	l2353
  2259   0005AC                     l2365:
  2260   0005AC  5061               	movf	___awdiv@sign^0,w,c
  2261   0005AE  B4D8               	btfsc	status,2,c
  2262   0005B0  EFDC  F002         	goto	u1421
  2263   0005B4  EFDE  F002         	goto	u1420
  2264   0005B8                     u1421:
  2265   0005B8  EFE2  F002         	goto	l2369
  2266   0005BC                     u1420:
  2267   0005BC  6C62               	negf	___awdiv@quotient^0,c
  2268   0005BE  1E63               	comf	(___awdiv@quotient+1)^0,f,c
  2269   0005C0  B0D8               	btfsc	status,0,c
  2270   0005C2  2A63               	incf	(___awdiv@quotient+1)^0,f,c
  2271   0005C4                     l2369:
  2272   0005C4  C062  F05C         	movff	___awdiv@quotient,?___awdiv
  2273   0005C8  C063  F05D         	movff	___awdiv@quotient+1,?___awdiv+1
  2274   0005CC  0012               	return		;funcret
  2275   0005CE                     __end_of___awdiv:
  2276                           	callstack 0
  2277                           
  2278 ;; *************** function _Timer1_Init *****************
  2279 ;; Defined at:
  2280 ;;		line 22 in file "MCAL_Layer/TIMER1/hal_timer1.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;  _timer          2    4[COMRAM] PTR const struct .
  2283 ;;		 -> Timer1_Obj(5), 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  ret             1    0        unsigned char 
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      unsigned char 
  2288 ;; Registers used:
  2289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2295 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2297 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2298 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2299 ;;Total ram usage:        4 bytes
  2300 ;; Hardware stack levels used: 1
  2301 ;; Hardware stack levels required when called: 4
  2302 ;; This function calls:
  2303 ;;		_timer1_oscillator_enable
  2304 ;;		_timer1_select_mode_timer_or_counter
  2305 ;;		_timer1_select_reg_mode
  2306 ;; This function is called by:
  2307 ;;		_main
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text12
  2312   00068C                     __ptext12:
  2313                           	callstack 0
  2314   00068C                     _Timer1_Init:
  2315                           	callstack 26
  2316   00068C                     
  2317                           ;MCAL_Layer/TIMER1/hal_timer1.c: 24:         if (((void*)0)==_timer){
  2318   00068C  505E               	movf	Timer1_Init@_timer^0,w,c
  2319   00068E  105F               	iorwf	(Timer1_Init@_timer+1)^0,w,c
  2320   000690  A4D8               	btfss	status,2,c
  2321   000692  EF4D  F003         	goto	u1351
  2322   000696  EF4F  F003         	goto	u1350
  2323   00069A                     u1351:
  2324   00069A  EF51  F003         	goto	l431
  2325   00069E                     u1350:
  2326   00069E                     
  2327                           ;MCAL_Layer/TIMER1/hal_timer1.c: 26:         }
  2328   00069E  EFA1  F003         	goto	l433
  2329   0006A2                     l431:
  2330                           
  2331                           ;MCAL_Layer/TIMER1/hal_timer1.c: 29:             (T1CONbits.TMR1ON=0);
  2332   0006A2  90CD               	bcf	205,0,c	;volatile
  2333   0006A4                     
  2334                           ;MCAL_Layer/TIMER1/hal_timer1.c: 31:             (T1CONbits.T1CKPS=_timer->timer1_pre_sc
      +                          aler_val);
  2335   0006A4  EE20 F004          	lfsr	2,4
  2336   0006A8  505E               	movf	Timer1_Init@_timer^0,w,c
  2337   0006AA  26D9               	addwf	fsr2l,f,c
  2338   0006AC  505F               	movf	(Timer1_Init@_timer+1)^0,w,c
  2339   0006AE  22DA               	addwfc	fsr2h,f,c
  2340   0006B0  50DF               	movf	223,w,c
  2341   0006B2  0B03               	andlw	3
  2342   0006B4  6E60               	movwf	??_Timer1_Init^0,c
  2343   0006B6  3A60               	swapf	??_Timer1_Init^0,f,c
  2344   0006B8  50CD               	movf	205,w,c	;volatile
  2345   0006BA  1860               	xorwf	??_Timer1_Init^0,w,c
  2346   0006BC  0BCF               	andlw	-49
  2347   0006BE  1860               	xorwf	??_Timer1_Init^0,w,c
  2348   0006C0  6ECD               	movwf	205,c	;volatile
  2349   0006C2                     
  2350                           ;MCAL_Layer/TIMER1/hal_timer1.c: 34:             timer1_select_mode_timer_or_counter(_ti
      +                          mer);
  2351   0006C2  C05E  F05C         	movff	Timer1_Init@_timer,timer1_select_mode_timer_or_counter@_timer
  2352   0006C6  C05F  F05D         	movff	Timer1_Init@_timer+1,timer1_select_mode_timer_or_counter@_timer+1
  2353   0006CA  EC98  F004         	call	_timer1_select_mode_timer_or_counter	;wreg free
  2354   0006CE                     
  2355                           ;MCAL_Layer/TIMER1/hal_timer1.c: 36:             timer1_oscillator_enable(_timer);
  2356   0006CE  C05E  F05C         	movff	Timer1_Init@_timer,timer1_oscillator_enable@_timer
  2357   0006D2  C05F  F05D         	movff	Timer1_Init@_timer+1,timer1_oscillator_enable@_timer+1
  2358   0006D6  EC8A  F005         	call	_timer1_oscillator_enable	;wreg free
  2359   0006DA                     
  2360                           ;MCAL_Layer/TIMER1/hal_timer1.c: 38:             timer1_select_reg_mode(_timer);
  2361   0006DA  C05E  F05C         	movff	Timer1_Init@_timer,timer1_select_reg_mode@_timer
  2362   0006DE  C05F  F05D         	movff	Timer1_Init@_timer+1,timer1_select_reg_mode@_timer+1
  2363   0006E2  EC6B  F005         	call	_timer1_select_reg_mode	;wreg free
  2364   0006E6                     
  2365                           ;MCAL_Layer/TIMER1/hal_timer1.c: 40:             TMR1H=(_timer->preloaded_value) >>8;
  2366   0006E6  EE20 F002          	lfsr	2,2
  2367   0006EA  505E               	movf	Timer1_Init@_timer^0,w,c
  2368   0006EC  26D9               	addwf	fsr2l,f,c
  2369   0006EE  505F               	movf	(Timer1_Init@_timer+1)^0,w,c
  2370   0006F0  22DA               	addwfc	fsr2h,f,c
  2371   0006F2  CFDE F060          	movff	postinc2,??_Timer1_Init
  2372   0006F6  CFDD F061          	movff	postdec2,??_Timer1_Init+1
  2373   0006FA  C061  F060         	movff	??_Timer1_Init+1,??_Timer1_Init
  2374   0006FE  6A61               	clrf	(??_Timer1_Init+1)^0,c
  2375   000700  5060               	movf	??_Timer1_Init^0,w,c
  2376   000702  6ECF               	movwf	207,c	;volatile
  2377   000704                     
  2378                           ;MCAL_Layer/TIMER1/hal_timer1.c: 41:             TMR1L=(uint8)(_timer->preloaded_value);
  2379   000704  EE20 F002          	lfsr	2,2
  2380   000708  505E               	movf	Timer1_Init@_timer^0,w,c
  2381   00070A  26D9               	addwf	fsr2l,f,c
  2382   00070C  505F               	movf	(Timer1_Init@_timer+1)^0,w,c
  2383   00070E  22DA               	addwfc	fsr2h,f,c
  2384   000710  50DF               	movf	indf2,w,c
  2385   000712  6ECE               	movwf	206,c	;volatile
  2386   000714                     
  2387                           ;MCAL_Layer/TIMER1/hal_timer1.c: 42:             preload_timer1=_timer->preloaded_value;
  2388   000714  EE20 F002          	lfsr	2,2
  2389   000718  505E               	movf	Timer1_Init@_timer^0,w,c
  2390   00071A  26D9               	addwf	fsr2l,f,c
  2391   00071C  505F               	movf	(Timer1_Init@_timer+1)^0,w,c
  2392   00071E  22DA               	addwfc	fsr2h,f,c
  2393   000720  CFDE F03D          	movff	postinc2,_preload_timer1
  2394   000724  CFDD F03E          	movff	postdec2,_preload_timer1+1
  2395   000728                     
  2396                           ;MCAL_Layer/TIMER1/hal_timer1.c: 45:        (PIE1bits.TMR1IE=1);
  2397   000728  809D               	bsf	157,0,c	;volatile
  2398   00072A                     
  2399                           ;MCAL_Layer/TIMER1/hal_timer1.c: 46:        (PIR1bits.TMR1IF=0);
  2400   00072A  909E               	bcf	158,0,c	;volatile
  2401   00072C                     
  2402                           ;MCAL_Layer/TIMER1/hal_timer1.c: 59:             (INTCONbits.GIE=1);
  2403   00072C  8EF2               	bsf	242,7,c	;volatile
  2404   00072E                     
  2405                           ;MCAL_Layer/TIMER1/hal_timer1.c: 60:             (INTCONbits.PEIE=1);
  2406   00072E  8CF2               	bsf	242,6,c	;volatile
  2407   000730                     
  2408                           ;MCAL_Layer/TIMER1/hal_timer1.c: 62:            TIMER1_interruptHandler =_timer->TIMER1_
      +                          HandlerInterrupt;
  2409   000730  C05E  FFD9         	movff	Timer1_Init@_timer,fsr2l
  2410   000734  C05F  FFDA         	movff	Timer1_Init@_timer+1,fsr2h
  2411   000738  CFDE F03F          	movff	postinc2,_TIMER1_interruptHandler
  2412   00073C  CFDD F040          	movff	postdec2,_TIMER1_interruptHandler+1
  2413   000740                     
  2414                           ;MCAL_Layer/TIMER1/hal_timer1.c: 65:             (T1CONbits.TMR1ON=1);
  2415   000740  80CD               	bsf	205,0,c	;volatile
  2416   000742                     l433:
  2417   000742  0012               	return		;funcret
  2418   000744                     __end_of_Timer1_Init:
  2419                           	callstack 0
  2420                           
  2421 ;; *************** function _timer1_select_reg_mode *****************
  2422 ;; Defined at:
  2423 ;;		line 159 in file "MCAL_Layer/TIMER1/hal_timer1.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;  _timer          2    2[COMRAM] PTR const struct .
  2426 ;;		 -> Timer1_Obj(5), 
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;		None
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      void 
  2431 ;; Registers used:
  2432 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2438 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2441 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2442 ;;Total ram usage:        2 bytes
  2443 ;; Hardware stack levels used: 1
  2444 ;; Hardware stack levels required when called: 3
  2445 ;; This function calls:
  2446 ;;		Nothing
  2447 ;; This function is called by:
  2448 ;;		_Timer1_Init
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           	psect	text13
  2453   000AD6                     __ptext13:
  2454                           	callstack 0
  2455   000AD6                     _timer1_select_reg_mode:
  2456                           	callstack 26
  2457   000AD6                     
  2458                           ;MCAL_Layer/TIMER1/hal_timer1.c: 160:     if (0==_timer->timer1_mode_wr_reg){
  2459   000AD6  EE20 F004          	lfsr	2,4
  2460   000ADA  505C               	movf	timer1_select_reg_mode@_timer^0,w,c
  2461   000ADC  26D9               	addwf	fsr2l,f,c
  2462   000ADE  505D               	movf	(timer1_select_reg_mode@_timer+1)^0,w,c
  2463   000AE0  22DA               	addwfc	fsr2h,f,c
  2464   000AE2  BADF               	btfsc	indf2,5,c
  2465   000AE4  EF76  F005         	goto	u1221
  2466   000AE8  EF78  F005         	goto	u1220
  2467   000AEC                     u1221:
  2468   000AEC  EF7B  F005         	goto	l2211
  2469   000AF0                     u1220:
  2470   000AF0                     
  2471                           ;MCAL_Layer/TIMER1/hal_timer1.c: 161:         (T1CONbits.RD16=0);
  2472   000AF0  9ECD               	bcf	205,7,c	;volatile
  2473                           
  2474                           ;MCAL_Layer/TIMER1/hal_timer1.c: 162:     }
  2475   000AF2  EF89  F005         	goto	l475
  2476   000AF6                     l2211:
  2477   000AF6  EE20 F004          	lfsr	2,4
  2478   000AFA  505C               	movf	timer1_select_reg_mode@_timer^0,w,c
  2479   000AFC  26D9               	addwf	fsr2l,f,c
  2480   000AFE  505D               	movf	(timer1_select_reg_mode@_timer+1)^0,w,c
  2481   000B00  22DA               	addwfc	fsr2h,f,c
  2482   000B02  AADF               	btfss	indf2,5,c
  2483   000B04  EF86  F005         	goto	u1231
  2484   000B08  EF88  F005         	goto	u1230
  2485   000B0C                     u1231:
  2486   000B0C  EF89  F005         	goto	l475
  2487   000B10                     u1230:
  2488   000B10                     
  2489                           ;MCAL_Layer/TIMER1/hal_timer1.c: 164:         (T1CONbits.RD16=1);
  2490   000B10  8ECD               	bsf	205,7,c	;volatile
  2491   000B12                     l475:
  2492   000B12  0012               	return		;funcret
  2493   000B14                     __end_of_timer1_select_reg_mode:
  2494                           	callstack 0
  2495                           
  2496 ;; *************** function _timer1_select_mode_timer_or_counter *****************
  2497 ;; Defined at:
  2498 ;;		line 133 in file "MCAL_Layer/TIMER1/hal_timer1.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;  _timer          2    2[COMRAM] PTR const struct .
  2501 ;;		 -> Timer1_Obj(5), 
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;		None
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  1    wreg      void 
  2506 ;; Registers used:
  2507 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2513 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2517 ;;Total ram usage:        2 bytes
  2518 ;; Hardware stack levels used: 1
  2519 ;; Hardware stack levels required when called: 3
  2520 ;; This function calls:
  2521 ;;		Nothing
  2522 ;; This function is called by:
  2523 ;;		_Timer1_Init
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527                           	psect	text14
  2528   000930                     __ptext14:
  2529                           	callstack 0
  2530   000930                     _timer1_select_mode_timer_or_counter:
  2531                           	callstack 26
  2532   000930                     
  2533                           ;MCAL_Layer/TIMER1/hal_timer1.c: 134:     if (0==_timer->timer1_mode_timer_or_counter){
  2534   000930  EE20 F004          	lfsr	2,4
  2535   000934  505C               	movf	timer1_select_mode_timer_or_counter@_timer^0,w,c
  2536   000936  26D9               	addwf	fsr2l,f,c
  2537   000938  505D               	movf	(timer1_select_mode_timer_or_counter@_timer+1)^0,w,c
  2538   00093A  22DA               	addwfc	fsr2h,f,c
  2539   00093C  B4DF               	btfsc	indf2,2,c
  2540   00093E  EFA3  F004         	goto	u1161
  2541   000942  EFA5  F004         	goto	u1160
  2542   000946                     u1161:
  2543   000946  EFA8  F004         	goto	l2187
  2544   00094A                     u1160:
  2545   00094A                     
  2546                           ;MCAL_Layer/TIMER1/hal_timer1.c: 135:         (T1CONbits.TMR1CS=0);
  2547   00094A  92CD               	bcf	205,1,c	;volatile
  2548                           
  2549                           ;MCAL_Layer/TIMER1/hal_timer1.c: 136:     }
  2550   00094C  EFD6  F004         	goto	l461
  2551   000950                     l2187:
  2552   000950  EE20 F004          	lfsr	2,4
  2553   000954  505C               	movf	timer1_select_mode_timer_or_counter@_timer^0,w,c
  2554   000956  26D9               	addwf	fsr2l,f,c
  2555   000958  505D               	movf	(timer1_select_mode_timer_or_counter@_timer+1)^0,w,c
  2556   00095A  22DA               	addwfc	fsr2h,f,c
  2557   00095C  A4DF               	btfss	indf2,2,c
  2558   00095E  EFB3  F004         	goto	u1171
  2559   000962  EFB5  F004         	goto	u1170
  2560   000966                     u1171:
  2561   000966  EFD6  F004         	goto	l461
  2562   00096A                     u1170:
  2563   00096A                     
  2564                           ;MCAL_Layer/TIMER1/hal_timer1.c: 138:         (T1CONbits.TMR1CS=1);
  2565   00096A  82CD               	bsf	205,1,c	;volatile
  2566   00096C                     
  2567                           ;MCAL_Layer/TIMER1/hal_timer1.c: 139:         if (0 ==_timer->timer1_counter_mode_sync){
  2568   00096C  EE20 F004          	lfsr	2,4
  2569   000970  505C               	movf	timer1_select_mode_timer_or_counter@_timer^0,w,c
  2570   000972  26D9               	addwf	fsr2l,f,c
  2571   000974  505D               	movf	(timer1_select_mode_timer_or_counter@_timer+1)^0,w,c
  2572   000976  22DA               	addwfc	fsr2h,f,c
  2573   000978  B6DF               	btfsc	indf2,3,c
  2574   00097A  EFC1  F004         	goto	u1181
  2575   00097E  EFC3  F004         	goto	u1180
  2576   000982                     u1181:
  2577   000982  EFC6  F004         	goto	l2195
  2578   000986                     u1180:
  2579   000986                     
  2580                           ;MCAL_Layer/TIMER1/hal_timer1.c: 140:             (T1CONbits.T1SYNC=0);
  2581   000986  94CD               	bcf	205,2,c	;volatile
  2582                           
  2583                           ;MCAL_Layer/TIMER1/hal_timer1.c: 141:         }
  2584   000988  EFD6  F004         	goto	l461
  2585   00098C                     l2195:
  2586   00098C  EE20 F004          	lfsr	2,4
  2587   000990  505C               	movf	timer1_select_mode_timer_or_counter@_timer^0,w,c
  2588   000992  26D9               	addwf	fsr2l,f,c
  2589   000994  505D               	movf	(timer1_select_mode_timer_or_counter@_timer+1)^0,w,c
  2590   000996  22DA               	addwfc	fsr2h,f,c
  2591   000998  A6DF               	btfss	indf2,3,c
  2592   00099A  EFD1  F004         	goto	u1191
  2593   00099E  EFD3  F004         	goto	u1190
  2594   0009A2                     u1191:
  2595   0009A2  EFD6  F004         	goto	l460
  2596   0009A6                     u1190:
  2597   0009A6                     
  2598                           ;MCAL_Layer/TIMER1/hal_timer1.c: 143:             (T1CONbits.T1SYNC=1);
  2599   0009A6  84CD               	bsf	205,2,c	;volatile
  2600                           
  2601                           ;MCAL_Layer/TIMER1/hal_timer1.c: 144:         }
  2602   0009A8  EFD6  F004         	goto	l461
  2603   0009AC                     l460:
  2604   0009AC                     l461:
  2605   0009AC  0012               	return		;funcret
  2606   0009AE                     __end_of_timer1_select_mode_timer_or_counter:
  2607                           	callstack 0
  2608                           
  2609 ;; *************** function _timer1_oscillator_enable *****************
  2610 ;; Defined at:
  2611 ;;		line 149 in file "MCAL_Layer/TIMER1/hal_timer1.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;  _timer          2    2[COMRAM] PTR const struct .
  2614 ;;		 -> Timer1_Obj(5), 
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;		None
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1    wreg      void 
  2619 ;; Registers used:
  2620 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2629 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2630 ;;Total ram usage:        2 bytes
  2631 ;; Hardware stack levels used: 1
  2632 ;; Hardware stack levels required when called: 3
  2633 ;; This function calls:
  2634 ;;		Nothing
  2635 ;; This function is called by:
  2636 ;;		_Timer1_Init
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           	psect	text15
  2641   000B14                     __ptext15:
  2642                           	callstack 0
  2643   000B14                     _timer1_oscillator_enable:
  2644                           	callstack 26
  2645   000B14                     
  2646                           ;MCAL_Layer/TIMER1/hal_timer1.c: 150:     if (1==_timer->timer1_oscillator_enable){
  2647   000B14  EE20 F004          	lfsr	2,4
  2648   000B18  505C               	movf	timer1_oscillator_enable@_timer^0,w,c
  2649   000B1A  26D9               	addwf	fsr2l,f,c
  2650   000B1C  505D               	movf	(timer1_oscillator_enable@_timer+1)^0,w,c
  2651   000B1E  22DA               	addwfc	fsr2h,f,c
  2652   000B20  A8DF               	btfss	indf2,4,c
  2653   000B22  EF95  F005         	goto	u1201
  2654   000B26  EF97  F005         	goto	u1200
  2655   000B2A                     u1201:
  2656   000B2A  EF9A  F005         	goto	l2203
  2657   000B2E                     u1200:
  2658   000B2E                     
  2659                           ;MCAL_Layer/TIMER1/hal_timer1.c: 151:         (T1CONbits.T1OSCEN=1);
  2660   000B2E  86CD               	bsf	205,3,c	;volatile
  2661                           
  2662                           ;MCAL_Layer/TIMER1/hal_timer1.c: 152:     }
  2663   000B30  EFA8  F005         	goto	l468
  2664   000B34                     l2203:
  2665   000B34  EE20 F004          	lfsr	2,4
  2666   000B38  505C               	movf	timer1_oscillator_enable@_timer^0,w,c
  2667   000B3A  26D9               	addwf	fsr2l,f,c
  2668   000B3C  505D               	movf	(timer1_oscillator_enable@_timer+1)^0,w,c
  2669   000B3E  22DA               	addwfc	fsr2h,f,c
  2670   000B40  B8DF               	btfsc	indf2,4,c
  2671   000B42  EFA5  F005         	goto	u1211
  2672   000B46  EFA7  F005         	goto	u1210
  2673   000B4A                     u1211:
  2674   000B4A  EFA8  F005         	goto	l468
  2675   000B4E                     u1210:
  2676   000B4E                     
  2677                           ;MCAL_Layer/TIMER1/hal_timer1.c: 154:         (T1CONbits.T1OSCEN=0);
  2678   000B4E  96CD               	bcf	205,3,c	;volatile
  2679   000B50                     l468:
  2680   000B50  0012               	return		;funcret
  2681   000B52                     __end_of_timer1_oscillator_enable:
  2682                           	callstack 0
  2683                           
  2684 ;; *************** function _Timer1_DeInit *****************
  2685 ;; Defined at:
  2686 ;;		line 77 in file "MCAL_Layer/TIMER1/hal_timer1.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;  _timer          2    2[COMRAM] PTR const struct .
  2689 ;;		 -> Timer1_Obj(5), 
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;  ret             1    0        unsigned char 
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  1    wreg      unsigned char 
  2694 ;; Registers used:
  2695 ;;		wreg, status,2, status,0
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2701 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2704 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2705 ;;Total ram usage:        2 bytes
  2706 ;; Hardware stack levels used: 1
  2707 ;; Hardware stack levels required when called: 3
  2708 ;; This function calls:
  2709 ;;		Nothing
  2710 ;; This function is called by:
  2711 ;;		_main
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           	psect	text16
  2716   000C94                     __ptext16:
  2717                           	callstack 0
  2718   000C94                     _Timer1_DeInit:
  2719                           	callstack 27
  2720   000C94                     
  2721                           ;MCAL_Layer/TIMER1/hal_timer1.c: 79:         if (((void*)0)==_timer){
  2722   000C94  505C               	movf	Timer1_DeInit@_timer^0,w,c
  2723   000C96  105D               	iorwf	(Timer1_DeInit@_timer+1)^0,w,c
  2724   000C98  A4D8               	btfss	status,2,c
  2725   000C9A  EF51  F006         	goto	u1361
  2726   000C9E  EF53  F006         	goto	u1360
  2727   000CA2                     u1361:
  2728   000CA2  EF55  F006         	goto	l436
  2729   000CA6                     u1360:
  2730   000CA6                     
  2731                           ;MCAL_Layer/TIMER1/hal_timer1.c: 81:         }
  2732   000CA6  EF57  F006         	goto	l438
  2733   000CAA                     l436:
  2734                           
  2735                           ;MCAL_Layer/TIMER1/hal_timer1.c: 84:             (T1CONbits.TMR1ON=0);
  2736   000CAA  90CD               	bcf	205,0,c	;volatile
  2737                           
  2738                           ;MCAL_Layer/TIMER1/hal_timer1.c: 86:    (PIE1bits.TMR1IE=0);
  2739   000CAC  909D               	bcf	157,0,c	;volatile
  2740   000CAE                     l438:
  2741   000CAE  0012               	return		;funcret
  2742   000CB0                     __end_of_Timer1_DeInit:
  2743                           	callstack 0
  2744                           
  2745 ;; *************** function _interruptManager *****************
  2746 ;; Defined at:
  2747 ;;		line 18 in file "MCAL_Layer/interrupt/mcal_interrupt_manager.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;		None
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;		None
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  1    wreg      void 
  2754 ;; Registers used:
  2755 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2764 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;Total ram usage:        2 bytes
  2766 ;; Hardware stack levels used: 1
  2767 ;; Hardware stack levels required when called: 2
  2768 ;; This function calls:
  2769 ;;		_TIMER1_ISR
  2770 ;; This function is called by:
  2771 ;;		Interrupt level 2
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775                           	psect	intcode
  2776   000008                     __pintcode:
  2777                           	callstack 0
  2778   000008                     _interruptManager:
  2779                           	callstack 25
  2780                           
  2781                           ;incstack = 0
  2782   000008  826E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2783   00000A  ED1D  F006         	call	int_func,f	;refresh shadow registers
  2784                           
  2785                           	psect	intcode_body
  2786   000C3A                     __pintcode_body:
  2787                           	callstack 25
  2788   000C3A                     int_func:
  2789                           	callstack 25
  2790   000C3A  0006               	pop		; remove dummy address from shadow register refresh
  2791   000C3C  CFFA F05A          	movff	pclath,??_interruptManager
  2792   000C40  CFFB F05B          	movff	pclatu,??_interruptManager+1
  2793   000C44                     
  2794                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 20:     if ((1==PIE1bits.TMR1IE) && (1==
      +                          PIR1bits.TMR1IF)){
  2795   000C44  A09D               	btfss	157,0,c	;volatile
  2796   000C46  EF27  F006         	goto	i2u92_41
  2797   000C4A  EF29  F006         	goto	i2u92_40
  2798   000C4E                     i2u92_41:
  2799   000C4E  EF32  F006         	goto	i2l406
  2800   000C52                     i2u92_40:
  2801   000C52  A09E               	btfss	158,0,c	;volatile
  2802   000C54  EF2E  F006         	goto	i2u93_41
  2803   000C58  EF30  F006         	goto	i2u93_40
  2804   000C5C                     i2u93_41:
  2805   000C5C  EF32  F006         	goto	i2l406
  2806   000C60                     i2u93_40:
  2807   000C60                     
  2808                           ;MCAL_Layer/interrupt/mcal_interrupt_manager.c: 21:         TIMER1_ISR();
  2809   000C60  EC01  F006         	call	_TIMER1_ISR	;wreg free
  2810   000C64                     i2l406:
  2811   000C64  C05B  FFFB         	movff	??_interruptManager+1,pclatu
  2812   000C68  C05A  FFFA         	movff	??_interruptManager,pclath
  2813   000C6C  926E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2814   000C6E  0011               	retfie		f
  2815   000C70                     __end_of_interruptManager:
  2816                           	callstack 0
  2817                           
  2818 ;; *************** function _TIMER1_ISR *****************
  2819 ;; Defined at:
  2820 ;;		line 169 in file "MCAL_Layer/TIMER1/hal_timer1.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;		None
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;		None
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  1    wreg      void 
  2827 ;; Registers used:
  2828 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2838 ;;Total ram usage:        0 bytes
  2839 ;; Hardware stack levels used: 1
  2840 ;; Hardware stack levels required when called: 1
  2841 ;; This function calls:
  2842 ;;		Absolute function
  2843 ;;		_Timer1_Interrupt
  2844 ;; This function is called by:
  2845 ;;		_interruptManager
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           	psect	text18
  2850   000C02                     __ptext18:
  2851                           	callstack 0
  2852   000C02                     _TIMER1_ISR:
  2853                           	callstack 25
  2854   000C02                     
  2855                           ;MCAL_Layer/TIMER1/hal_timer1.c: 171:     (PIR1bits.TMR1IF=0);
  2856   000C02  909E               	bcf	158,0,c	;volatile
  2857   000C04                     
  2858                           ;MCAL_Layer/TIMER1/hal_timer1.c: 172:     TMR1H=(preload_timer1) >>8;
  2859   000C04  503E               	movf	(_preload_timer1+1)^0,w,c
  2860   000C06  6ECF               	movwf	207,c	;volatile
  2861   000C08                     
  2862                           ;MCAL_Layer/TIMER1/hal_timer1.c: 173:     TMR1L=(uint8)(preload_timer1);
  2863   000C08  C03D  FFCE         	movff	_preload_timer1,4046	;volatile
  2864   000C0C                     
  2865                           ;MCAL_Layer/TIMER1/hal_timer1.c: 174:     if (TIMER1_interruptHandler){
  2866   000C0C  503F               	movf	_TIMER1_interruptHandler^0,w,c
  2867   000C0E  1040               	iorwf	(_TIMER1_interruptHandler+1)^0,w,c
  2868   000C10  B4D8               	btfsc	status,2,c
  2869   000C12  EF0D  F006         	goto	i2u43_41
  2870   000C16  EF0F  F006         	goto	i2u43_40
  2871   000C1A                     i2u43_41:
  2872   000C1A  EF1C  F006         	goto	i2l479
  2873   000C1E                     i2u43_40:
  2874   000C1E                     
  2875                           ;MCAL_Layer/TIMER1/hal_timer1.c: 175:         TIMER1_interruptHandler();
  2876   000C1E  D802               	call	i2u44_48
  2877   000C20  EF1C  F006         	goto	i2u44_49
  2878   000C24                     i2u44_48:
  2879   000C24  0005               	push	
  2880   000C26  6EFA               	movwf	pclath,c
  2881   000C28  503F               	movf	_TIMER1_interruptHandler^0,w,c
  2882   000C2A  6EFD               	movwf	tosl,c
  2883   000C2C  5040               	movf	(_TIMER1_interruptHandler+1)^0,w,c
  2884   000C2E  6EFE               	movwf	tosh,c
  2885   000C30  50F8               	movf	tblptru,w,c
  2886   000C32  6EFF               	movwf	tosu,c
  2887   000C34  50FA               	movf	pclath,w,c
  2888   000C36  0012               	return		;indir
  2889   000C38                     i2u44_49:
  2890   000C38                     i2l479:
  2891   000C38  0012               	return		;funcret
  2892   000C3A                     __end_of_TIMER1_ISR:
  2893                           	callstack 0
  2894                           
  2895 ;; *************** function _Timer1_Interrupt *****************
  2896 ;; Defined at:
  2897 ;;		line 124 in file "application.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;		None
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;		None
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      void 
  2904 ;; Registers used:
  2905 ;;		wreg, status,2, status,0
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;Total ram usage:        0 bytes
  2916 ;; Hardware stack levels used: 1
  2917 ;; This function calls:
  2918 ;;		Nothing
  2919 ;; This function is called by:
  2920 ;;		_TIMER1_ISR
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           	psect	text19
  2925   0009AE                     __ptext19:
  2926                           	callstack 0
  2927   0009AE                     _Timer1_Interrupt:
  2928                           	callstack 25
  2929   0009AE                     
  2930                           ;application.c: 125:     TimerOverFlow++;
  2931   0009AE  4A3B               	infsnz	_TimerOverFlow^0,f,c	;volatile
  2932   0009B0  2A3C               	incf	(_TimerOverFlow+1)^0,f,c	;volatile
  2933   0009B2                     
  2934                           ;application.c: 126:         if(TimerOverFlow==10){
  2935   0009B2  0E0A               	movlw	10
  2936   0009B4  183B               	xorwf	_TimerOverFlow^0,w,c	;volatile
  2937   0009B6  103C               	iorwf	(_TimerOverFlow+1)^0,w,c	;volatile
  2938   0009B8  A4D8               	btfss	status,2,c
  2939   0009BA  EFE1  F004         	goto	i2u25_41
  2940   0009BE  EFE3  F004         	goto	i2u25_40
  2941   0009C2                     i2u25_41:
  2942   0009C2  EFE8  F004         	goto	i2l1349
  2943   0009C6                     i2u25_40:
  2944   0009C6                     
  2945                           ;application.c: 127:             Seconds++;
  2946   0009C6  2A59               	incf	_Seconds^0,f,c	;volatile
  2947   0009C8                     
  2948                           ;application.c: 128:             TimerOverFlow=0;
  2949   0009C8  0E00               	movlw	0
  2950   0009CA  6E3C               	movwf	(_TimerOverFlow+1)^0,c	;volatile
  2951   0009CC  0E00               	movlw	0
  2952   0009CE  6E3B               	movwf	_TimerOverFlow^0,c	;volatile
  2953   0009D0                     i2l1349:
  2954                           
  2955                           ;application.c: 130:         if(Seconds==60){
  2956   0009D0  0E3C               	movlw	60
  2957   0009D2  1859               	xorwf	_Seconds^0,w,c	;volatile
  2958   0009D4  A4D8               	btfss	status,2,c
  2959   0009D6  EFEF  F004         	goto	i2u26_41
  2960   0009DA  EFF1  F004         	goto	i2u26_40
  2961   0009DE                     i2u26_41:
  2962   0009DE  EFF4  F004         	goto	i2l1355
  2963   0009E2                     i2u26_40:
  2964   0009E2                     
  2965                           ;application.c: 131:             Minutes++;
  2966   0009E2  2A58               	incf	_Minutes^0,f,c	;volatile
  2967   0009E4                     
  2968                           ;application.c: 132:             Seconds=0;
  2969   0009E4  0E00               	movlw	0
  2970   0009E6  6E59               	movwf	_Seconds^0,c	;volatile
  2971   0009E8                     i2l1355:
  2972                           
  2973                           ;application.c: 134:         if(Minutes==60){
  2974   0009E8  0E3C               	movlw	60
  2975   0009EA  1858               	xorwf	_Minutes^0,w,c	;volatile
  2976   0009EC  A4D8               	btfss	status,2,c
  2977   0009EE  EFFB  F004         	goto	i2u27_41
  2978   0009F2  EFFD  F004         	goto	i2u27_40
  2979   0009F6                     i2u27_41:
  2980   0009F6  EF00  F005         	goto	i2l1361
  2981   0009FA                     i2u27_40:
  2982   0009FA                     
  2983                           ;application.c: 135:             Hours++;
  2984   0009FA  2A57               	incf	_Hours^0,f,c	;volatile
  2985   0009FC                     
  2986                           ;application.c: 136:             Minutes=0;
  2987   0009FC  0E00               	movlw	0
  2988   0009FE  6E58               	movwf	_Minutes^0,c	;volatile
  2989   000A00                     i2l1361:
  2990                           
  2991                           ;application.c: 138:         if(Hours==24){
  2992   000A00  0E18               	movlw	24
  2993   000A02  1857               	xorwf	_Hours^0,w,c	;volatile
  2994   000A04  A4D8               	btfss	status,2,c
  2995   000A06  EF07  F005         	goto	i2u28_41
  2996   000A0A  EF09  F005         	goto	i2u28_40
  2997   000A0E                     i2u28_41:
  2998   000A0E  EF0B  F005         	goto	i2l557
  2999   000A12                     i2u28_40:
  3000   000A12                     
  3001                           ;application.c: 139:             Hours=0;
  3002   000A12  0E00               	movlw	0
  3003   000A14  6E57               	movwf	_Hours^0,c	;volatile
  3004   000A16                     i2l557:
  3005   000A16  0012               	return		;funcret
  3006   000A18                     __end_of_Timer1_Interrupt:
  3007                           	callstack 0
  3008   000000                     
  3009                           	psect	text20
  3010   000000                     __ptext20:
  3011                           	callstack 0
  3012   000000                     
  3013                           	psect	rparam
  3014   000000                     
  3015                           	psect	temp
  3016   00006E                     btemp:
  3017                           	callstack 0
  3018   00006E                     	ds	1
  3019   000000                     int$flags	set	btemp
  3020   000000                     wtemp8	set	btemp+1
  3021   000000                     ttemp5	set	btemp+1
  3022   000000                     ttemp6	set	btemp+4
  3023   000000                     ttemp7	set	btemp+8
  3024                           
  3025                           	psect	idloc
  3026                           
  3027                           ;Config register IDLOC0 @ 0x200000
  3028                           ;	unspecified, using default values
  3029   200000                     	org	2097152
  3030   200000  FF                 	db	255
  3031                           
  3032                           ;Config register IDLOC1 @ 0x200001
  3033                           ;	unspecified, using default values
  3034   200001                     	org	2097153
  3035   200001  FF                 	db	255
  3036                           
  3037                           ;Config register IDLOC2 @ 0x200002
  3038                           ;	unspecified, using default values
  3039   200002                     	org	2097154
  3040   200002  FF                 	db	255
  3041                           
  3042                           ;Config register IDLOC3 @ 0x200003
  3043                           ;	unspecified, using default values
  3044   200003                     	org	2097155
  3045   200003  FF                 	db	255
  3046                           
  3047                           ;Config register IDLOC4 @ 0x200004
  3048                           ;	unspecified, using default values
  3049   200004                     	org	2097156
  3050   200004  FF                 	db	255
  3051                           
  3052                           ;Config register IDLOC5 @ 0x200005
  3053                           ;	unspecified, using default values
  3054   200005                     	org	2097157
  3055   200005  FF                 	db	255
  3056                           
  3057                           ;Config register IDLOC6 @ 0x200006
  3058                           ;	unspecified, using default values
  3059   200006                     	org	2097158
  3060   200006  FF                 	db	255
  3061                           
  3062                           ;Config register IDLOC7 @ 0x200007
  3063                           ;	unspecified, using default values
  3064   200007                     	org	2097159
  3065   200007  FF                 	db	255
  3066                           
  3067                           	psect	config
  3068                           
  3069                           ; Padding undefined space
  3070   300000                     	org	3145728
  3071   300000  FF                 	db	255
  3072                           
  3073                           ;Config register CONFIG1H @ 0x300001
  3074                           ;	Oscillator Selection bits
  3075                           ;	OSC = HS, HS oscillator
  3076                           ;	Fail-Safe Clock Monitor Enable bit
  3077                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3078                           ;	Internal/External Oscillator Switchover bit
  3079                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3080   300001                     	org	3145729
  3081   300001  02                 	db	2
  3082                           
  3083                           ;Config register CONFIG2L @ 0x300002
  3084                           ;	Power-up Timer Enable bit
  3085                           ;	PWRT = OFF, PWRT disabled
  3086                           ;	Brown-out Reset Enable bits
  3087                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3088                           ;	Brown Out Reset Voltage bits
  3089                           ;	BORV = 1, 
  3090   300002                     	org	3145730
  3091   300002  09                 	db	9
  3092                           
  3093                           ;Config register CONFIG2H @ 0x300003
  3094                           ;	Watchdog Timer Enable bit
  3095                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3096                           ;	Watchdog Timer Postscale Select bits
  3097                           ;	WDTPS = 512, 1:512
  3098   300003                     	org	3145731
  3099   300003  12                 	db	18
  3100                           
  3101                           ; Padding undefined space
  3102   300004                     	org	3145732
  3103   300004  FF                 	db	255
  3104                           
  3105                           ;Config register CONFIG3H @ 0x300005
  3106                           ;	CCP2 MUX bit
  3107                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3108                           ;	PORTB A/D Enable bit
  3109                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3110                           ;	Low-Power Timer1 Oscillator Enable bit
  3111                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3112                           ;	MCLR Pin Enable bit
  3113                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3114   300005                     	org	3145733
  3115   300005  81                 	db	129
  3116                           
  3117                           ;Config register CONFIG4L @ 0x300006
  3118                           ;	Stack Full/Underflow Reset Enable bit
  3119                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3120                           ;	Single-Supply ICSP Enable bit
  3121                           ;	LVP = OFF, Single-Supply ICSP disabled
  3122                           ;	Extended Instruction Set Enable bit
  3123                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3124                           ;	Background Debugger Enable bit
  3125                           ;	DEBUG = 0x1, unprogrammed default
  3126   300006                     	org	3145734
  3127   300006  81                 	db	129
  3128                           
  3129                           ; Padding undefined space
  3130   300007                     	org	3145735
  3131   300007  FF                 	db	255
  3132                           
  3133                           ;Config register CONFIG5L @ 0x300008
  3134                           ;	Code Protection bit
  3135                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3136                           ;	Code Protection bit
  3137                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3138                           ;	Code Protection bit
  3139                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3140                           ;	Code Protection bit
  3141                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3142   300008                     	org	3145736
  3143   300008  0F                 	db	15
  3144                           
  3145                           ;Config register CONFIG5H @ 0x300009
  3146                           ;	Boot Block Code Protection bit
  3147                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3148                           ;	Data EEPROM Code Protection bit
  3149                           ;	CPD = OFF, Data EEPROM not code-protected
  3150   300009                     	org	3145737
  3151   300009  C0                 	db	192
  3152                           
  3153                           ;Config register CONFIG6L @ 0x30000A
  3154                           ;	Write Protection bit
  3155                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3156                           ;	Write Protection bit
  3157                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3158                           ;	Write Protection bit
  3159                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3160                           ;	Write Protection bit
  3161                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3162   30000A                     	org	3145738
  3163   30000A  0F                 	db	15
  3164                           
  3165                           ;Config register CONFIG6H @ 0x30000B
  3166                           ;	Configuration Register Write Protection bit
  3167                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3168                           ;	Boot Block Write Protection bit
  3169                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3170                           ;	Data EEPROM Write Protection bit
  3171                           ;	WRTD = OFF, Data EEPROM not write-protected
  3172   30000B                     	org	3145739
  3173   30000B  E0                 	db	224
  3174                           
  3175                           ;Config register CONFIG7L @ 0x30000C
  3176                           ;	Table Read Protection bit
  3177                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3178                           ;	Table Read Protection bit
  3179                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3180                           ;	Table Read Protection bit
  3181                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3182                           ;	Table Read Protection bit
  3183                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3184   30000C                     	org	3145740
  3185   30000C  0F                 	db	15
  3186                           
  3187                           ;Config register CONFIG7H @ 0x30000D
  3188                           ;	Boot Block Table Read Protection bit
  3189                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3190   30000D                     	org	3145741
  3191   30000D  40                 	db	64
  3192                           tosu	equ	0xFFF
  3193                           tosh	equ	0xFFE
  3194                           tosl	equ	0xFFD
  3195                           stkptr	equ	0xFFC
  3196                           pclatu	equ	0xFFB
  3197                           pclath	equ	0xFFA
  3198                           pcl	equ	0xFF9
  3199                           tblptru	equ	0xFF8
  3200                           tblptrh	equ	0xFF7
  3201                           tblptrl	equ	0xFF6
  3202                           tablat	equ	0xFF5
  3203                           prodh	equ	0xFF4
  3204                           prodl	equ	0xFF3
  3205                           indf0	equ	0xFEF
  3206                           postinc0	equ	0xFEE
  3207                           postdec0	equ	0xFED
  3208                           preinc0	equ	0xFEC
  3209                           plusw0	equ	0xFEB
  3210                           fsr0h	equ	0xFEA
  3211                           fsr0l	equ	0xFE9
  3212                           wreg	equ	0xFE8
  3213                           indf1	equ	0xFE7
  3214                           postinc1	equ	0xFE6
  3215                           postdec1	equ	0xFE5
  3216                           preinc1	equ	0xFE4
  3217                           plusw1	equ	0xFE3
  3218                           fsr1h	equ	0xFE2
  3219                           fsr1l	equ	0xFE1
  3220                           bsr	equ	0xFE0
  3221                           indf2	equ	0xFDF
  3222                           postinc2	equ	0xFDE
  3223                           postdec2	equ	0xFDD
  3224                           preinc2	equ	0xFDC
  3225                           plusw2	equ	0xFDB
  3226                           fsr2h	equ	0xFDA
  3227                           fsr2l	equ	0xFD9
  3228                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        58
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     20     109
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    Timer1_Obj.TIMER1_HandlerInterrupt	PTR FTN()void  size(2) Largest target is 1
		 -> Timer1_Interrupt(), 

    timer1_select_reg_mode@_timer.TIMER1_HandlerInterrupt	PTR FTN()void  size(2) Largest target is 1
		 -> Timer1_Interrupt(), 

    timer1_select_reg_mode@_timer	PTR const struct . size(2) Largest target is 5
		 -> Timer1_Obj(COMRAM[5]), 

    timer1_oscillator_enable@_timer.TIMER1_HandlerInterrupt	PTR FTN()void  size(2) Largest target is 1
		 -> Timer1_Interrupt(), 

    timer1_oscillator_enable@_timer	PTR const struct . size(2) Largest target is 5
		 -> Timer1_Obj(COMRAM[5]), 

    timer1_select_mode_timer_or_counter@_timer.TIMER1_HandlerInterrupt	PTR FTN()void  size(2) Largest target is 1
		 -> Timer1_Interrupt(), 

    timer1_select_mode_timer_or_counter@_timer	PTR const struct . size(2) Largest target is 5
		 -> Timer1_Obj(COMRAM[5]), 

    Timer1_DeInit@_timer	PTR const struct . size(2) Largest target is 5
		 -> Timer1_Obj(COMRAM[5]), 

    TIMER1_interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer1_Interrupt(), Absolute function(), 

    S681$TIMER1_HandlerInterrupt	PTR FTN()void  size(2) Largest target is 1
		 -> Timer1_Interrupt(), 

    Timer1_Init@_timer.TIMER1_HandlerInterrupt	PTR FTN()void  size(2) Largest target is 1
		 -> Timer1_Interrupt(), 

    Timer1_Init@_timer	PTR const struct . size(2) Largest target is 5
		 -> Timer1_Obj(COMRAM[5]), 

    INTx_SetInterruptHandler@obj_t.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INtx_clear_flag@obj_t.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INtx_pin_init@obj_t.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INtx_edge_init@obj_t.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INtx_disable@obj_t.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S249$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    interrupt_INtx_enable@obj_t.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S314$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    external_interrupt_RBx_Init@obj_t.EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    S314$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    external_interrupt_RBx_Init@obj_t.EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    RB7_interruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB7_interruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_interruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_interruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_interruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_interruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_interruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_interruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    gpio_Pin_Intialize@pin_config	PTR const struct . size(2) Largest target is 5
		 -> Enable6(COMRAM[1]), Enable5(COMRAM[1]), Enable4(COMRAM[1]), Enable3(COMRAM[1]), 
		 -> Enable2(COMRAM[1]), Enable1(COMRAM[1]), Seg_Obj.segment_pin(COMRAM[4]), Seg_Obj(COMRAM[5]), 

    gpio_Pin_Read_Logic@logic	PTR enum E2965 size(2) Largest target is 1
		 -> button_read_status@button_logic(COMRAM[1]), 

    gpio_Pin_Read_Logic@pin_config	PTR const struct . size(2) Largest target is 3
		 -> Btn3(COMRAM[3]), Btn2(COMRAM[3]), Btn1(COMRAM[3]), 

    gpio_Pin_Write_Logic@pin_config	PTR const struct . size(2) Largest target is 5
		 -> Enable6(COMRAM[1]), Enable5(COMRAM[1]), Enable4(COMRAM[1]), Enable3(COMRAM[1]), 
		 -> Enable2(COMRAM[1]), Enable1(COMRAM[1]), Seg_Obj.segment_pin(COMRAM[4]), Seg_Obj(COMRAM[5]), 

    gpio_Pin_Derction_Intialize@pin_config	PTR const struct . size(2) Largest target is 5
		 -> Enable6(COMRAM[1]), Enable5(COMRAM[1]), Enable4(COMRAM[1]), Enable3(COMRAM[1]), 
		 -> Enable2(COMRAM[1]), Enable1(COMRAM[1]), Btn3(COMRAM[3]), Btn2(COMRAM[3]), 
		 -> Btn1(COMRAM[3]), Seg_Obj.segment_pin(COMRAM[4]), Seg_Obj(COMRAM[5]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRhll[1]), TRISD(BITBIGSFRhll[1]), TRISC(BITBIGSFRhll[1]), TRISB(BITBIGSFRhll[1]), 
		 -> TRISA(BITBIGSFRll[1]), 

    button_read_status@btn_status	PTR enum E3027 size(2) Largest target is 1
		 -> Button3Status(COMRAM[1]), Button2Status(COMRAM[1]), Button1Status(COMRAM[1]), 

    button_read_status@btn	PTR const struct . size(2) Largest target is 3
		 -> Btn3(COMRAM[3]), Btn2(COMRAM[3]), Btn1(COMRAM[3]), 

    button_inialize@btn	PTR const struct . size(2) Largest target is 3
		 -> Btn3(COMRAM[3]), Btn2(COMRAM[3]), Btn1(COMRAM[3]), 

    seven_segment_write_number@seg	PTR const struct . size(2) Largest target is 5
		 -> Seg_Obj(COMRAM[5]), 

    seven_segment_initialize@seg	PTR const struct . size(2) Largest target is 5
		 -> Seg_Obj(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_seven_segment_initialize
    _seven_segment_write_number->_gpio_Pin_Write_Logic
    _seven_segment_initialize->_gpio_Pin_Intialize
    _gpio_Pin_Intialize->_gpio_Pin_Write_Logic
    _button_read_status->_gpio_Pin_Read_Logic
    _button_inialize->_gpio_Pin_Derction_Intialize
    _Timer1_Init->_timer1_oscillator_enable
    _Timer1_Init->_timer1_select_mode_timer_or_counter
    _Timer1_Init->_timer1_select_reg_mode

Critical Paths under _interruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   11533
                                             19 COMRAM     1     1      0
                      _Timer1_DeInit
                        _Timer1_Init
                            ___awdiv
                            ___awmod
                    _button_inialize
                 _button_read_status
                 _gpio_Pin_Intialize
              _gpio_Port_Write_Logic
           _seven_segment_initialize
         _seven_segment_write_number
 ---------------------------------------------------------------------------------
 (1) _seven_segment_write_number                           4     1      3    2082
                                             12 COMRAM     4     1      3
                            ___awdiv (ARG)
                            ___awmod (ARG)
               _gpio_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (1) _seven_segment_initialize                             3     1      2    2515
                                             16 COMRAM     3     1      2
                 _gpio_Pin_Intialize
 ---------------------------------------------------------------------------------
 (2) _gpio_Pin_Intialize                                   4     2      2    2317
                                             12 COMRAM     4     2      2
        _gpio_Pin_Derction_Intialize
               _gpio_Pin_Write_Logic
 ---------------------------------------------------------------------------------
 (2) _gpio_Pin_Write_Logic                                10     7      3     938
                                              2 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (1) _gpio_Port_Write_Logic                                5     4      1     530
                                              2 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _button_read_status                                   7     3      4    1023
                                             11 COMRAM     6     2      4
                _gpio_Pin_Read_Logic
 ---------------------------------------------------------------------------------
 (2) _gpio_Pin_Read_Logic                                 10     6      4     292
                                              2 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (1) _button_inialize                                      3     1      2     688
                                             11 COMRAM     2     0      2
        _gpio_Pin_Derction_Intialize
 ---------------------------------------------------------------------------------
 (3) _gpio_Pin_Derction_Intialize                          9     7      2     407
                                              2 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     752
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     756
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          5     3      2     763
                                              4 COMRAM     4     2      2
           _timer1_oscillator_enable
_timer1_select_mode_timer_or_counter
             _timer1_select_reg_mode
 ---------------------------------------------------------------------------------
 (2) _timer1_select_reg_mode                               2     0      2     120
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _timer1_select_mode_timer_or_counter                  2     0      2     164
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _timer1_oscillator_enable                             2     0      2     120
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Timer1_DeInit                                        3     1      2     107
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interruptManager                                     2     2      0       0
                                              0 COMRAM     2     2      0
                         _TIMER1_ISR
 ---------------------------------------------------------------------------------
 (5) _TIMER1_ISR                                           0     0      0       0
                   Absolute function *
                   _Timer1_Interrupt *
 ---------------------------------------------------------------------------------
 (6) _Timer1_Interrupt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer1_DeInit
   _Timer1_Init
     _timer1_oscillator_enable
     _timer1_select_mode_timer_or_counter
     _timer1_select_reg_mode
   ___awdiv
   ___awmod
   _button_inialize
     _gpio_Pin_Derction_Intialize
   _button_read_status
     _gpio_Pin_Read_Logic
   _gpio_Pin_Intialize
     _gpio_Pin_Derction_Intialize
     _gpio_Pin_Write_Logic
   _gpio_Port_Write_Logic
   _seven_segment_initialize
     _gpio_Pin_Intialize
   _seven_segment_write_number
     ___awdiv (ARG)
     ___awmod (ARG)
     _gpio_Pin_Write_Logic (ARG)

 _interruptManager (ROOT)
   _TIMER1_ISR
     Absolute function(Fake) *
     _Timer1_Interrupt *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      45        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     14      6D       1       86.5%
BITBIGSFRhlhhh      22      0       0      37        0.0%
BITBIGSFRhlhlll     15      0       0      40        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRhlhllh      C      0       0      39        0.0%
BITBIGSFRhlhlh       B      0       0      38        0.0%
BITBIGSFRhll         6      0       0      41        0.0%
BITBIGSFRlh          4      0       0      42        0.0%
BITBIGSFRll          4      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6D      44        0.0%
DATA                 0      0      6D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jun 08 07:15:00 2023

                                          l9 0AD4                                           l40 068A  
                                         l16 092E                                           l25 0C92  
                                         l35 068A                                           l88 03DC  
                               ___awdiv@sign 0061                                          l112 08A0  
                                        l105 0508                                          l124 0A78  
                                        l141 0B8C                                          l431 06A2  
                                        l433 0742                                          l436 0CAA  
                                        l460 09AC                                          l461 09AC  
                                        l438 0CAE                                          l475 0B12  
                                        l468 0B50                                          l804 07F2  
                                        l791 05CC                                 ___awmod@sign 0061  
                                        prod 000FF3                                          tosl 000FFD  
                                        wreg 000FE8                  ?_seven_segment_write_number 0066  
                                       l2111 03F4                                         l2201 0B2E  
                                       l2121 04DC                                         l2113 0416  
                                       l2203 0B34                                         l2211 0AF6  
                                       l2131 029A                                         l2123 0506  
                                       l2115 041E                                         l2107 03DE  
                                       l2205 0B4E                                         l2213 0B10  
                                       l2301 0714                                         l2141 033C  
                                       l2133 029E                                         l2117 0480  
                                       l2109 03E2                                         l2221 0A90  
                                       l2207 0AD6                                         l2311 0730  
                                       l2303 0728                                         l2135 02B0  
                                       l2215 0A7A                                         l2231 08C4  
                                       l2321 0C94                                         l2209 0AF0  
                                       l2313 0740                                         l2305 072A  
                                       l2401 07D2                                         l2145 0398  
                                       l2137 02D2                                         l2241 0C82  
                                       l2161 0A4C                                         l2217 0A7A  
                                       l2233 08C8                                         l2225 08A2  
                                       l2323 0CA6                                         l2315 0742  
                                       l2307 072C                                         l2331 050E  
                                       l2403 07E2                                         l2139 02DA  
                                       l2147 03DA                                         l2243 0C86  
                                       l2171 07F4                                         l2251 05E4  
                                       l2163 0A4C                                         l2155 0A18  
                                       l2219 0A8C                                         l2227 08A2  
                                       l2325 0CAE                                         l2309 072E  
                                       l2341 053E                                         l2333 051C  
                                       l2405 07EA                                         l2237 0C70  
                                       l2173 0806                                         l2261 063A  
                                       l2253 05F6                                         l2165 0A58  
                                       l2157 0A18                                         l2229 08B4  
                                       l2501 005A                                         l2319 0C94  
                                       l2191 096C                                         l2183 0930  
                                       l2351 056C                                         l2343 0542  
                                       l2335 0524                                         l2239 0C70  
                                       l2175 0818                                         l2263 064A  
                                       l2255 05FA                                         l2247 05CE  
                                       l2159 0A2A                                         l2511 0096  
                                       l2503 0066                                         l2193 0986  
                                       l2185 094A                                         l2361 05A0  
                                       l2353 057A                                         l2345 054A  
                                       l2337 0528                                         l2329 050A  
                                       l2177 083A                                         l2169 07F4  
                                       l2265 065A                                         l2257 060E  
                                       l2249 05D2                                         l2273 0B54  
                                       l2521 00DA                                         l2513 009A  
                                       l2505 0072                                         l2195 098C  
                                       l2187 0950                                         l2291 06C2  
                                       l2283 068C                                         l2363 05A6  
                                       l2355 0580                                         l2347 055C  
                                       l2339 0536                                         l2179 083E  
                                       l2267 0676                                         l2259 062A  
                                       l2275 0B54                                         l2531 0122  
                                       l2523 00EA                                         l2515 009E  
                                       l2507 007E                                         l2197 09A6  
                                       l2189 096A                                         l2293 06CE  
                                       l2285 068C                                         l2357 0596  
                                       l2349 0564                                         l2365 05AC  
                                       l2381 0762                                         l2373 0744  
                                       l2277 0B64                                         l2541 017A  
                                       l2533 0136                                         l2525 00F6  
                                       l2517 00B2                                         l2509 008A  
                                       l2199 0B14                                         l2295 06DA  
                                       l2287 069E                                         l2367 05BC  
                                       l2359 059E                                         l2391 079A  
                                       l2383 0770                                         l2375 0748  
                                       l2279 0B68                                         l2551 01E4  
                                       l2543 019C                                         l2535 0140  
                                       l2527 0106                                         l2519 00C6  
                                       l2297 06E6                                         l2289 06A4  
                                       l2369 05C4                                         l2393 07A8  
                                       l2385 0778                                         l2377 0756  
                                       l2561 024A                                         l2553 01EE  
                                       l2545 01AA                                         l2537 0162  
                                       l2529 0112                                         l2299 0704  
                                       l2395 07BE                                         l2387 078A  
                                       l2379 075E                                         l2563 0258  
                                       l2555 0210                                         l2547 01B4  
                                       l2539 0170                                         l2491 001E  
                                       l2397 07C6                                         l2389 0792  
                                       l2565 0262                                         l2557 021E  
                                       l2549 01D6                                         l2493 002A  
                                       l2399 07CC                                         l2567 0284  
                                       l2559 0228                                         l2495 0036  
                                       l2577 04F0                                         l2497 0042  
                                       l2489 0012                                         l2579 03C4  
                                       l2499 004E                            ??_button_inialize 0067  
                                       u1000 03F4                                         u1001 03F0  
                                       u1010 0416                                         u1011 0412  
                                       u1100 0A2A                                         u1101 0A26  
                                       u1110 0A4C                                         u1111 0A48  
                                       u1200 0B2E                                         u1040 02B0  
                                       u1120 0806                                         u1024 043E  
                                       u1201 0B2A                                         u1041 02AC  
                                       u1121 0802                                         u1025 043A  
                                       u1210 0B4E                                         u1050 02D2  
                                       u1130 0818                                         u1034 04A0  
                                       u1211 0B4A                                         u1051 02CE  
                                       u1131 0814                                         u1035 049C  
                                       u1220 0AF0                                         u1140 083A  
                                       u1300 062A                                         u1221 0AEC  
                                       u1141 0836                                         u1301 0626  
                                       u1230 0B10                                         u1310 063A  
                                       u1231 0B0C                                         u1311 0636  
                                       u1160 094A                                         u1400 057A  
                                       u1080 03B0                                         u1064 02FA  
                                       u1320 0676                                         u1240 0A8C  
                                       u1161 0946                                         u1401 0576  
                                       u1081 03AA                                         u1065 02F6  
                                       u1321 0672                                         u1241 0A88  
                                       u1170 096A                                         u1410 0596  
                                       u1090 03B2                                         u1074 035C  
                                       u1154 088C                                         u1330 0686  
                                       u1250 08B4                    _RB6_interruptHandler_HIGH 0045  
                                       u1171 0966                                         u1411 0592  
                                       u1075 0358                                         u1155 0888  
                                       u1331 0682                                         u1251 08B0  
                                       u1180 0986                                         u1420 05BC  
                                       u1340 0B64                                         u1260 08C4  
                                       u1181 0982                                         u1421 05B8  
                                       u1341 0B60                                         u1261 08C0  
                                       _LATA 000F89                                         u1190 09A6  
                                       u1350 069E                                         u1430 0756  
                                       u1270 0C82                                         _LATB 000F8A  
                                       u1191 09A2                                         u1351 069A  
                                       u1431 0752                                         u1271 0C7E  
                                       _LATC 000F8B                                         u1360 0CA6  
                                       u1440 0770                                         u1280 05E4  
                                       u1520 00EA                                         _LATD 000F8C  
                                       u1361 0CA2                                         u1441 076C  
                                       u1281 05E0                                         u1521 00E6  
                                       _LATE 000F8D                                         u1370 051C  
                                       u1450 078A                                         u1290 05F6  
                                       u1530 0106                                         u1371 0518  
                                       u1451 0786                                         u1291 05F2  
                                       u1531 0102                                         u1380 0536  
                                       u1460 07A8                                         u1540 0122  
                                       u1381 0532                                         u1461 07A4  
                                       u1541 011E                                         u1390 055C  
                                       u1470 07BE                                         u1391 0558  
                                       u1471 07BA                                         u1607 028A  
                                       u1480 07E2                                         u1481 07DE  
                                       u1557 0168                                         u1567 01A2  
                                       u1577 01DC                                         u1587 0216  
                                       u1597 0250                                         _Btn1 002F  
                                       _Btn2 002C                                         _Btn3 0029  
                     ??_gpio_Pin_Write_Logic 005F                                         _main 0012  
               gpio_Pin_Intialize@pin_config 0066                   __end_of_button_read_status 068C  
                                       fsr2h 000FDA                                         indf2 000FDF  
                                       fsr1l 000FE1                                         fsr2l 000FD9  
                                       btemp 006E                     __end_of_interruptManager 0C70  
                                       prodl 000FF3                                         start 000E  
                   _RB5_interruptHandler_LOW 004B                                 ___param_bank 000000  
                                ?_TIMER1_ISR 005A                                        ?_main 005A  
                            __end_of___awdiv 05CE                              __end_of___awmod 07F4  
                            ___awdiv@divisor 005E                                        i2l406 0C64  
                                      i2l557 0A16                                        i2l479 0C38  
                            ___awdiv@counter 0060                                        _TMR1H 000FCF  
                                      _TMR1L 000FCE                                        _PORTA 000F80  
                                      _PORTB 000F81                                        _PORTC 000F82  
                                      _PORTD 000F83                                        _PORTE 000F84  
                                      _TRISA 000F92                                        _TRISB 000F93  
                                      _TRISC 000F94                                        _TRISD 000F95  
                                      _TRISE 000F96                                _Button1Status 003A  
                              _Button2Status 0039                                        _Hours 0057  
                              _Button3Status 0038               gpio_Pin_Write_Logic@pin_config 005C  
                      __end_of_Timer1_DeInit 0CB0                   __end_of_gpio_Pin_Intialize 0A7A  
                                      pclath 000FFA                                        pclatu 000FFB  
                                      tablat 000FF5                                        ttemp5 006F  
                                      ttemp6 0072                                        ttemp7 0076  
                                      status 000FD8                                        wtemp8 006F  
                   ??_timer1_select_reg_mode 005E                              __initialization 0BC8  
                               __end_of_main 029A        gpio_Pin_Derction_Intialize@pin_config 005C  
                              _lat_registers 000B                                       ??_main 006D  
                              __activetblptr 000002                            Timer1_Init@_timer 005E  
                           ___awdiv@dividend 005C                                       i2l1341 09AE  
                                     i2l1351 09E2                                       i2l1343 09B2  
                                     i2l1361 0A00                                       i2l1353 09E4  
                                     i2l1345 09C6                                       i2l1363 0A12  
                                     i2l1355 09E8                                       i2l1347 09C8  
                                     i2l1357 09FA                                       i2l1349 09D0  
                                     i2l1359 09FC                                       i2l1481 0C0C  
                                     i2l1483 0C1E                                       i2l1475 0C02  
                                     i2l1477 0C04                                       i2l1479 0C08  
                                     i2l1991 0C52                                       i2l1993 0C60  
                                     i2l1989 0C44                        _gpio_Port_Write_Logic 0B52  
                              ??_Timer1_Init 0060                gpio_Pin_Read_Logic@pin_config 005C  
                                 _Timer1_Obj 001F               button_read_status@button_logic 006A  
        __end_of_gpio_Pin_Derction_Intialize 03DE                  _gpio_Pin_Derction_Intialize 029A  
                                  ??___awdiv 0060                                    ??___awmod 0060  
                __end_of_gpio_Pin_Read_Logic 08A2                                       clear_0 0BEE  
                           ___awdiv@quotient 0062                              ___awmod@divisor 005E  
                                     isa$std 000001                              ___awmod@counter 0060  
                               __pdataCOMRAM 0001                                       tblptrh 000FF7  
                                     tblptrl 000FF6                                       tblptru 000FF8  
                          ?_Timer1_Interrupt 005A                           ??_Timer1_Interrupt 005A  
                   _timer1_oscillator_enable 0B14                                   __accesstop 0080  
                    __end_of__initialization 0BF4                           button_inialize@btn 0065  
                              ___rparam_used 000001                               __pcstackCOMRAM 005A  
                        __end_of_Timer1_Init 0744                              _button_inialize 0C70  
                    gpio_Pin_Write_Logic@ret 0065                       ?_gpio_Port_Write_Logic 005C  
                      _INT0_InterruptHandler 0055                            ?_interruptManager 005A  
                         ??_interruptManager 005A                                 ??_TIMER1_ISR 005A  
                         _button_read_status 05CE               gpio_Pin_Derction_Intialize@ret 0064  
                     _timer1_select_reg_mode 0AD6                          ?_button_read_status 0065  
                   _seven_segment_initialize 0A7A               timer1_oscillator_enable@_timer 005C  
                                    i2u25_40 09C6                                      i2u25_41 09C2  
                                    i2u26_40 09E2                                      i2u26_41 09DE  
                                    i2u27_40 09FA                                      i2u43_40 0C1E  
                                    i2u27_41 09F6                                      i2u43_41 0C1A  
                                    i2u28_40 0A12                                      i2u28_41 0A0E  
                                    i2u44_48 0C24                                      i2u44_49 0C38  
                                    i2u92_40 0C52                                      i2u92_41 0C4E  
                                    i2u93_40 0C60                                      i2u93_41 0C5C  
                seven_segment_initialize@seg 006A                  seven_segment_initialize@ret 006C  
                  _RB4_interruptHandler_HIGH 004D                    _RB7_interruptHandler_HIGH 0041  
                             _tris_registers 0015                                      _Enable1 0037  
                                    _Enable2 0036                                      _Enable3 0035  
                                    _Enable4 0034                                      _Enable5 0033  
                                    _Enable6 0032                           __end_of_TIMER1_ISR 0C3A  
                   _RB4_interruptHandler_LOW 004F                                      _Seg_Obj 0024  
                       ??_button_read_status 0069                     _RB7_interruptHandler_LOW 0043  
                                    __Hparam 0000                   gpio_Port_Write_Logic@logic 005C  
                                    _Minutes 0058                                      _Seconds 0059  
                                _Timer1_Init 068C                                      __Lparam 0000  
                    __end_of_button_inialize 0C94                           _gpio_Pin_Intialize 0A18  
                                    ___awdiv 050A                                      ___awmod 0744  
                                  _CMCONbits 000FB4                                      __pcinit 0BC8  
                                    __ramtop 1000                                      __ptext0 0012  
                                    __ptext1 08A2                                      __ptext2 0A7A  
                                    __ptext3 0A18                                      __ptext4 03DE  
                                    __ptext5 0B52                                      __ptext6 05CE  
                                    __ptext7 07F4                                      __ptext8 0C70  
                                    __ptext9 029A                          ?_gpio_Pin_Intialize 0066  
                                  _T1CONbits 000FCD                             ___awmod@dividend 005C  
                             __pintcode_body 0C3A                         end_of_initialization 0BF4  
                              __Lmediumconst 0000                                      int_func 0C3A  
                       ??_gpio_Pin_Intialize 0068                                      postdec1 000FE5  
                                    postdec2 000FDD                                      postinc0 000FEE  
                                    postinc2 000FDE                        _INT1_InterruptHandler 0053  
                 ??_timer1_oscillator_enable 005E                             ?_button_inialize 0065  
                              __pidataCOMRAM 0B8E                          start_initialization 0BC8  
               ??_seven_segment_write_number 0069                          Timer1_DeInit@_timer 005C  
                    ??_gpio_Port_Write_Logic 005D                                _Timer1_DeInit 0C94  
                 ??_seven_segment_initialize 006C                      ?_timer1_select_reg_mode 005C  
               button_read_status@btn_status 0067                        gpio_Pin_Intialize@ret 0069  
                                __pbssCOMRAM 003B                               _preload_timer1 003D  
                             ?_Timer1_DeInit 005C                        _INT2_InterruptHandler 0051  
                               ?_Timer1_Init 005E                                    __pintcode 0008  
                                   ?___awdiv 005C                                     ?___awmod 005C  
             __end_of_timer1_select_reg_mode 0B14                      _TIMER1_interruptHandler 003F  
               __end_of_gpio_Pin_Write_Logic 050A                                _TimerOverFlow 003B  
           __end_of_timer1_oscillator_enable 0B52                        button_read_status@btn 0065  
                  _RB5_interruptHandler_HIGH 0049                                     _PIE1bits 000F9D  
                   _RB6_interruptHandler_LOW 0047                             _Timer1_Interrupt 09AE  
                                   _PIR1bits 000F9E                 ?_gpio_Pin_Derction_Intialize 005C  
                                 _ADCON1bits 000FC1  __end_of_timer1_select_mode_timer_or_counter 09AE  
      ??_timer1_select_mode_timer_or_counter 005E         ?_timer1_select_mode_timer_or_counter 005C  
        _timer1_select_mode_timer_or_counter 0930           __end_of_seven_segment_write_number 0930  
                 _seven_segment_write_number 08A2                              ??_Timer1_DeInit 005E  
                                  copy_data0 0BDC                    gpio_Pin_Write_Logic@logic 005E  
                        _gpio_Pin_Read_Logic 07F4                                     __Hrparam 0000  
                                   __Lrparam 0000             __end_of_seven_segment_initialize 0AD6  
              seven_segment_write_number@seg 0066                seven_segment_write_number@ret 0069  
              ??_gpio_Pin_Derction_Intialize 005E                             _interruptManager 0008  
                       ?_gpio_Pin_Read_Logic 005C                                     __ptext10 0744  
                                   __ptext11 050A                                     __ptext20 0000  
                                   __ptext12 068C                                     __ptext13 0AD6  
                                   __ptext14 0930                                     __ptext15 0B14  
                                   __ptext16 0C94                                     __ptext18 0C02  
                                   __ptext19 09AE                __end_of_gpio_Port_Write_Logic 0B8E  
                       _gpio_Pin_Write_Logic 03DE                    ?_timer1_oscillator_enable 005C  
                                   isa$xinst 000000                                     int$flags 006E  
               timer1_select_reg_mode@_timer 005C                        ??_gpio_Pin_Read_Logic 0060  
           seven_segment_write_number@number 0068                                   _INTCONbits 000FF2  
                  gpio_Port_Write_Logic@port 005F                                     intlevel2 0000  
                      ?_gpio_Pin_Write_Logic 005C                     gpio_Pin_Read_Logic@logic 005E  
                        fp__Timer1_Interrupt 0000                                   _TIMER1_ISR 0C02  
                             _port_registers 0001                     __end_of_Timer1_Interrupt 0A18  
                  ?_seven_segment_initialize 006A    timer1_select_mode_timer_or_counter@_timer 005C  
